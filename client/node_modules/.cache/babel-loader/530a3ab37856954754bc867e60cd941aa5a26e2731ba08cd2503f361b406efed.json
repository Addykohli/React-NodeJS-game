{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\addhy\\\\Desktop\\\\Business_web\\\\client\\\\src\\\\components\\\\Board.js\",\n  _s = $RefreshSig$();\n// src/components/Board.js\nimport React, { useContext, useState, useEffect, useCallback } from 'react';\nimport { GameContext } from '../context/GameContext';\nimport boardImage from '../assets/board.png';\nimport { tiles } from '../data/tiles';\nimport piece1 from '../assets/pieces/piece1.png';\nimport piece2 from '../assets/pieces/piece2.png';\nimport piece3 from '../assets/pieces/piece3.png';\nimport piece4 from '../assets/pieces/piece4.png';\nimport piece5 from '../assets/pieces/piece5.png';\nimport piece6 from '../assets/pieces/piece6.png';\nimport piece7 from '../assets/pieces/piece7.png';\nimport piece8 from '../assets/pieces/piece8.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst pieceMap = {\n  piece1,\n  piece2,\n  piece3,\n  piece4,\n  piece5,\n  piece6,\n  piece7,\n  piece8\n};\nconst Board = () => {\n  _s();\n  const {\n    players\n  } = useContext(GameContext);\n\n  // For debugging click coordinates\n  const [coords, setCoords] = useState({\n    x: null,\n    y: null\n  });\n  // Store the board's natural image size\n  const [naturalSize, setNaturalSize] = useState({\n    width: 600,\n    height: 600\n  });\n\n  // Load the board image to get its natural dimensions\n  useEffect(() => {\n    const img = new Image();\n    img.onload = () => {\n      setNaturalSize({\n        width: img.width,\n        height: img.height\n      });\n    };\n    img.src = boardImage;\n  }, []);\n\n  // Handle clicks, scaling from rendered size back to natural pixels\n  const handleClick = useCallback(e => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const scaleX = naturalSize.width / rect.width;\n    const scaleY = naturalSize.height / rect.height;\n    let x = Math.round((e.clientX - rect.left) * scaleX);\n    let y = Math.round((e.clientY - rect.top) * scaleY);\n\n    // Clamp within [0, naturalSize]\n    x = Math.max(0, Math.min(naturalSize.width, x));\n    y = Math.max(0, Math.min(naturalSize.height, y));\n    console.log(`Tile Coordinates: (${x}, ${y})`);\n    setCoords({\n      x,\n      y\n    });\n  }, [naturalSize]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center',\n      marginTop: '20px'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: handleClick,\n      style: {\n        position: 'relative',\n        width: `${naturalSize.width}px`,\n        height: `${naturalSize.height}px`,\n        backgroundImage: `url(${boardImage})`,\n        backgroundSize: '100% 100%',\n        backgroundRepeat: 'no-repeat',\n        backgroundPosition: 'center',\n        border: '3px solid #333',\n        overflow: 'visible',\n        margin: '0 auto'\n      },\n      children: [players.map((p, i) => {\n        // Only render if they've chosen a piece\n        if (!p.piece) return null;\n        const pieceImg = pieceMap[p.piece];\n        if (!pieceImg) return null;\n\n        // Default to tile 1 (Start) if no tileId yet\n        const tile = tiles.find(t => t.id === (p.tileId || 1));\n        const pos = (tile === null || tile === void 0 ? void 0 : tile.position) || {\n          x: 0,\n          y: 0\n        };\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          src: pieceImg,\n          alt: p.name,\n          title: p.name,\n          style: {\n            position: 'absolute',\n            // stagger overlapping pieces by index\n            top: pos.y + i * 8,\n            left: pos.x + i * 8,\n            width: 30,\n            height: 30,\n            transform: 'translate(-50%, -50%)',\n            transition: 'top 0.3s, left 0.3s'\n          }\n        }, p.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this);\n      }), coords.x !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          top: 10,\n          left: 10,\n          backgroundColor: 'rgba(255, 255, 255, 0.9)',\n          padding: '4px 8px',\n          fontSize: '14px',\n          border: '1px solid #ccc',\n          borderRadius: '4px'\n        },\n        children: [\"Tile: (\", coords.x, \", \", coords.y, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(Board, \"Cw4Qwq/lKCXMqVwHSmqjmTp+QN4=\");\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useContext","useState","useEffect","useCallback","GameContext","boardImage","tiles","piece1","piece2","piece3","piece4","piece5","piece6","piece7","piece8","jsxDEV","_jsxDEV","pieceMap","Board","_s","players","coords","setCoords","x","y","naturalSize","setNaturalSize","width","height","img","Image","onload","src","handleClick","e","rect","currentTarget","getBoundingClientRect","scaleX","scaleY","Math","round","clientX","left","clientY","top","max","min","console","log","style","textAlign","marginTop","children","onClick","position","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","border","overflow","margin","map","p","i","piece","pieceImg","tile","find","t","id","tileId","pos","alt","name","title","transform","transition","fileName","_jsxFileName","lineNumber","columnNumber","backgroundColor","padding","fontSize","borderRadius","_c","$RefreshReg$"],"sources":["C:/Users/addhy/Desktop/Business_web/client/src/components/Board.js"],"sourcesContent":["// src/components/Board.js\nimport React, { useContext, useState, useEffect, useCallback } from 'react';\nimport { GameContext } from '../context/GameContext';\nimport boardImage from '../assets/board.png';\nimport { tiles } from '../data/tiles';\n\nimport piece1 from '../assets/pieces/piece1.png';\nimport piece2 from '../assets/pieces/piece2.png';\nimport piece3 from '../assets/pieces/piece3.png';\nimport piece4 from '../assets/pieces/piece4.png';\nimport piece5 from '../assets/pieces/piece5.png';\nimport piece6 from '../assets/pieces/piece6.png';\nimport piece7 from '../assets/pieces/piece7.png';\nimport piece8 from '../assets/pieces/piece8.png';\n\nconst pieceMap = {\n  piece1,\n  piece2,\n  piece3,\n  piece4,\n  piece5,\n  piece6,\n  piece7,\n  piece8,\n};\n\nconst Board = () => {\n  const { players } = useContext(GameContext);\n\n  // For debugging click coordinates\n  const [coords, setCoords] = useState({ x: null, y: null });\n  // Store the board's natural image size\n  const [naturalSize, setNaturalSize] = useState({ width: 600, height: 600 });\n\n  // Load the board image to get its natural dimensions\n  useEffect(() => {\n    const img = new Image();\n    img.onload = () => {\n      setNaturalSize({ width: img.width, height: img.height });\n    };\n    img.src = boardImage;\n  }, []);\n\n  // Handle clicks, scaling from rendered size back to natural pixels\n  const handleClick = useCallback((e) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const scaleX = naturalSize.width / rect.width;\n    const scaleY = naturalSize.height / rect.height;\n\n    let x = Math.round((e.clientX - rect.left) * scaleX);\n    let y = Math.round((e.clientY - rect.top) * scaleY);\n\n    // Clamp within [0, naturalSize]\n    x = Math.max(0, Math.min(naturalSize.width, x));\n    y = Math.max(0, Math.min(naturalSize.height, y));\n\n    console.log(`Tile Coordinates: (${x}, ${y})`);\n    setCoords({ x, y });\n  }, [naturalSize]);\n\n  return (\n    <div style={{ textAlign: 'center', marginTop: '20px' }}>\n      <div\n        onClick={handleClick}\n        style={{\n          position: 'relative',\n          width: `${naturalSize.width}px`,\n          height: `${naturalSize.height}px`,\n          backgroundImage: `url(${boardImage})`,\n          backgroundSize: '100% 100%',\n          backgroundRepeat: 'no-repeat',\n          backgroundPosition: 'center',\n          border: '3px solid #333',\n          overflow: 'visible',\n          margin: '0 auto',\n        }}\n      >\n        {players.map((p, i) => {\n          // Only render if they've chosen a piece\n          if (!p.piece) return null;\n          const pieceImg = pieceMap[p.piece];\n          if (!pieceImg) return null;\n\n          // Default to tile 1 (Start) if no tileId yet\n          const tile = tiles.find(t => t.id === (p.tileId || 1));\n          const pos = tile?.position || { x: 0, y: 0 };\n\n          return (\n            <img\n              key={p.name}\n              src={pieceImg}\n              alt={p.name}\n              title={p.name}\n              style={{\n                position: 'absolute',\n                // stagger overlapping pieces by index\n                top: pos.y + i * 8,\n                left: pos.x + i * 8,\n                width: 30,\n                height: 30,\n                transform: 'translate(-50%, -50%)',\n                transition: 'top 0.3s, left 0.3s',\n              }}\n            />\n          );\n        })}\n\n        {coords.x !== null && (\n          <div\n            style={{\n              position: 'absolute',\n              top: 10,\n              left: 10,\n              backgroundColor: 'rgba(255, 255, 255, 0.9)',\n              padding: '4px 8px',\n              fontSize: '14px',\n              border: '1px solid #ccc',\n              borderRadius: '4px',\n            }}\n          >\n            Tile: ({coords.x}, {coords.y})\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Board;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}