{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\addhy\\\\Desktop\\\\Business_web\\\\client\\\\src\\\\components\\\\DiceRoller.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from 'react';\nimport { GameContext } from '../context/GameContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DiceRoller = () => {\n  _s();\n  var _players$currentPlaye;\n  const {\n    player,\n    players,\n    currentPlayerIndex,\n    setOriginalCount,\n    isMoving,\n    setIsMoving,\n    setCurrentPlayerIndex\n  } = useContext(GameContext);\n  const [diceRoll, setDiceRoll] = useState(null);\n  const isMyTurn = ((_players$currentPlaye = players[currentPlayerIndex]) === null || _players$currentPlaye === void 0 ? void 0 : _players$currentPlaye.name) === (player === null || player === void 0 ? void 0 : player.name);\n  const rollDice = () => {\n    if (!isMyTurn || isMoving || diceRoll) return;\n    const d1 = Math.ceil(Math.random() * 6);\n    const d2 = Math.ceil(Math.random() * 6);\n    setDiceRoll([d1, d2]);\n    setOriginalCount(d1 + d2);\n    setIsMoving(true);\n  };\n  const handleDone = () => {\n    setDiceRoll(null);\n    setIsMoving(false);\n    setCurrentPlayerIndex((currentPlayerIndex + 1) % players.length);\n  };\n  if (!isMyTurn) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'absolute',\n      top: 20,\n      left: '50%',\n      transform: 'translateX(-50%)',\n      background: '#fff',\n      padding: 10,\n      border: '1px solid #444',\n      borderRadius: 8,\n      zIndex: 1000\n    },\n    children: [!diceRoll && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: rollDice,\n      children: \"Roll Dice\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }, this), diceRoll && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: '10px 0'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `/dice/dice${diceRoll[0]}.png`,\n          alt: `die ${diceRoll[0]}`,\n          width: 50\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `/dice/dice${diceRoll[1]}.png`,\n          alt: `die ${diceRoll[1]}`,\n          width: 50\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), !isMoving && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDone,\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(DiceRoller, \"tU1qUm3P6q52v0HdgouJNRirFYk=\");\n_c = DiceRoller;\nexport default DiceRoller;\nvar _c;\n$RefreshReg$(_c, \"DiceRoller\");","map":{"version":3,"names":["React","useContext","useState","GameContext","jsxDEV","_jsxDEV","DiceRoller","_s","_players$currentPlaye","player","players","currentPlayerIndex","setOriginalCount","isMoving","setIsMoving","setCurrentPlayerIndex","diceRoll","setDiceRoll","isMyTurn","name","rollDice","d1","Math","ceil","random","d2","handleDone","length","style","position","top","left","transform","background","padding","border","borderRadius","zIndex","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","textAlign","margin","src","alt","width","_c","$RefreshReg$"],"sources":["C:/Users/addhy/Desktop/Business_web/client/src/components/DiceRoller.js"],"sourcesContent":["import React, { useContext, useState } from 'react';\nimport { GameContext } from '../context/GameContext';\n\nconst DiceRoller = () => {\n  const {\n    player, players,\n    currentPlayerIndex,\n    setOriginalCount, isMoving,\n    setIsMoving, setCurrentPlayerIndex\n  } = useContext(GameContext);\n\n  const [diceRoll, setDiceRoll] = useState(null);\n  const isMyTurn = players[currentPlayerIndex]?.name === player?.name;\n\n  const rollDice = () => {\n    if (!isMyTurn || isMoving || diceRoll) return;\n    const d1 = Math.ceil(Math.random() * 6);\n    const d2 = Math.ceil(Math.random() * 6);\n    setDiceRoll([d1, d2]);\n    setOriginalCount(d1 + d2);\n    setIsMoving(true);\n  };\n\n  const handleDone = () => {\n    setDiceRoll(null);\n    setIsMoving(false);\n    setCurrentPlayerIndex((currentPlayerIndex + 1) % players.length);\n  };\n\n  if (!isMyTurn) return null;\n\n  return (\n    <div style={{\n      position: 'absolute', top: 20, left: '50%',\n      transform: 'translateX(-50%)', background: '#fff',\n      padding: 10, border: '1px solid #444', borderRadius: 8, zIndex: 1000\n    }}>\n      {!diceRoll && <button onClick={rollDice}>Roll Dice</button>}\n\n      {diceRoll && (\n        <div style={{ textAlign: 'center' }}>\n          <div style={{ margin: '10px 0' }}>\n            <img src={`/dice/dice${diceRoll[0]}.png`} alt={`die ${diceRoll[0]}`} width={50} />\n            <img src={`/dice/dice${diceRoll[1]}.png`} alt={`die ${diceRoll[1]}`} width={50} />\n          </div>\n          {!isMoving && <button onClick={handleDone}>Done</button>}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default DiceRoller;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}