{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\addhy\\\\Desktop\\\\Business_web\\\\client\\\\src\\\\components\\\\DiceRoller.js\",\n  _s = $RefreshSig$();\n// src/components/DiceRoller.js\nimport React, { useState, useEffect, useContext } from 'react';\nimport { GameContext } from '../context/GameContext';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function DiceRoller() {\n  _s();\n  const {\n    player,\n    currentPlayerId,\n    socket\n  } = useContext(GameContext);\n  const [dice, setDice] = useState(null);\n  const [done, setDone] = useState(false);\n  const [branchOptions, setBranchOptions] = useState(null);\n\n  // register all socket listeners exactly once\n  useEffect(() => {\n    console.log('[DiceRoller] mounted, player:', player, 'currentTurn:', currentPlayerId);\n    const onDiceResult = ({\n      playerId,\n      die1,\n      die2,\n      total\n    }) => {\n      console.log('[DiceRoller] diceResult →', {\n        playerId,\n        die1,\n        die2,\n        total\n      });\n      if (playerId === (player === null || player === void 0 ? void 0 : player.socketId)) {\n        setDice([die1, die2]);\n        setDone(false);\n      }\n    };\n    const onBranchChoices = ({\n      options\n    }) => {\n      console.log('[DiceRoller] branchChoices →', options);\n      setBranchOptions(options);\n    };\n    const onMovementDone = () => {\n      console.log('[DiceRoller] movementDone');\n      setDone(true);\n    };\n    socket.on('diceResult', onDiceResult);\n    socket.on('branchChoices', onBranchChoices);\n    socket.on('movementDone', onMovementDone);\n    return () => {\n      socket.off('diceResult', onDiceResult);\n      socket.off('branchChoices', onBranchChoices);\n      socket.off('movementDone', onMovementDone);\n    };\n  }, [player, currentPlayerId, socket]);\n\n  // only the active player sees this\n  if (!player || player.socketId !== currentPlayerId) {\n    //console.log('[DiceRoller] not your turn or no player yet');\n    return null;\n  }\n  console.log('[DiceRoller] render →', {\n    dice,\n    done,\n    branchOptions\n  });\n  const handleRoll = () => {\n    console.log('[DiceRoller] emit rollDice');\n    socket.emit('rollDice');\n    setBranchOptions(null);\n  };\n  const handleDone = () => {\n    console.log('[DiceRoller] emit endTurn');\n    socket.emit('endTurn');\n    setDice(null);\n    setDone(false);\n    setBranchOptions(null);\n  };\n  const chooseBranch = idx => {\n    console.log('[DiceRoller] emit branchChoice →', idx);\n    socket.emit('branchChoice', idx);\n    setBranchOptions(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'absolute',\n      top: '12%',\n      left: '50%',\n      transform: 'translateX(-50%)',\n      background: '#fff',\n      border: '2px solid #333',\n      borderRadius: '12px',\n      padding: '1rem',\n      boxShadow: '0 4px 10px rgba(0,0,0,0.2)',\n      zIndex: 1000,\n      textAlign: 'center'\n    },\n    children: [!dice && !branchOptions && !done && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRoll,\n        children: \"Roll Dice\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), console.log('[DiceRoller] showing Roll button')]\n    }, void 0, true), dice && !branchOptions && !done && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [console.log('[DiceRoller] showing dice images', dice), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'center',\n          gap: '10px',\n          margin: '1rem 0'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `/dice/dice${dice[0]}.png`,\n          alt: `Die ${dice[0]}`,\n          width: 50\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `/dice/dice${dice[1]}.png`,\n          alt: `Die ${dice[1]}`,\n          width: 50\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), branchOptions && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [console.log('[DiceRoller] showing branch options', branchOptions), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: '1rem 0'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Choose your path:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this), branchOptions.map((to, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => chooseBranch(i),\n          style: {\n            margin: '0 0.5rem'\n          },\n          children: [\"\\u2192 \", to]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), done && !branchOptions && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDone,\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this), console.log('[DiceRoller] showing Done button')]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(DiceRoller, \"er660X99azrIvSQq0/jM/TcLuyI=\");\n_c = DiceRoller;\nvar _c;\n$RefreshReg$(_c, \"DiceRoller\");","map":{"version":3,"names":["React","useState","useEffect","useContext","GameContext","jsxDEV","_jsxDEV","Fragment","_Fragment","DiceRoller","_s","player","currentPlayerId","socket","dice","setDice","done","setDone","branchOptions","setBranchOptions","console","log","onDiceResult","playerId","die1","die2","total","socketId","onBranchChoices","options","onMovementDone","on","off","handleRoll","emit","handleDone","chooseBranch","idx","style","position","top","left","transform","background","border","borderRadius","padding","boxShadow","zIndex","textAlign","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","gap","margin","src","alt","width","map","to","i","_c","$RefreshReg$"],"sources":["C:/Users/addhy/Desktop/Business_web/client/src/components/DiceRoller.js"],"sourcesContent":["// src/components/DiceRoller.js\r\nimport React, { useState, useEffect, useContext } from 'react';\r\nimport { GameContext } from '../context/GameContext';\r\n\r\nexport default function DiceRoller() {\r\n  const { player, currentPlayerId, socket } = useContext(GameContext);\r\n\r\n  const [dice, setDice] = useState(null);\r\n  const [done, setDone] = useState(false);\r\n  const [branchOptions, setBranchOptions] = useState(null);\r\n\r\n  // register all socket listeners exactly once\r\n  useEffect(() => {\r\n    console.log('[DiceRoller] mounted, player:', player, 'currentTurn:', currentPlayerId);\r\n\r\n    const onDiceResult = ({ playerId, die1, die2, total }) => {\r\n      console.log('[DiceRoller] diceResult →', { playerId, die1, die2, total });\r\n      if (playerId === player?.socketId) {\r\n        setDice([die1, die2]);\r\n        setDone(false);\r\n      }\r\n    };\r\n\r\n    const onBranchChoices = ({ options }) => {\r\n      console.log('[DiceRoller] branchChoices →', options);\r\n      setBranchOptions(options);\r\n    };\r\n\r\n    const onMovementDone = () => {\r\n      console.log('[DiceRoller] movementDone');\r\n      setDone(true);\r\n    };\r\n\r\n    socket.on('diceResult', onDiceResult);\r\n    socket.on('branchChoices', onBranchChoices);\r\n    socket.on('movementDone', onMovementDone);\r\n\r\n    return () => {\r\n      socket.off('diceResult', onDiceResult);\r\n      socket.off('branchChoices', onBranchChoices);\r\n      socket.off('movementDone', onMovementDone);\r\n    };\r\n  }, [player, currentPlayerId, socket]);\r\n\r\n  // only the active player sees this\r\n  if (!player || player.socketId !== currentPlayerId) {\r\n    //console.log('[DiceRoller] not your turn or no player yet');\r\n    return null;\r\n  }\r\n\r\n  console.log('[DiceRoller] render →', { dice, done, branchOptions });\r\n\r\n  const handleRoll = () => {\r\n    console.log('[DiceRoller] emit rollDice');\r\n    socket.emit('rollDice');\r\n    setBranchOptions(null);\r\n  };\r\n\r\n  const handleDone = () => {\r\n    console.log('[DiceRoller] emit endTurn');\r\n    socket.emit('endTurn');\r\n    setDice(null);\r\n    setDone(false);\r\n    setBranchOptions(null);\r\n  };\r\n\r\n  const chooseBranch = idx => {\r\n    console.log('[DiceRoller] emit branchChoice →', idx);\r\n    socket.emit('branchChoice', idx);\r\n    setBranchOptions(null);\r\n  };\r\n\r\n  return (\r\n    <div style={{\r\n      position: 'absolute',\r\n      top: '12%',\r\n      left: '50%',\r\n      transform: 'translateX(-50%)',\r\n      background: '#fff',\r\n      border: '2px solid #333',\r\n      borderRadius: '12px',\r\n      padding: '1rem',\r\n      boxShadow: '0 4px 10px rgba(0,0,0,0.2)',\r\n      zIndex: 1000,\r\n      textAlign: 'center'\r\n    }}>\r\n      {/* 1. Roll button */}\r\n      {!dice && !branchOptions && !done && (\r\n        <>\r\n          <button onClick={handleRoll}>Roll Dice</button>\r\n          {console.log('[DiceRoller] showing Roll button')}\r\n        </>\r\n      )}\r\n\r\n      {/* 2. Dice faces */}\r\n      {dice && !branchOptions && !done && (\r\n        <>\r\n          {console.log('[DiceRoller] showing dice images', dice)}\r\n          <div style={{ display: 'flex', justifyContent: 'center', gap: '10px', margin: '1rem 0' }}>\r\n            <img src={`/dice/dice${dice[0]}.png`} alt={`Die ${dice[0]}`} width={50} />\r\n            <img src={`/dice/dice${dice[1]}.png`} alt={`Die ${dice[1]}`} width={50} />\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n      {/* 3. Branch choices for exactly‐7 forks */}\r\n      {branchOptions && (\r\n        <>\r\n          {console.log('[DiceRoller] showing branch options', branchOptions)}\r\n          <div style={{ margin: '1rem 0' }}>\r\n            <p>Choose your path:</p>\r\n            {branchOptions.map((to, i) => (\r\n              <button key={i} onClick={() => chooseBranch(i)} style={{ margin: '0 0.5rem' }}>\r\n                → {to}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n      {/* 4. Done button */}\r\n      {done && !branchOptions && (\r\n        <>\r\n          <button onClick={handleDone}>Done</button>\r\n          {console.log('[DiceRoller] showing Done button')}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}