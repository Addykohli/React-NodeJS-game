{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\addhy\\\\Desktop\\\\Business_web\\\\client\\\\src\\\\context\\\\GameContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport socket from '../socket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GameContext = /*#__PURE__*/createContext();\nexport function GameProvider({\n  children\n}) {\n  _s();\n  const [player, setPlayer] = useState(null);\n  const [players, setPlayers] = useState([]);\n  const [currentPlayerId, setCurrentPlayerId] = useState(null);\n  const [sessionId, setSessionId] = useState(null);\n  const [gameState, setGameState] = useState('lobby');\n  const [diceRoll, setDiceRoll] = useState(null);\n\n  // Update \"local\" player whenever the list changes\n  const updateLocal = list => {\n    const me = list.find(p => p.socketId === socket.id);\n    setPlayer(me || null);\n  };\n  useEffect(() => {\n    socket.on('lobbyUpdate', list => {\n      setPlayers(list);\n      updateLocal(list);\n    });\n    socket.on('gameStart', ({\n      players: pl,\n      sessionId: sid,\n      currentPlayerId: cp\n    }) => {\n      setPlayers(pl);\n      updateLocal(pl);\n      setSessionId(sid);\n      setCurrentPlayerId(cp);\n      setGameState('playing');\n    });\n    socket.on('diceResult', ({\n      playerId,\n      die1,\n      die2\n    }) => {\n      setDiceRoll({\n        playerId,\n        die1,\n        die2\n      });\n    });\n    socket.on('playerMoved', ({\n      playerId,\n      tileId\n    }) => {\n      setPlayers(prev => prev.map(p => p.socketId === playerId ? {\n        ...p,\n        tileId\n      } : p));\n    });\n    socket.on('turnEnded', ({\n      nextPlayerId\n    }) => {\n      setCurrentPlayerId(nextPlayerId);\n      setDiceRoll(null);\n    });\n    return () => {\n      socket.off('lobbyUpdate');\n      socket.off('gameStart');\n      socket.off('diceResult');\n      socket.off('playerMoved');\n      socket.off('turnEnded');\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(GameContext.Provider, {\n    value: {\n      player,\n      setPlayer,\n      players,\n      setPlayers,\n      currentPlayerId,\n      setCurrentPlayerId,\n      sessionId,\n      setSessionId,\n      gameState,\n      setGameState,\n      diceRoll,\n      setDiceRoll,\n      socket\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(GameProvider, \"Vv+39SSBkJQlchF/+6fFLr0XR1g=\");\n_c = GameProvider;\nvar _c;\n$RefreshReg$(_c, \"GameProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","socket","jsxDEV","_jsxDEV","GameContext","GameProvider","children","_s","player","setPlayer","players","setPlayers","currentPlayerId","setCurrentPlayerId","sessionId","setSessionId","gameState","setGameState","diceRoll","setDiceRoll","updateLocal","list","me","find","p","socketId","id","on","pl","sid","cp","playerId","die1","die2","tileId","prev","map","nextPlayerId","off","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/addhy/Desktop/Business_web/client/src/context/GameContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nimport socket from '../socket';\r\n\r\nexport const GameContext = createContext();\r\n\r\nexport function GameProvider({ children }) {\r\n  const [player, setPlayer] = useState(null);\r\n  const [players, setPlayers] = useState([]);\r\n  const [currentPlayerId, setCurrentPlayerId] = useState(null);\r\n  const [sessionId, setSessionId] = useState(null);\r\n  const [gameState, setGameState] = useState('lobby');\r\n  const [diceRoll, setDiceRoll] = useState(null);\r\n\r\n  // Update \"local\" player whenever the list changes\r\n  const updateLocal = list => {\r\n    const me = list.find(p => p.socketId === socket.id);\r\n    setPlayer(me || null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket.on('lobbyUpdate', list => {\r\n      setPlayers(list);\r\n      updateLocal(list);\r\n    });\r\n\r\n    socket.on('gameStart', ({ players: pl, sessionId: sid, currentPlayerId: cp }) => {\r\n      setPlayers(pl);\r\n      updateLocal(pl);\r\n      setSessionId(sid);\r\n      setCurrentPlayerId(cp);\r\n      setGameState('playing');\r\n    });\r\n\r\n    socket.on('diceResult', ({ playerId, die1, die2 }) => {\r\n      setDiceRoll({ playerId, die1, die2 });\r\n    });\r\n\r\n    socket.on('playerMoved', ({ playerId, tileId }) => {\r\n      setPlayers(prev => prev.map(p => p.socketId === playerId ? { ...p, tileId } : p));\r\n    });\r\n\r\n    socket.on('turnEnded', ({ nextPlayerId }) => {\r\n      setCurrentPlayerId(nextPlayerId);\r\n      setDiceRoll(null);\r\n    });\r\n\r\n    return () => {\r\n      socket.off('lobbyUpdate');\r\n      socket.off('gameStart');\r\n      socket.off('diceResult');\r\n      socket.off('playerMoved');\r\n      socket.off('turnEnded');\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <GameContext.Provider value={{\r\n      player,\r\n      setPlayer,\r\n      players,\r\n      setPlayers,\r\n      currentPlayerId,\r\n      setCurrentPlayerId,\r\n      sessionId,\r\n      setSessionId,\r\n      gameState,\r\n      setGameState,\r\n      diceRoll,\r\n      setDiceRoll,\r\n      socket\r\n    }}>\r\n      {children}\r\n    </GameContext.Provider>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}