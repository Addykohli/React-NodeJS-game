{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\addhy\\\\Desktop\\\\Business_web - Copy (2)\\\\client\\\\src\\\\components\\\\PropertyDisplay.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext, useEffect } from 'react';\nimport { tiles } from '../data/tiles';\nimport { GameContext } from '../context/GameContext';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PropertyDisplay = () => {\n  _s();\n  const [expandedIndex, setExpandedIndex] = useState(null);\n  const {\n    player,\n    setPlayer,\n    currentPlayerId,\n    socket\n  } = useContext(GameContext);\n  const [keyInput, setKeyInput] = useState('');\n  useEffect(() => {\n    const handleKeyDown = e => {\n      console.log(`Key pressed: ${e.key}`); // Debug: Log each key press\n      if (e.key === 'Enter') {\n        console.log(`[DEBUG] Full input string before trimming: '${keyInput}'`); // Debug: Log the string before trimming\n        const commands = keyInput.trim().toLowerCase(); // Trim and convert to lowercase\n        console.log(`[DEBUG] Full input string after trimming and lowercasing: '${commands}'`); // Debug: Log the string after processing\n\n        console.log(`[DEBUG] Available property IDs:`, tiles.map(tile => tile.id)); // Debug: Log available IDs\n\n        // Process 'own#' commands\n        const ownMatches = commands.matchAll(/own(\\d+)/g);\n        const matchesArray = Array.from(ownMatches);\n        console.log(`[DEBUG] 'own#' matches found: ${matchesArray.length}`); // Debug: Log number of 'own#' matches\n        for (const match of matchesArray) {\n          const propertyIdString = match[1];\n          const propertyId = parseInt(propertyIdString, 10); // Convert to number\n          console.log(`[DEBUG] Processing 'own${propertyIdString}' (ID as number: ${propertyId})`); // Debug: Log each 'own#' being processed\n          const property = tiles.find(tile => tile.id === propertyId); // Use the numeric ID for matching\n          if (property) {\n            setPlayer(prev => ({\n              ...prev,\n              properties: [...(prev.properties || []), propertyId]\n            }));\n            console.log(`[TEST] Player ${currentPlayerId} now owns property ${propertyId}`);\n          } else {\n            console.log(`[DEBUG] Property ID ${propertyId} not found in tiles`); // Debug: Log if property is not found\n          }\n        }\n\n        // Process 'testroll' or 'diceroll' command with detailed debugging\n        console.log(`[DEBUG] Checking for 'testroll' or 'diceroll' in: '${commands}'`); // Debug: Log the string being checked\n        const testrollDetected = commands.includes('testroll');\n        console.log(`[DEBUG] 'testroll' includes check result: ${testrollDetected} (index: ${commands.indexOf('testroll') !== -1 ? commands.indexOf('testroll') : 'not found'}, full string: '${commands}', substring test details: commands.includes('testroll') = ${commands.includes('testroll')}, commands.search(/testroll/) = ${commands.search(/testroll/)} )`); // Debug: Log result and details for 'testroll'\n        const dicerollDetected = commands.includes('diceroll');\n        console.log(`[DEBUG] 'diceroll' includes check result: ${dicerollDetected} (index: ${commands.indexOf('diceroll') !== -1 ? commands.indexOf('diceroll') : 'not found'}, full string: '${commands}', substring test details: commands.includes('diceroll') = ${commands.includes('diceroll')}, commands.search(/diceroll/) = ${commands.search(/diceroll/)} )`); // Debug: Log result and details for 'diceroll'\n        if (testrollDetected || dicerollDetected) {\n          console.log(`[DEBUG] Command detected: 'testroll' or 'diceroll' (matched in '${commands}')`); // Debug: Log if either command is found\n          const dice1 = Math.floor(Math.random() * 6) + 1;\n          const dice2 = Math.floor(Math.random() * 6) + 1;\n          console.log(`[TEST] Simulated dice roll: ${dice1} and ${dice2}`);\n        } else {\n          console.log(`[DEBUG] 'testroll' or 'diceroll' not detected in '${commands}'. Did you mean 'testroll' or 'diceroll'?`); // Debug: Log if neither is found\n        }\n        setKeyInput(''); // Clear input after processing\n        console.log(`[DEBUG] Input cleared`); // Debug: Log that input has been cleared\n      } else if (e.key.match(/^[0-9a-z]$/i)) {\n        setKeyInput(prev => {\n          const newInput = prev + e.key;\n          console.log(`[DEBUG] Updated keyInput: '${newInput}'`); // Debug: Log updated keyInput\n          return newInput;\n        });\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [keyInput, currentPlayerId, setPlayer]);\n\n  // Get only current player's properties\n  const ownedProperties = tiles.filter(tile => tile.type === 'property').filter(tile => {\n    var _player$properties;\n    return player === null || player === void 0 ? void 0 : (_player$properties = player.properties) === null || _player$properties === void 0 ? void 0 : _player$properties.includes(tile.id);\n  });\n  const handlePropertyClick = index => {\n    // Don't allow clicking the last property as it's always expanded\n    if (index === ownedProperties.length - 1) return;\n    const clickedProperty = ownedProperties[index];\n    console.log(`[clicked on property name: ${clickedProperty.name}]`);\n    if (expandedIndex === index) {\n      // Collapsing current property\n      const movingProperties = ownedProperties.slice(index + 1, -1).map(p => p.name).join(', ');\n      console.log(`moving ${movingProperties} back to initial positions`);\n    } else {\n      // Expanding new property\n      const movingProperties = ownedProperties.slice(index + 1).map(p => p.name).join(', ');\n      console.log(`moving ${movingProperties} to expanded positions`);\n    }\n    setExpandedIndex(expandedIndex === index ? null : index);\n  };\n  const renderPropertyStack = (position, playerIndex) => {\n    const isLeftSide = position === 'left';\n    const containerStyle = {\n      position: 'absolute',\n      display: 'flex',\n      alignItems: 'flex-start',\n      overflow: 'visible',\n      ...(isLeftSide ? {\n        // Left side stack\n        flexDirection: 'column',\n        right: 'calc(100% + 235px)',\n        // Keep the existing right offset\n        height: '800px',\n        // Match board height\n        top: playerIndex === 0 ? '0%' : '50%',\n        // Split vertically between two players\n        bottom: playerIndex === 0 ? '50%' : '0%',\n        justifyContent: 'center'\n      } : {\n        // Top stack (existing style)\n        top: '100%',\n        left: '50%',\n        transform: 'translateX(calc(-50% + 50px))',\n        height: '280px',\n        marginTop: '-3px',\n        width: '800px',\n        justifyContent: 'center'\n      })\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: containerStyle,\n      children: ownedProperties.map((property, index) => {\n        const isLastProperty = index === ownedProperties.length - 1;\n        const isExpanded = isLastProperty || expandedIndex === index;\n\n        // Calculate base position\n        const basePosition = isLeftSide ? index * 42 :\n        // Vertical spacing for left side\n        index * 56; // Horizontal spacing for top\n\n        // Calculate additional offset based on expanded state\n        let expandedOffset = 0;\n        if (expandedIndex !== null) {\n          if (index > expandedIndex) {\n            expandedOffset = isLeftSide ? 154 :\n            // Vertical offset\n            154; // Horizontal offset (unchanged)\n          }\n        }\n\n        // Calculate final position\n        const finalPosition = basePosition + expandedOffset;\n        const cardStyle = {\n          width: '210px',\n          height: '280px',\n          border: '2px solid #666',\n          borderRadius: '12px',\n          position: 'absolute',\n          transition: 'all 0.3s ease',\n          zIndex: isExpanded ? ownedProperties.length : index,\n          display: 'flex',\n          flexDirection: 'column',\n          padding: '14px',\n          boxSizing: 'border-box',\n          backgroundColor: 'rgb(173, 216, 230)',\n          cursor: isLastProperty ? 'default' : 'pointer',\n          ...(isLeftSide ? {\n            top: finalPosition,\n            transform: 'rotate(90deg)',\n            transformOrigin: 'top left'\n          } : {\n            left: finalPosition\n          })\n        };\n        const textContainerStyle = {\n          ...(isLeftSide ? {\n            transform: 'rotate(-90deg)',\n            // Counter-rotate text to keep it horizontal\n            transformOrigin: 'left center',\n            position: 'absolute',\n            width: '280px',\n            height: '210px',\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'flex-start',\n            justifyContent: 'flex-start',\n            padding: '14px'\n          } : {\n            transform: 'rotate(-90deg)',\n            transformOrigin: 'left center',\n            position: 'absolute',\n            width: '280px',\n            height: '210px',\n            top: '140px',\n            left: '105px',\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'flex-start',\n            justifyContent: 'flex-start',\n            padding: '14px'\n          })\n        };\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => !isLastProperty && handlePropertyClick(index),\n          style: cardStyle,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: textContainerStyle,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: '1.96rem',\n                marginBottom: '14px',\n                textAlign: 'left',\n                whiteSpace: 'nowrap',\n                overflow: 'hidden',\n                textOverflow: 'ellipsis',\n                maxWidth: '252px',\n                width: '100%',\n                color: '#333'\n              },\n              children: property.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: '1.4rem',\n                opacity: 1,\n                textAlign: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Cost: $\", property.cost]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Rent: $\", property.rent]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this)\n        }, property.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [renderPropertyStack('top'), renderPropertyStack('left', 0), renderPropertyStack('left', 1)]\n  }, void 0, true);\n};\n_s(PropertyDisplay, \"oxmVS99TrkyESogThvT1GbmOOC4=\");\n_c = PropertyDisplay;\nexport default PropertyDisplay;\nvar _c;\n$RefreshReg$(_c, \"PropertyDisplay\");","map":{"version":3,"names":["React","useState","useContext","useEffect","tiles","GameContext","jsxDEV","_jsxDEV","Fragment","_Fragment","PropertyDisplay","_s","expandedIndex","setExpandedIndex","player","setPlayer","currentPlayerId","socket","keyInput","setKeyInput","handleKeyDown","e","console","log","key","commands","trim","toLowerCase","map","tile","id","ownMatches","matchAll","matchesArray","Array","from","length","match","propertyIdString","propertyId","parseInt","property","find","prev","properties","testrollDetected","includes","indexOf","search","dicerollDetected","dice1","Math","floor","random","dice2","newInput","window","addEventListener","removeEventListener","ownedProperties","filter","type","_player$properties","handlePropertyClick","index","clickedProperty","name","movingProperties","slice","p","join","renderPropertyStack","position","playerIndex","isLeftSide","containerStyle","display","alignItems","overflow","flexDirection","right","height","top","bottom","justifyContent","left","transform","marginTop","width","style","children","isLastProperty","isExpanded","basePosition","expandedOffset","finalPosition","cardStyle","border","borderRadius","transition","zIndex","padding","boxSizing","backgroundColor","cursor","transformOrigin","textContainerStyle","onClick","fontSize","marginBottom","textAlign","whiteSpace","textOverflow","maxWidth","color","fileName","_jsxFileName","lineNumber","columnNumber","opacity","cost","rent","_c","$RefreshReg$"],"sources":["C:/Users/addhy/Desktop/Business_web - Copy (2)/client/src/components/PropertyDisplay.js"],"sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport { tiles } from '../data/tiles';\nimport { GameContext } from '../context/GameContext';\n\nconst PropertyDisplay = () => {\n  const [expandedIndex, setExpandedIndex] = useState(null);\n  const { player, setPlayer, currentPlayerId, socket } = useContext(GameContext);\n  const [keyInput, setKeyInput] = useState('');\n\n  useEffect(() => {\n    const handleKeyDown = (e) => {\n      console.log(`Key pressed: ${e.key}`);  // Debug: Log each key press\n      if (e.key === 'Enter') {\n        console.log(`[DEBUG] Full input string before trimming: '${keyInput}'`);  // Debug: Log the string before trimming\n        const commands = keyInput.trim().toLowerCase();  // Trim and convert to lowercase\n        console.log(`[DEBUG] Full input string after trimming and lowercasing: '${commands}'`);  // Debug: Log the string after processing\n        \n        console.log(`[DEBUG] Available property IDs:`, tiles.map(tile => tile.id));  // Debug: Log available IDs\n        \n        // Process 'own#' commands\n        const ownMatches = commands.matchAll(/own(\\d+)/g);\n        const matchesArray = Array.from(ownMatches);\n        console.log(`[DEBUG] 'own#' matches found: ${matchesArray.length}`);  // Debug: Log number of 'own#' matches\n        for (const match of matchesArray) {\n          const propertyIdString = match[1];\n          const propertyId = parseInt(propertyIdString, 10);  // Convert to number\n          console.log(`[DEBUG] Processing 'own${propertyIdString}' (ID as number: ${propertyId})`);  // Debug: Log each 'own#' being processed\n          const property = tiles.find(tile => tile.id === propertyId);  // Use the numeric ID for matching\n          if (property) {\n            setPlayer(prev => ({\n              ...prev,\n              properties: [...(prev.properties || []), propertyId]\n            }));\n            console.log(`[TEST] Player ${currentPlayerId} now owns property ${propertyId}`);\n          } else {\n            console.log(`[DEBUG] Property ID ${propertyId} not found in tiles`);  // Debug: Log if property is not found\n          }\n        }\n        \n        // Process 'testroll' or 'diceroll' command with detailed debugging\n        console.log(`[DEBUG] Checking for 'testroll' or 'diceroll' in: '${commands}'`);  // Debug: Log the string being checked\n        const testrollDetected = commands.includes('testroll');\n        console.log(`[DEBUG] 'testroll' includes check result: ${testrollDetected} (index: ${commands.indexOf('testroll') !== -1 ? commands.indexOf('testroll') : 'not found'}, full string: '${commands}', substring test details: commands.includes('testroll') = ${commands.includes('testroll')}, commands.search(/testroll/) = ${commands.search(/testroll/)} )`);  // Debug: Log result and details for 'testroll'\n        const dicerollDetected = commands.includes('diceroll');\n        console.log(`[DEBUG] 'diceroll' includes check result: ${dicerollDetected} (index: ${commands.indexOf('diceroll') !== -1 ? commands.indexOf('diceroll') : 'not found'}, full string: '${commands}', substring test details: commands.includes('diceroll') = ${commands.includes('diceroll')}, commands.search(/diceroll/) = ${commands.search(/diceroll/)} )`);  // Debug: Log result and details for 'diceroll'\n        if (testrollDetected || dicerollDetected) {\n          console.log(`[DEBUG] Command detected: 'testroll' or 'diceroll' (matched in '${commands}')`);  // Debug: Log if either command is found\n          const dice1 = Math.floor(Math.random() * 6) + 1;\n          const dice2 = Math.floor(Math.random() * 6) + 1;\n          console.log(`[TEST] Simulated dice roll: ${dice1} and ${dice2}`);\n        } else {\n          console.log(`[DEBUG] 'testroll' or 'diceroll' not detected in '${commands}'. Did you mean 'testroll' or 'diceroll'?`);  // Debug: Log if neither is found\n        }\n        \n        setKeyInput('');  // Clear input after processing\n        console.log(`[DEBUG] Input cleared`);  // Debug: Log that input has been cleared\n      } else if (e.key.match(/^[0-9a-z]$/i)) {\n        setKeyInput(prev => {\n          const newInput = prev + e.key;\n          console.log(`[DEBUG] Updated keyInput: '${newInput}'`);  // Debug: Log updated keyInput\n          return newInput;\n        });\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [keyInput, currentPlayerId, setPlayer]);\n\n  // Get only current player's properties\n  const ownedProperties = tiles\n    .filter(tile => tile.type === 'property')\n    .filter(tile => player?.properties?.includes(tile.id));\n\n  const handlePropertyClick = (index) => {\n    // Don't allow clicking the last property as it's always expanded\n    if (index === ownedProperties.length - 1) return;\n\n    const clickedProperty = ownedProperties[index];\n    console.log(`[clicked on property name: ${clickedProperty.name}]`);\n\n    if (expandedIndex === index) {\n      // Collapsing current property\n      const movingProperties = ownedProperties\n        .slice(index + 1, -1)\n        .map(p => p.name)\n        .join(', ');\n      console.log(`moving ${movingProperties} back to initial positions`);\n    } else {\n      // Expanding new property\n      const movingProperties = ownedProperties\n        .slice(index + 1)\n        .map(p => p.name)\n        .join(', ');\n      console.log(`moving ${movingProperties} to expanded positions`);\n    }\n\n    setExpandedIndex(expandedIndex === index ? null : index);\n  };\n\n  const renderPropertyStack = (position, playerIndex) => {\n    const isLeftSide = position === 'left';\n    const containerStyle = {\n      position: 'absolute',\n      display: 'flex',\n      alignItems: 'flex-start',\n      overflow: 'visible',\n      ...(isLeftSide ? {\n        // Left side stack\n        flexDirection: 'column',\n        right: 'calc(100% + 235px)',  // Keep the existing right offset\n        height: '800px',  // Match board height\n        top: playerIndex === 0 ? '0%' : '50%',  // Split vertically between two players\n        bottom: playerIndex === 0 ? '50%' : '0%',\n        justifyContent: 'center'\n      } : {\n        // Top stack (existing style)\n        top: '100%',\n        left: '50%',\n        transform: 'translateX(calc(-50% + 50px))',\n        height: '280px',\n        marginTop: '-3px',\n        width: '800px',\n        justifyContent: 'center'\n      })\n    };\n\n    return (\n      <div style={containerStyle}>\n        {ownedProperties.map((property, index) => {\n          const isLastProperty = index === ownedProperties.length - 1;\n          const isExpanded = isLastProperty || expandedIndex === index;\n          \n          // Calculate base position\n          const basePosition = isLeftSide ? \n            index * 42 :  // Vertical spacing for left side\n            index * 56;   // Horizontal spacing for top\n          \n          // Calculate additional offset based on expanded state\n          let expandedOffset = 0;\n          \n          if (expandedIndex !== null) {\n            if (index > expandedIndex) {\n              expandedOffset = isLeftSide ? \n                154 :  // Vertical offset\n                154;   // Horizontal offset (unchanged)\n            }\n          }\n\n          // Calculate final position\n          const finalPosition = basePosition + expandedOffset;\n          \n          const cardStyle = {\n            width: '210px',\n            height: '280px',\n            border: '2px solid #666',\n            borderRadius: '12px',\n            position: 'absolute',\n            transition: 'all 0.3s ease',\n            zIndex: isExpanded ? ownedProperties.length : index,\n            display: 'flex',\n            flexDirection: 'column',\n            padding: '14px',\n            boxSizing: 'border-box',\n            backgroundColor: 'rgb(173, 216, 230)',\n            cursor: isLastProperty ? 'default' : 'pointer',\n            ...(isLeftSide ? {\n              top: finalPosition,\n              transform: 'rotate(90deg)',\n              transformOrigin: 'top left'\n            } : {\n              left: finalPosition\n            })\n          };\n\n          const textContainerStyle = {\n            ...(isLeftSide ? {\n              transform: 'rotate(-90deg)',  // Counter-rotate text to keep it horizontal\n              transformOrigin: 'left center',\n              position: 'absolute',\n              width: '280px',\n              height: '210px',\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'flex-start',\n              justifyContent: 'flex-start',\n              padding: '14px'\n            } : {\n              transform: 'rotate(-90deg)',\n              transformOrigin: 'left center',\n              position: 'absolute',\n              width: '280px',\n              height: '210px',\n              top: '140px',\n              left: '105px',\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'flex-start',\n              justifyContent: 'flex-start',\n              padding: '14px'\n            })\n          };\n\n          return (\n            <div\n              key={property.id}\n              onClick={() => !isLastProperty && handlePropertyClick(index)}\n              style={cardStyle}\n            >\n              <div style={textContainerStyle}>\n                <div style={{\n                  fontSize: '1.96rem',\n                  marginBottom: '14px',\n                  textAlign: 'left',\n                  whiteSpace: 'nowrap',\n                  overflow: 'hidden',\n                  textOverflow: 'ellipsis',\n                  maxWidth: '252px',\n                  width: '100%',\n                  color: '#333'\n                }}>\n                  {property.name}\n                </div>\n                <div style={{\n                  fontSize: '1.4rem',\n                  opacity: 1,\n                  textAlign: 'center'\n                }}>\n                  <div>Cost: ${property.cost}</div>\n                  <div>Rent: ${property.rent}</div>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    );\n  };\n\n  return (\n    <>\n      {/* Top stack */}\n      {renderPropertyStack('top')}\n      {/* Left side stacks - one for each left player */}\n      {renderPropertyStack('left', 0)}\n      {renderPropertyStack('left', 1)}\n    </>\n  );\n};\n\nexport default PropertyDisplay; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}