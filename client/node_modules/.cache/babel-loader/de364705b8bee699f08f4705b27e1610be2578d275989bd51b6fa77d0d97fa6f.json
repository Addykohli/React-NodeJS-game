{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\addhy\\\\Desktop\\\\Business_web\\\\client\\\\src\\\\components\\\\Board.js\",\n  _s = $RefreshSig$();\n// src/components/Board.js\nimport React, { useContext, useEffect, useRef } from 'react';\nimport { GameContext } from '../context/GameContext';\nimport boardImg from '../assets/board.png';\nimport { tiles } from '../data/tiles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Board = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const {\n    players\n  } = useContext(GameContext);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const board = new Image();\n    board.src = boardImg;\n    board.onload = () => {\n      canvas.width = board.width;\n      canvas.height = board.height;\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.drawImage(board, 0, 0);\n      players.forEach(p => {\n        if (p.piece && p.position !== undefined) {\n          const img = new Image();\n          img.src = require(`../assets/pieces/${p.piece}`);\n          img.onload = () => {\n            const tile = tiles.find(t => t.id === p.position);\n            if (!tile) return;\n            const offset = 15;\n            ctx.drawImage(img, tile.x - offset, tile.y - offset, 30, 30);\n          };\n        }\n      });\n    };\n  }, [players]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      marginTop: '20px'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: {\n        border: '2px solid black'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(Board, \"vTjNr6L+JaxPOjfuFlY10Lx661s=\");\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useContext","useEffect","useRef","GameContext","boardImg","tiles","jsxDEV","_jsxDEV","Board","_s","canvasRef","players","canvas","current","ctx","getContext","board","Image","src","onload","width","height","clearRect","drawImage","forEach","p","piece","position","undefined","img","require","tile","find","t","id","offset","x","y","style","display","justifyContent","marginTop","children","ref","border","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/addhy/Desktop/Business_web/client/src/components/Board.js"],"sourcesContent":["// src/components/Board.js\r\nimport React, { useContext, useEffect, useRef } from 'react';\r\nimport { GameContext } from '../context/GameContext';\r\nimport boardImg from '../assets/board.png';\r\nimport { tiles } from '../data/tiles';\r\n\r\nconst Board = () => {\r\n  const canvasRef = useRef(null);\r\n  const { players } = useContext(GameContext);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n    const board = new Image();\r\n    board.src = boardImg;\r\n\r\n    board.onload = () => {\r\n      canvas.width = board.width;\r\n      canvas.height = board.height;\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n      ctx.drawImage(board, 0, 0);\r\n\r\n      players.forEach((p) => {\r\n        if (p.piece && p.position !== undefined) {\r\n          const img = new Image();\r\n          img.src = require(`../assets/pieces/${p.piece}`);\r\n          img.onload = () => {\r\n            const tile = tiles.find(t => t.id === p.position);\r\n            if (!tile) return;\r\n            const offset = 15;\r\n            ctx.drawImage(img, tile.x - offset, tile.y - offset, 30, 30);\r\n          };\r\n        }\r\n      });\r\n    };\r\n  }, [players]);\r\n\r\n  return (\r\n    <div style={{ display: 'flex', justifyContent: 'center', marginTop: '20px' }}>\r\n      <canvas ref={canvasRef} style={{ border: '2px solid black' }} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC5D,SAASC,WAAW,QAAQ,wBAAwB;AACpD,OAAOC,QAAQ,MAAM,qBAAqB;AAC1C,SAASC,KAAK,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAMC,SAAS,GAAGR,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAM;IAAES;EAAQ,CAAC,GAAGX,UAAU,CAACG,WAAW,CAAC;EAE3CF,SAAS,CAAC,MAAM;IACd,MAAMW,MAAM,GAAGF,SAAS,CAACG,OAAO;IAChC,MAAMC,GAAG,GAAGF,MAAM,CAACG,UAAU,CAAC,IAAI,CAAC;IACnC,MAAMC,KAAK,GAAG,IAAIC,KAAK,CAAC,CAAC;IACzBD,KAAK,CAACE,GAAG,GAAGd,QAAQ;IAEpBY,KAAK,CAACG,MAAM,GAAG,MAAM;MACnBP,MAAM,CAACQ,KAAK,GAAGJ,KAAK,CAACI,KAAK;MAC1BR,MAAM,CAACS,MAAM,GAAGL,KAAK,CAACK,MAAM;MAC5BP,GAAG,CAACQ,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEV,MAAM,CAACQ,KAAK,EAAER,MAAM,CAACS,MAAM,CAAC;MAChDP,GAAG,CAACS,SAAS,CAACP,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;MAE1BL,OAAO,CAACa,OAAO,CAAEC,CAAC,IAAK;QACrB,IAAIA,CAAC,CAACC,KAAK,IAAID,CAAC,CAACE,QAAQ,KAAKC,SAAS,EAAE;UACvC,MAAMC,GAAG,GAAG,IAAIZ,KAAK,CAAC,CAAC;UACvBY,GAAG,CAACX,GAAG,GAAGY,OAAO,CAAC,oBAAoBL,CAAC,CAACC,KAAK,EAAE,CAAC;UAChDG,GAAG,CAACV,MAAM,GAAG,MAAM;YACjB,MAAMY,IAAI,GAAG1B,KAAK,CAAC2B,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKT,CAAC,CAACE,QAAQ,CAAC;YACjD,IAAI,CAACI,IAAI,EAAE;YACX,MAAMI,MAAM,GAAG,EAAE;YACjBrB,GAAG,CAACS,SAAS,CAACM,GAAG,EAAEE,IAAI,CAACK,CAAC,GAAGD,MAAM,EAAEJ,IAAI,CAACM,CAAC,GAAGF,MAAM,EAAE,EAAE,EAAE,EAAE,CAAC;UAC9D,CAAC;QACH;MACF,CAAC,CAAC;IACJ,CAAC;EACH,CAAC,EAAE,CAACxB,OAAO,CAAC,CAAC;EAEb,oBACEJ,OAAA;IAAK+B,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,cAAc,EAAE,QAAQ;MAAEC,SAAS,EAAE;IAAO,CAAE;IAAAC,QAAA,eAC3EnC,OAAA;MAAQoC,GAAG,EAAEjC,SAAU;MAAC4B,KAAK,EAAE;QAAEM,MAAM,EAAE;MAAkB;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7D,CAAC;AAEV,CAAC;AAACvC,EAAA,CApCID,KAAK;AAAAyC,EAAA,GAALzC,KAAK;AAsCX,eAAeA,KAAK;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}