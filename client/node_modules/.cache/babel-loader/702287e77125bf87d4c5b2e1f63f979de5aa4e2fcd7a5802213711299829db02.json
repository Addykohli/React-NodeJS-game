{"ast":null,"code":"var _s = $RefreshSig$();\n// src/components/GameController.js\n\nimport { useEffect, useContext } from 'react';\nimport { GameContext } from '../context/GameContext';\nimport { tiles } from '../data/tiles';\nconst GameController = () => {\n  _s();\n  const {\n    players,\n    setPlayers,\n    currentPlayerIndex,\n    originalCount,\n    setOriginalCount,\n    isMoving,\n    setIsMoving\n  } = useContext(GameContext);\n  useEffect(() => {\n    if (!isMoving || originalCount <= 0) return;\n    const movePlayer = async () => {\n      let count = originalCount;\n      const updatedPlayers = [...players];\n      const player = updatedPlayers[currentPlayerIndex];\n      while (count > 0) {\n        var _player$currentTile;\n        await new Promise(res => setTimeout(res, 500));\n        const currentTile = tiles[(_player$currentTile = player.currentTile) !== null && _player$currentTile !== void 0 ? _player$currentTile : 0];\n        let nextId;\n        if (originalCount === 7) {\n          nextId = window.confirm(\"Go Above 7 Path?\") ? currentTile.nextAbove7 : currentTile.nextBelow7;\n        } else {\n          nextId = originalCount < 7 ? currentTile.nextBelow7 : currentTile.nextAbove7;\n        }\n        player.prevTile = player.currentTile;\n        player.currentTile = nextId;\n        count--;\n        setPlayers([...updatedPlayers]);\n        setOriginalCount(count);\n      }\n      setIsMoving(false);\n    };\n    movePlayer();\n  }, [isMoving, originalCount, players, currentPlayerIndex, setPlayers, setOriginalCount, setIsMoving]);\n  return null;\n};\n_s(GameController, \"ySH3/1NvShPCbwClxkmCJ7PTqx8=\");\n_c = GameController;\nexport default GameController;\nvar _c;\n$RefreshReg$(_c, \"GameController\");","map":{"version":3,"names":["useEffect","useContext","GameContext","tiles","GameController","_s","players","setPlayers","currentPlayerIndex","originalCount","setOriginalCount","isMoving","setIsMoving","movePlayer","count","updatedPlayers","player","_player$currentTile","Promise","res","setTimeout","currentTile","nextId","window","confirm","nextAbove7","nextBelow7","prevTile","_c","$RefreshReg$"],"sources":["C:/Users/addhy/Desktop/Business_web/client/src/components/GameController.js"],"sourcesContent":["// src/components/GameController.js\r\n\r\nimport { useEffect, useContext } from 'react';\r\nimport { GameContext } from '../context/GameContext';\r\nimport { tiles } from '../data/tiles';\r\n\r\nconst GameController = () => {\r\n  const {\r\n    players, setPlayers,\r\n    currentPlayerIndex,\r\n    originalCount, setOriginalCount,\r\n    isMoving, setIsMoving\r\n  } = useContext(GameContext);\r\n\r\n  useEffect(() => {\r\n    if (!isMoving || originalCount <= 0) return;\r\n\r\n    const movePlayer = async () => {\r\n      let count = originalCount;\r\n      const updatedPlayers = [...players];\r\n      const player = updatedPlayers[currentPlayerIndex];\r\n\r\n      while (count > 0) {\r\n        await new Promise(res => setTimeout(res, 500));\r\n\r\n        const currentTile = tiles[player.currentTile ?? 0];\r\n\r\n        let nextId;\r\n        if (originalCount === 7) {\r\n          nextId = window.confirm(\"Go Above 7 Path?\") ? currentTile.nextAbove7 : currentTile.nextBelow7;\r\n        } else {\r\n          nextId = originalCount < 7 ? currentTile.nextBelow7 : currentTile.nextAbove7;\r\n        }\r\n\r\n        player.prevTile = player.currentTile;\r\n        player.currentTile = nextId;\r\n        count--;\r\n\r\n        setPlayers([...updatedPlayers]);\r\n        setOriginalCount(count);\r\n      }\r\n\r\n      setIsMoving(false);\r\n    };\r\n\r\n    movePlayer();\r\n  }, [\r\n    isMoving,\r\n    originalCount,\r\n    players,\r\n    currentPlayerIndex,\r\n    setPlayers,\r\n    setOriginalCount,\r\n    setIsMoving\r\n  ]);\r\n\r\n  return null;\r\n};\r\n\r\nexport default GameController;\r\n"],"mappings":";AAAA;;AAEA,SAASA,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC7C,SAASC,WAAW,QAAQ,wBAAwB;AACpD,SAASC,KAAK,QAAQ,eAAe;AAErC,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM;IACJC,OAAO;IAAEC,UAAU;IACnBC,kBAAkB;IAClBC,aAAa;IAAEC,gBAAgB;IAC/BC,QAAQ;IAAEC;EACZ,CAAC,GAAGX,UAAU,CAACC,WAAW,CAAC;EAE3BF,SAAS,CAAC,MAAM;IACd,IAAI,CAACW,QAAQ,IAAIF,aAAa,IAAI,CAAC,EAAE;IAErC,MAAMI,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAIC,KAAK,GAAGL,aAAa;MACzB,MAAMM,cAAc,GAAG,CAAC,GAAGT,OAAO,CAAC;MACnC,MAAMU,MAAM,GAAGD,cAAc,CAACP,kBAAkB,CAAC;MAEjD,OAAOM,KAAK,GAAG,CAAC,EAAE;QAAA,IAAAG,mBAAA;QAChB,MAAM,IAAIC,OAAO,CAACC,GAAG,IAAIC,UAAU,CAACD,GAAG,EAAE,GAAG,CAAC,CAAC;QAE9C,MAAME,WAAW,GAAGlB,KAAK,EAAAc,mBAAA,GAACD,MAAM,CAACK,WAAW,cAAAJ,mBAAA,cAAAA,mBAAA,GAAI,CAAC,CAAC;QAElD,IAAIK,MAAM;QACV,IAAIb,aAAa,KAAK,CAAC,EAAE;UACvBa,MAAM,GAAGC,MAAM,CAACC,OAAO,CAAC,kBAAkB,CAAC,GAAGH,WAAW,CAACI,UAAU,GAAGJ,WAAW,CAACK,UAAU;QAC/F,CAAC,MAAM;UACLJ,MAAM,GAAGb,aAAa,GAAG,CAAC,GAAGY,WAAW,CAACK,UAAU,GAAGL,WAAW,CAACI,UAAU;QAC9E;QAEAT,MAAM,CAACW,QAAQ,GAAGX,MAAM,CAACK,WAAW;QACpCL,MAAM,CAACK,WAAW,GAAGC,MAAM;QAC3BR,KAAK,EAAE;QAEPP,UAAU,CAAC,CAAC,GAAGQ,cAAc,CAAC,CAAC;QAC/BL,gBAAgB,CAACI,KAAK,CAAC;MACzB;MAEAF,WAAW,CAAC,KAAK,CAAC;IACpB,CAAC;IAEDC,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CACDF,QAAQ,EACRF,aAAa,EACbH,OAAO,EACPE,kBAAkB,EAClBD,UAAU,EACVG,gBAAgB,EAChBE,WAAW,CACZ,CAAC;EAEF,OAAO,IAAI;AACb,CAAC;AAACP,EAAA,CAnDID,cAAc;AAAAwB,EAAA,GAAdxB,cAAc;AAqDpB,eAAeA,cAAc;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}