{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\addhy\\\\Desktop\\\\Business_web - Copy (2)\\\\client\\\\src\\\\components\\\\PropertyDisplay.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$();\nimport React, { useState, useContext, useEffect } from 'react';\nimport { tiles } from '../data/tiles';\nimport { GameContext } from '../context/GameContext';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PropertyCard = ({\n  property,\n  isExpanded,\n  isLastProperty,\n  socket,\n  playerId,\n  player\n}) => {\n  _s();\n  const {\n    player: currentPlayer\n  } = useContext(GameContext);\n\n  // Debug logs\n  console.log('PropertyCard render:', {\n    propertyName: property.name,\n    isExpanded,\n    playerId,\n    currentPlayerId: currentPlayer === null || currentPlayer === void 0 ? void 0 : currentPlayer.socketId,\n    isCurrentPlayer: playerId === (currentPlayer === null || currentPlayer === void 0 ? void 0 : currentPlayer.socketId),\n    playerProperties: player === null || player === void 0 ? void 0 : player.properties\n  });\n  const handleSell = e => {\n    e.stopPropagation(); // Prevent card expansion when clicking sell button\n    if (window.confirm(`Are you sure you want to sell ${property.name} for $${property.cost}?`)) {\n      socket.emit('updateProperty', {\n        playerId: playerId,\n        propertyId: property.id,\n        action: 'remove',\n        refundAmount: property.cost\n      });\n    }\n  };\n\n  // Calculate rent multiplier based on owned properties\n  const getRentMultiplier = () => {\n    if (!(player !== null && player !== void 0 && player.properties)) return 1;\n    const ownedProperties = tiles.filter(tile => player.properties.includes(tile.id));\n    const divisionProperties = ownedProperties.filter(tile => tile.division === property.division);\n    const count = divisionProperties.length;\n    console.log('Multiplier calculation:', {\n      propertyName: property.name,\n      division: property.division,\n      ownedInDivision: count,\n      properties: divisionProperties.map(p => p.name)\n    });\n    if (property.division === 'tech') {\n      if (count >= 6) return 5;\n      if (count >= 5) return 4;\n      const hasGoogle = player.properties.includes(37);\n      const hasApple = player.properties.includes(36);\n      const hasAmazon = player.properties.includes(41);\n      if (hasGoogle && hasApple && hasAmazon) return 3;\n\n      // Check for any 2 of Google, Apple, Amazon\n      const bigTechCount = [hasGoogle, hasApple, hasAmazon].filter(Boolean).length;\n      if (bigTechCount >= 2) return 2;\n      if (count >= 3) return 2;\n      return 1;\n    } else {\n      if (count >= 6) return 5;\n      if (count >= 5) return 3;\n      if (count >= 3) return 2;\n      return 1;\n    }\n  };\n  const multiplier = getRentMultiplier();\n  const isCurrentPlayer = playerId === (currentPlayer === null || currentPlayer === void 0 ? void 0 : currentPlayer.socketId);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'flex-start',\n      justifyContent: 'flex-start',\n      color: '#333',\n      fontSize: '1.2rem',\n      fontWeight: 'bold',\n      height: '100%',\n      position: 'relative'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontSize: '1.4rem',\n        marginBottom: '10px',\n        textAlign: 'left',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        maxWidth: '176px',\n        width: '100%'\n      },\n      children: property.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontSize: '1rem',\n        textAlign: 'left',\n        marginBottom: '8px'\n      },\n      children: [\"Cost: $\", property.cost]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontSize: '1rem',\n        textAlign: 'left',\n        display: 'flex',\n        alignItems: 'center',\n        gap: '8px',\n        marginBottom: '8px'\n      },\n      children: [\"Rent: $\", property.rent, multiplier > 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: '#FFA500',\n          fontSize: '1.3em',\n          fontWeight: 'bold'\n        },\n        children: [\"X\", multiplier]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), isCurrentPlayer && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100%',\n        textAlign: 'left'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSell,\n        style: {\n          backgroundColor: '#ff4444',\n          color: 'white',\n          border: 'none',\n          borderRadius: '4px',\n          padding: '4px 8px',\n          cursor: 'pointer',\n          fontSize: '0.9rem',\n          fontWeight: 'bold'\n        },\n        children: \"Sell\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(PropertyCard, \"m+ljXlfEU9phJ1Verx3O346aiZE=\");\n_c = PropertyCard;\nconst PropertyDisplayLeft = ({\n  player,\n  position\n}) => {\n  _s2();\n  const {\n    socket,\n    player: currentPlayer\n  } = useContext(GameContext);\n  const [expandedIndex, setExpandedIndex] = useState(null);\n\n  // Get only this player's properties and sort by division\n  const ownedProperties = tiles.filter(tile => tile.type === 'property').filter(tile => {\n    var _player$properties;\n    return player === null || player === void 0 ? void 0 : (_player$properties = player.properties) === null || _player$properties === void 0 ? void 0 : _player$properties.includes(tile.id);\n  }).sort((a, b) => {\n    if (a.division === b.division) {\n      return a.name.localeCompare(b.name); // Sort by name within same division\n    }\n    return a.division.localeCompare(b.division); // Sort by division\n  });\n  const handlePropertyClick = index => {\n    if (index === ownedProperties.length - 1) return;\n    setExpandedIndex(expandedIndex === index ? null : index);\n  };\n\n  // Debug log for left display\n  console.log('PropertyDisplayLeft:', {\n    playerName: player === null || player === void 0 ? void 0 : player.name,\n    currentPlayerName: currentPlayer === null || currentPlayer === void 0 ? void 0 : currentPlayer.name,\n    isCurrentPlayer: (player === null || player === void 0 ? void 0 : player.socketId) === (currentPlayer === null || currentPlayer === void 0 ? void 0 : currentPlayer.socketId),\n    expandedIndex,\n    ownedProperties: ownedProperties.map(p => p.name)\n  });\n\n  // Reduced dimensions (70% of original) - matching TopPropertyDisplay\n  const cardWidth = 196; // 70% of 280 \n  const cardHeight = 147; // 70% of 210 \n  const cardOverlap = 39; // 70% of 56\n  const expandOffset = 108; // 70% of 154\n\n  // Calculate the total height of the stack when expanded\n  const stackHeight = ownedProperties.length * cardOverlap + (expandedIndex !== null ? expandOffset : 0);\n\n  // Position relative to board center (300px = half of board height)\n  const centerOffset = position === 'top' ? -150 : 150; // Â±150px from center\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'absolute',\n      right: '100%',\n      top: '60%',\n      transform: `translate(5px, calc(-50% + ${centerOffset}px - ${(ownedProperties.length - 1) * cardOverlap / 2}px ${position === 'top' ? '- 245px' : ''}))`,\n      width: cardWidth + 'px',\n      display: 'flex',\n      alignItems: 'flex-start',\n      overflow: 'visible',\n      height: stackHeight + 'px',\n      zIndex: 1\n    },\n    children: ownedProperties.map((property, index) => {\n      const isLastProperty = index === ownedProperties.length - 1;\n      const isExpanded = isLastProperty || expandedIndex === index;\n      const basePosition = index * cardOverlap;\n      let expandedOffset = 0;\n      if (expandedIndex !== null && index > expandedIndex) {\n        expandedOffset = expandOffset;\n      }\n      const finalPosition = basePosition + expandedOffset;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => !isLastProperty && handlePropertyClick(index),\n        style: {\n          width: cardWidth + 'px',\n          height: cardHeight + 'px',\n          border: '2px solid #666',\n          borderRadius: '8px',\n          position: 'absolute',\n          top: finalPosition,\n          transition: 'all 0.3s ease',\n          zIndex: isExpanded ? ownedProperties.length : index,\n          display: 'flex',\n          flexDirection: 'column',\n          padding: '10px',\n          boxSizing: 'border-box',\n          backgroundColor: 'rgb(173, 216, 230)',\n          cursor: isLastProperty ? 'default' : 'pointer'\n        },\n        children: /*#__PURE__*/_jsxDEV(PropertyCard, {\n          property: property,\n          isExpanded: isExpanded,\n          isLastProperty: isLastProperty,\n          socket: socket,\n          playerId: player.socketId,\n          player: player\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this)\n      }, property.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 5\n  }, this);\n};\n_s2(PropertyDisplayLeft, \"q2hj4T2UvMZYBgQu/sypQbIZ050=\");\n_c2 = PropertyDisplayLeft;\nconst PropertyDisplayRight = ({\n  player,\n  position\n}) => {\n  _s3();\n  const {\n    socket,\n    player: currentPlayer\n  } = useContext(GameContext);\n  const [expandedIndex, setExpandedIndex] = useState(null);\n\n  // Get only this player's properties and sort by division\n  const ownedProperties = tiles.filter(tile => tile.type === 'property').filter(tile => {\n    var _player$properties2;\n    return player === null || player === void 0 ? void 0 : (_player$properties2 = player.properties) === null || _player$properties2 === void 0 ? void 0 : _player$properties2.includes(tile.id);\n  }).sort((a, b) => {\n    if (a.division === b.division) {\n      return a.name.localeCompare(b.name); // Sort by name within same division\n    }\n    return a.division.localeCompare(b.division); // Sort by division\n  });\n  const handlePropertyClick = index => {\n    if (index === ownedProperties.length - 1) return;\n    setExpandedIndex(expandedIndex === index ? null : index);\n  };\n\n  // Debug log for right display\n  console.log('PropertyDisplayRight:', {\n    playerName: player === null || player === void 0 ? void 0 : player.name,\n    currentPlayerName: currentPlayer === null || currentPlayer === void 0 ? void 0 : currentPlayer.name,\n    isCurrentPlayer: (player === null || player === void 0 ? void 0 : player.socketId) === (currentPlayer === null || currentPlayer === void 0 ? void 0 : currentPlayer.socketId),\n    expandedIndex,\n    ownedProperties: ownedProperties.map(p => p.name)\n  });\n\n  // Reduced dimensions (70% of original) - matching TopPropertyDisplay\n  const cardWidth = 196; // 70% of 280 (swapped)\n  const cardHeight = 147; // 70% of 210 (swapped)\n  const cardOverlap = 39; // 70% of 56\n  const expandOffset = 108; // 70% of 154\n\n  // Calculate the total height of the stack when expanded\n  const stackHeight = ownedProperties.length * cardOverlap + (expandedIndex !== null ? expandOffset : 0);\n\n  // Position relative to board center (300px = half of board height)\n  const centerOffset = position === 'top' ? -150 : 150; // Â±150px from center\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'absolute',\n      left: '100%',\n      top: '50%',\n      transform: `translate(-5px, calc(-50% + ${centerOffset}px - ${(ownedProperties.length - 1) * cardOverlap / 2}px ${position === 'top' ? '- 208.5px' : ''}))`,\n      width: cardWidth + 'px',\n      display: 'flex',\n      alignItems: 'flex-start',\n      overflow: 'visible',\n      height: stackHeight + 'px',\n      zIndex: 1\n    },\n    children: ownedProperties.map((property, index) => {\n      const isLastProperty = index === ownedProperties.length - 1;\n      const isExpanded = isLastProperty || expandedIndex === index;\n      const basePosition = index * cardOverlap;\n      let expandedOffset = 0;\n      if (expandedIndex !== null && index > expandedIndex) {\n        expandedOffset = expandOffset;\n      }\n      const finalPosition = basePosition + expandedOffset;\n\n      // Debug log for each property card\n      console.log(`Property card ${property.name}:`, {\n        isExpanded,\n        isLastProperty,\n        isCurrentPlayer: player.socketId === (currentPlayer === null || currentPlayer === void 0 ? void 0 : currentPlayer.socketId)\n      });\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => !isLastProperty && handlePropertyClick(index),\n        style: {\n          width: cardWidth + 'px',\n          height: cardHeight + 'px',\n          border: '2px solid #666',\n          borderRadius: '8px',\n          position: 'absolute',\n          top: finalPosition,\n          transition: 'all 0.3s ease',\n          zIndex: isExpanded ? ownedProperties.length : index,\n          display: 'flex',\n          flexDirection: 'column',\n          padding: '10px',\n          boxSizing: 'border-box',\n          backgroundColor: 'rgb(173, 216, 230)',\n          cursor: isLastProperty ? 'default' : 'pointer'\n        },\n        children: /*#__PURE__*/_jsxDEV(PropertyCard, {\n          property: property,\n          isExpanded: isExpanded,\n          isLastProperty: isLastProperty,\n          socket: socket,\n          playerId: player.socketId,\n          player: player\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 13\n        }, this)\n      }, property.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 291,\n    columnNumber: 5\n  }, this);\n};\n_s3(PropertyDisplayRight, \"q2hj4T2UvMZYBgQu/sypQbIZ050=\");\n_c3 = PropertyDisplayRight;\nconst PropertyDisplay = () => {\n  _s4();\n  const {\n    players,\n    player,\n    currentPlayerId,\n    socket,\n    setPlayer,\n    setPlayers\n  } = useContext(GameContext);\n  const [expandedIndex, setExpandedIndex] = useState(null);\n  const [keyInput, setKeyInput] = useState('');\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.key === 'Enter') {\n        const commands = keyInput.trim().toLowerCase();\n\n        // Process 'own#' commands\n        const ownMatches = commands.matchAll(/own(\\d+)/g);\n        const matchesArray = Array.from(ownMatches);\n        for (const match of matchesArray) {\n          const propertyId = parseInt(match[1], 10);\n          const property = tiles.find(tile => tile.id === propertyId);\n          if (property) {\n            // Emit socket event to update property ownership for all clients\n            socket.emit('updateProperty', {\n              playerId: player.socketId,\n              propertyId: propertyId,\n              action: 'add'\n            });\n          }\n        }\n\n        // Process dice roll commands\n        if (commands.includes('testroll') || commands.includes('diceroll')) {\n          const dice1 = Math.floor(Math.random() * 6) + 1;\n          const dice2 = Math.floor(Math.random() * 6) + 1;\n        }\n        setKeyInput('');\n      } else if (e.key.match(/^[0-9a-z]$/i)) {\n        setKeyInput(prev => prev + e.key);\n      }\n    };\n    const handlePropertyUpdate = ({\n      playerId,\n      propertyId,\n      action,\n      newMoney\n    }) => {\n      setPlayers(prevPlayers => {\n        return prevPlayers.map(p => {\n          if (p.socketId === playerId) {\n            return {\n              ...p,\n              properties: action === 'add' ? [...(p.properties || []), propertyId] : (p.properties || []).filter(id => id !== propertyId),\n              money: p.money + newMoney\n            };\n          }\n          return p;\n        });\n      });\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    socket.on('propertyUpdated', handlePropertyUpdate);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n      socket.off('propertyUpdated', handlePropertyUpdate);\n    };\n  }, [keyInput, currentPlayerId, setPlayer, socket, player === null || player === void 0 ? void 0 : player.socketId, setPlayers]);\n\n  // Get only current player's properties and sort by division\n  const ownedProperties = tiles.filter(tile => tile.type === 'property').filter(tile => {\n    var _player$properties3;\n    return player === null || player === void 0 ? void 0 : (_player$properties3 = player.properties) === null || _player$properties3 === void 0 ? void 0 : _player$properties3.includes(tile.id);\n  }).sort((a, b) => {\n    if (a.division === b.division) {\n      return a.name.localeCompare(b.name); // Sort by name within same division\n    }\n    return a.division.localeCompare(b.division); // Sort by division\n  });\n  const handlePropertyClick = index => {\n    if (index === ownedProperties.length - 1) return;\n    setExpandedIndex(expandedIndex === index ? null : index);\n  };\n\n  // Get left-side and right-side players (based on PlayerStats logic)\n  const otherPlayers = players.filter(p => p && p.socketId !== (player === null || player === void 0 ? void 0 : player.socketId));\n\n  // Get positions based on number of players (matching PlayerStats logic)\n  const getPositions = numPlayers => {\n    switch (numPlayers) {\n      case 1:\n        // Just one other player\n        return [{\n          position: 'left'\n        }];\n      case 2:\n        // Two other players\n        return [{\n          position: 'left',\n          top: '25%'\n        }, {\n          position: 'left',\n          top: '75%'\n        }];\n      case 3:\n        // Three other players\n        return [{\n          position: 'left',\n          top: '100%'\n        }, {\n          position: 'left',\n          top: '75%'\n        }, {\n          position: 'top'\n        }];\n      case 4:\n        // Four other players\n        return [{\n          position: 'left',\n          top: '25%'\n        }, {\n          position: 'left',\n          top: '75%'\n        }, {\n          position: 'top'\n        }, {\n          position: 'top'\n        }];\n      case 5:\n        // Five other players\n        return [{\n          position: 'left',\n          top: '25%'\n        }, {\n          position: 'left',\n          top: '75%'\n        }, {\n          position: 'right',\n          top: '25%'\n        }, {\n          position: 'right',\n          top: '75%'\n        }, {\n          position: 'top'\n        }];\n      case 6:\n        // Six other players\n        return [{\n          position: 'left',\n          top: '25%'\n        }, {\n          position: 'left',\n          top: '75%'\n        }, {\n          position: 'right',\n          top: '25%'\n        }, {\n          position: 'right',\n          top: '75%'\n        }, {\n          position: 'top'\n        }, {\n          position: 'top'\n        }];\n      case 7:\n        // Seven other players\n        return [{\n          position: 'left',\n          top: '25%'\n        }, {\n          position: 'left',\n          top: '75%'\n        }, {\n          position: 'right',\n          top: '25%'\n        }, {\n          position: 'right',\n          top: '75%'\n        }, {\n          position: 'top'\n        }, {\n          position: 'top'\n        }, {\n          position: 'top'\n        }];\n      default:\n        return [];\n    }\n  };\n  const positions = getPositions(otherPlayers.length);\n\n  // Group players by position\n  const leftPlayers = otherPlayers.filter((_, idx) => {\n    var _positions$idx;\n    return ((_positions$idx = positions[idx]) === null || _positions$idx === void 0 ? void 0 : _positions$idx.position) === 'left';\n  });\n  const rightPlayers = otherPlayers.filter((_, idx) => {\n    var _positions$idx2;\n    return ((_positions$idx2 = positions[idx]) === null || _positions$idx2 === void 0 ? void 0 : _positions$idx2.position) === 'right';\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: '100%',\n        left: '50%',\n        transform: 'translateX(calc(-50% + 50px))',\n        height: '280px',\n        display: 'flex',\n        alignItems: 'flex-start',\n        overflow: 'visible',\n        marginTop: '-3px',\n        width: '800px',\n        justifyContent: 'center'\n      },\n      children: ownedProperties.map((property, index) => {\n        const isLastProperty = index === ownedProperties.length - 1;\n        const isExpanded = isLastProperty || expandedIndex === index;\n        const basePosition = index * 56;\n        let expandedOffset = 0;\n        if (expandedIndex !== null && index > expandedIndex) {\n          expandedOffset = 154;\n        }\n        const finalPosition = basePosition + expandedOffset;\n\n        // Calculate rent multiplier\n        const multiplier = (() => {\n          const ownedProperties = tiles.filter(tile => {\n            var _player$properties4;\n            return player === null || player === void 0 ? void 0 : (_player$properties4 = player.properties) === null || _player$properties4 === void 0 ? void 0 : _player$properties4.includes(tile.id);\n          });\n          const divisionProperties = ownedProperties.filter(tile => tile.division === property.division);\n          const count = divisionProperties.length;\n          if (property.division === 'tech') {\n            if (count >= 6) return 5;\n            if (count >= 5) return 4;\n            const hasGoogle = player.properties.includes(37);\n            const hasApple = player.properties.includes(36);\n            const hasAmazon = player.properties.includes(41);\n            if (hasGoogle && hasApple && hasAmazon) return 3;\n\n            // Check for any 2 of Google, Apple, Amazon\n            const bigTechCount = [hasGoogle, hasApple, hasAmazon].filter(Boolean).length;\n            if (bigTechCount >= 2) return 2;\n            if (count >= 3) return 2;\n            return 1;\n          } else {\n            if (count >= 6) return 5;\n            if (count >= 5) return 3;\n            if (count >= 3) return 2;\n            return 1;\n          }\n        })();\n        const handleSell = e => {\n          e.stopPropagation(); // Prevent card expansion when clicking sell button\n          if (window.confirm(`Are you sure you want to sell ${property.name} for $${property.cost}?`)) {\n            socket.emit('updateProperty', {\n              playerId: player.socketId,\n              propertyId: property.id,\n              action: 'remove',\n              refundAmount: property.cost\n            });\n          }\n        };\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => !isLastProperty && handlePropertyClick(index),\n          style: {\n            width: '210px',\n            height: '280px',\n            border: '2px solid #666',\n            borderRadius: '12px',\n            position: 'absolute',\n            left: finalPosition,\n            transition: 'all 0.3s ease',\n            zIndex: isExpanded ? ownedProperties.length : index,\n            display: 'flex',\n            flexDirection: 'column',\n            padding: '14px',\n            boxSizing: 'border-box',\n            backgroundColor: 'rgb(173, 216, 230)',\n            cursor: isLastProperty ? 'default' : 'pointer'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              transform: 'rotate(-90deg)',\n              transformOrigin: 'left center',\n              position: 'absolute',\n              width: '280px',\n              height: '210px',\n              top: '140px',\n              left: '105px',\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'flex-start',\n              justifyContent: 'flex-start',\n              color: '#333',\n              fontSize: '1.68rem',\n              fontWeight: 'bold',\n              padding: '14px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: '1.96rem',\n                marginBottom: '14px',\n                textAlign: 'left',\n                whiteSpace: 'nowrap',\n                overflow: 'hidden',\n                textOverflow: 'ellipsis',\n                maxWidth: '252px',\n                width: '100%'\n              },\n              children: property.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 606,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: '1.4rem',\n                textAlign: 'left',\n                marginBottom: '12px'\n              },\n              children: [\"Cost: $\", property.cost]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 618,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: '1.4rem',\n                textAlign: 'left',\n                display: 'flex',\n                alignItems: 'center',\n                gap: '12px',\n                marginBottom: '12px'\n              },\n              children: [\"Rent: $\", property.rent, multiplier > 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: '#FFA500',\n                  fontSize: '1.3em',\n                  fontWeight: 'bold'\n                },\n                children: [\"X\", multiplier]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 635,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 625,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: '100%',\n                textAlign: 'left'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleSell,\n                style: {\n                  backgroundColor: '#ff4444',\n                  color: 'white',\n                  border: 'none',\n                  borderRadius: '4px',\n                  padding: '4px 8px',\n                  cursor: 'pointer',\n                  fontSize: '1.2rem',\n                  fontWeight: 'bold'\n                },\n                children: \"Sell\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 648,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 644,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 589,\n            columnNumber: 15\n          }, this)\n        }, property.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 569,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 7\n    }, this), leftPlayers.map((leftPlayer, idx) => /*#__PURE__*/_jsxDEV(PropertyDisplayLeft, {\n      player: leftPlayer,\n      position: idx === 0 ? 'top' : 'bottom'\n    }, leftPlayer.socketId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 672,\n      columnNumber: 9\n    }, this)), rightPlayers.map((rightPlayer, idx) => /*#__PURE__*/_jsxDEV(PropertyDisplayRight, {\n      player: rightPlayer,\n      position: idx === 0 ? 'top' : 'bottom'\n    }, rightPlayer.socketId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 681,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true);\n};\n_s4(PropertyDisplay, \"17qFBJH8aK4MbZ1lDcZP1lYTUX4=\");\n_c4 = PropertyDisplay;\nexport default PropertyDisplay;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"PropertyCard\");\n$RefreshReg$(_c2, \"PropertyDisplayLeft\");\n$RefreshReg$(_c3, \"PropertyDisplayRight\");\n$RefreshReg$(_c4, \"PropertyDisplay\");","map":{"version":3,"names":["React","useState","useContext","useEffect","tiles","GameContext","jsxDEV","_jsxDEV","Fragment","_Fragment","PropertyCard","property","isExpanded","isLastProperty","socket","playerId","player","_s","currentPlayer","console","log","propertyName","name","currentPlayerId","socketId","isCurrentPlayer","playerProperties","properties","handleSell","e","stopPropagation","window","confirm","cost","emit","propertyId","id","action","refundAmount","getRentMultiplier","ownedProperties","filter","tile","includes","divisionProperties","division","count","length","ownedInDivision","map","p","hasGoogle","hasApple","hasAmazon","bigTechCount","Boolean","multiplier","style","display","flexDirection","alignItems","justifyContent","color","fontSize","fontWeight","height","position","children","marginBottom","textAlign","whiteSpace","overflow","textOverflow","maxWidth","width","fileName","_jsxFileName","lineNumber","columnNumber","gap","rent","onClick","backgroundColor","border","borderRadius","padding","cursor","_c","PropertyDisplayLeft","_s2","expandedIndex","setExpandedIndex","type","_player$properties","sort","a","b","localeCompare","handlePropertyClick","index","playerName","currentPlayerName","cardWidth","cardHeight","cardOverlap","expandOffset","stackHeight","centerOffset","right","top","transform","zIndex","basePosition","expandedOffset","finalPosition","transition","boxSizing","_c2","PropertyDisplayRight","_s3","_player$properties2","left","_c3","PropertyDisplay","_s4","players","setPlayer","setPlayers","keyInput","setKeyInput","handleKeyDown","key","commands","trim","toLowerCase","ownMatches","matchAll","matchesArray","Array","from","match","parseInt","find","dice1","Math","floor","random","dice2","prev","handlePropertyUpdate","newMoney","prevPlayers","money","addEventListener","on","removeEventListener","off","_player$properties3","otherPlayers","getPositions","numPlayers","positions","leftPlayers","_","idx","_positions$idx","rightPlayers","_positions$idx2","marginTop","_player$properties4","transformOrigin","leftPlayer","rightPlayer","_c4","$RefreshReg$"],"sources":["C:/Users/addhy/Desktop/Business_web - Copy (2)/client/src/components/PropertyDisplay.js"],"sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport { tiles } from '../data/tiles';\nimport { GameContext } from '../context/GameContext';\n\nconst PropertyCard = ({ property, isExpanded, isLastProperty, socket, playerId, player }) => {\n  const { player: currentPlayer } = useContext(GameContext);\n  \n  // Debug logs\n  console.log('PropertyCard render:', {\n    propertyName: property.name,\n    isExpanded,\n    playerId,\n    currentPlayerId: currentPlayer?.socketId,\n    isCurrentPlayer: playerId === currentPlayer?.socketId,\n    playerProperties: player?.properties\n  });\n\n  const handleSell = (e) => {\n    e.stopPropagation(); // Prevent card expansion when clicking sell button\n    if (window.confirm(`Are you sure you want to sell ${property.name} for $${property.cost}?`)) {\n      socket.emit('updateProperty', {\n        playerId: playerId,\n        propertyId: property.id,\n        action: 'remove',\n        refundAmount: property.cost\n      });\n    }\n  };\n\n  // Calculate rent multiplier based on owned properties\n  const getRentMultiplier = () => {\n    if (!player?.properties) return 1;\n    \n    const ownedProperties = tiles.filter(tile => player.properties.includes(tile.id));\n    const divisionProperties = ownedProperties.filter(tile => tile.division === property.division);\n    const count = divisionProperties.length;\n\n    console.log('Multiplier calculation:', {\n      propertyName: property.name,\n      division: property.division,\n      ownedInDivision: count,\n      properties: divisionProperties.map(p => p.name)\n    });\n\n    if (property.division === 'tech') {\n      if (count >= 6) return 5;\n      if (count >= 5) return 4;\n      \n      const hasGoogle = player.properties.includes(37);\n      const hasApple = player.properties.includes(36);\n      const hasAmazon = player.properties.includes(41);\n      \n      if (hasGoogle && hasApple && hasAmazon) return 3;\n      \n      // Check for any 2 of Google, Apple, Amazon\n      const bigTechCount = [hasGoogle, hasApple, hasAmazon].filter(Boolean).length;\n      if (bigTechCount >= 2) return 2;\n      \n      if (count >= 3) return 2;\n      return 1;\n    } else {\n      if (count >= 6) return 5;\n      if (count >= 5) return 3;\n      if (count >= 3) return 2;\n      return 1;\n    }\n  };\n\n  const multiplier = getRentMultiplier();\n  const isCurrentPlayer = playerId === currentPlayer?.socketId;\n\n  return (\n    <div style={{\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'flex-start',\n      justifyContent: 'flex-start',\n      color: '#333',\n      fontSize: '1.2rem',\n      fontWeight: 'bold',\n      height: '100%',\n      position: 'relative'\n    }}>\n      <div style={{\n        fontSize: '1.4rem',\n        marginBottom: '10px',\n        textAlign: 'left',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        maxWidth: '176px',\n        width: '100%'\n      }}>\n        {property.name}\n      </div>\n      <div style={{\n        fontSize: '1rem',\n        textAlign: 'left',\n        marginBottom: '8px'\n      }}>\n        Cost: ${property.cost}\n      </div>\n      <div style={{\n        fontSize: '1rem',\n        textAlign: 'left',\n        display: 'flex',\n        alignItems: 'center',\n        gap: '8px',\n        marginBottom: '8px'\n      }}>\n        Rent: ${property.rent}\n        {multiplier > 1 && (\n          <span style={{ \n            color: '#FFA500', \n            fontSize: '1.3em', \n            fontWeight: 'bold'\n          }}>\n            X{multiplier}\n          </span>\n        )}\n      </div>\n      {isCurrentPlayer && (\n        <div style={{\n          width: '100%',\n          textAlign: 'left'\n        }}>\n          <button\n            onClick={handleSell}\n            style={{\n              backgroundColor: '#ff4444',\n              color: 'white',\n              border: 'none',\n              borderRadius: '4px',\n              padding: '4px 8px',\n              cursor: 'pointer',\n              fontSize: '0.9rem',\n              fontWeight: 'bold'\n            }}\n          >\n            Sell\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst PropertyDisplayLeft = ({ player, position }) => {\n  const { socket, player: currentPlayer } = useContext(GameContext);\n  const [expandedIndex, setExpandedIndex] = useState(null);\n  \n  // Get only this player's properties and sort by division\n  const ownedProperties = tiles\n    .filter(tile => tile.type === 'property')\n    .filter(tile => player?.properties?.includes(tile.id))\n    .sort((a, b) => {\n      if (a.division === b.division) {\n        return a.name.localeCompare(b.name); // Sort by name within same division\n      }\n      return a.division.localeCompare(b.division); // Sort by division\n    });\n\n  const handlePropertyClick = (index) => {\n    if (index === ownedProperties.length - 1) return;\n    setExpandedIndex(expandedIndex === index ? null : index);\n  };\n\n  // Debug log for left display\n  console.log('PropertyDisplayLeft:', {\n    playerName: player?.name,\n    currentPlayerName: currentPlayer?.name,\n    isCurrentPlayer: player?.socketId === currentPlayer?.socketId,\n    expandedIndex,\n    ownedProperties: ownedProperties.map(p => p.name)\n  });\n\n  // Reduced dimensions (70% of original) - matching TopPropertyDisplay\n  const cardWidth = 196; // 70% of 280 \n  const cardHeight = 147; // 70% of 210 \n  const cardOverlap = 39; // 70% of 56\n  const expandOffset = 108; // 70% of 154\n\n  // Calculate the total height of the stack when expanded\n  const stackHeight = ownedProperties.length * cardOverlap + (expandedIndex !== null ? expandOffset : 0);\n  \n  // Position relative to board center (300px = half of board height)\n  const centerOffset = position === 'top' ? -150 : 150; // Â±150px from center\n\n  return (\n    <div style={{\n      position: 'absolute',\n      right: '100%',\n      top: '60%',\n      transform: `translate(5px, calc(-50% + ${centerOffset}px - ${(ownedProperties.length - 1) * cardOverlap / 2}px ${position === 'top' ? '- 245px' : ''}))`,\n      width: cardWidth + 'px',\n      display: 'flex',\n      alignItems: 'flex-start',\n      overflow: 'visible',\n      height: stackHeight + 'px',\n      zIndex: 1\n    }}>\n      {ownedProperties.map((property, index) => {\n        const isLastProperty = index === ownedProperties.length - 1;\n        const isExpanded = isLastProperty || expandedIndex === index;\n        \n        const basePosition = index * cardOverlap;\n        let expandedOffset = 0;\n        if (expandedIndex !== null && index > expandedIndex) {\n          expandedOffset = expandOffset;\n        }\n        const finalPosition = basePosition + expandedOffset;\n        \n        return (\n          <div\n            key={property.id}\n            onClick={() => !isLastProperty && handlePropertyClick(index)}\n            style={{\n              width: cardWidth + 'px',\n              height: cardHeight + 'px',\n              border: '2px solid #666',\n              borderRadius: '8px',\n              position: 'absolute',\n              top: finalPosition,\n              transition: 'all 0.3s ease',\n              zIndex: isExpanded ? ownedProperties.length : index,\n              display: 'flex',\n              flexDirection: 'column',\n              padding: '10px',\n              boxSizing: 'border-box',\n              backgroundColor: 'rgb(173, 216, 230)',\n              cursor: isLastProperty ? 'default' : 'pointer'\n            }}\n          >\n            <PropertyCard\n              property={property}\n              isExpanded={isExpanded}\n              isLastProperty={isLastProperty}\n              socket={socket}\n              playerId={player.socketId}\n              player={player}\n            />\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nconst PropertyDisplayRight = ({ player, position }) => {\n  const { socket, player: currentPlayer } = useContext(GameContext);\n  const [expandedIndex, setExpandedIndex] = useState(null);\n  \n  // Get only this player's properties and sort by division\n  const ownedProperties = tiles\n    .filter(tile => tile.type === 'property')\n    .filter(tile => player?.properties?.includes(tile.id))\n    .sort((a, b) => {\n      if (a.division === b.division) {\n        return a.name.localeCompare(b.name); // Sort by name within same division\n      }\n      return a.division.localeCompare(b.division); // Sort by division\n    });\n\n  const handlePropertyClick = (index) => {\n    if (index === ownedProperties.length - 1) return;\n    setExpandedIndex(expandedIndex === index ? null : index);\n  };\n\n  // Debug log for right display\n  console.log('PropertyDisplayRight:', {\n    playerName: player?.name,\n    currentPlayerName: currentPlayer?.name,\n    isCurrentPlayer: player?.socketId === currentPlayer?.socketId,\n    expandedIndex,\n    ownedProperties: ownedProperties.map(p => p.name)\n  });\n\n  // Reduced dimensions (70% of original) - matching TopPropertyDisplay\n  const cardWidth = 196; // 70% of 280 (swapped)\n  const cardHeight = 147; // 70% of 210 (swapped)\n  const cardOverlap = 39; // 70% of 56\n  const expandOffset = 108; // 70% of 154\n\n  // Calculate the total height of the stack when expanded\n  const stackHeight = ownedProperties.length * cardOverlap + (expandedIndex !== null ? expandOffset : 0);\n  \n  // Position relative to board center (300px = half of board height)\n  const centerOffset = position === 'top' ? -150 : 150; // Â±150px from center\n\n  return (\n    <div style={{\n      position: 'absolute',\n      left: '100%',\n      top: '50%',\n      transform: `translate(-5px, calc(-50% + ${centerOffset}px - ${(ownedProperties.length - 1) * cardOverlap / 2}px ${position === 'top' ? '- 208.5px' : ''}))`,\n      width: cardWidth + 'px',\n      display: 'flex',\n      alignItems: 'flex-start',\n      overflow: 'visible',\n      height: stackHeight + 'px',\n      zIndex: 1\n    }}>\n      {ownedProperties.map((property, index) => {\n        const isLastProperty = index === ownedProperties.length - 1;\n        const isExpanded = isLastProperty || expandedIndex === index;\n        \n        const basePosition = index * cardOverlap;\n        let expandedOffset = 0;\n        if (expandedIndex !== null && index > expandedIndex) {\n          expandedOffset = expandOffset;\n        }\n        const finalPosition = basePosition + expandedOffset;\n        \n        // Debug log for each property card\n        console.log(`Property card ${property.name}:`, {\n          isExpanded,\n          isLastProperty,\n          isCurrentPlayer: player.socketId === currentPlayer?.socketId\n        });\n\n        return (\n          <div\n            key={property.id}\n            onClick={() => !isLastProperty && handlePropertyClick(index)}\n            style={{\n              width: cardWidth + 'px',\n              height: cardHeight + 'px',\n              border: '2px solid #666',\n              borderRadius: '8px',\n              position: 'absolute',\n              top: finalPosition,\n              transition: 'all 0.3s ease',\n              zIndex: isExpanded ? ownedProperties.length : index,\n              display: 'flex',\n              flexDirection: 'column',\n              padding: '10px',\n              boxSizing: 'border-box',\n              backgroundColor: 'rgb(173, 216, 230)',\n              cursor: isLastProperty ? 'default' : 'pointer'\n            }}\n          >\n            <PropertyCard\n              property={property}\n              isExpanded={isExpanded}\n              isLastProperty={isLastProperty}\n              socket={socket}\n              playerId={player.socketId}\n              player={player}\n            />\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nconst PropertyDisplay = () => {\n  const { players, player, currentPlayerId, socket, setPlayer, setPlayers } = useContext(GameContext);\n  const [expandedIndex, setExpandedIndex] = useState(null);\n  const [keyInput, setKeyInput] = useState('');\n\n  useEffect(() => {\n    const handleKeyDown = (e) => {\n      if (e.key === 'Enter') {\n        const commands = keyInput.trim().toLowerCase();\n        \n        // Process 'own#' commands\n        const ownMatches = commands.matchAll(/own(\\d+)/g);\n        const matchesArray = Array.from(ownMatches);\n        for (const match of matchesArray) {\n          const propertyId = parseInt(match[1], 10);\n          const property = tiles.find(tile => tile.id === propertyId);\n          if (property) {\n            // Emit socket event to update property ownership for all clients\n            socket.emit('updateProperty', {\n              playerId: player.socketId,\n              propertyId: propertyId,\n              action: 'add'\n            });\n          }\n        }\n        \n        // Process dice roll commands\n        if (commands.includes('testroll') || commands.includes('diceroll')) {\n          const dice1 = Math.floor(Math.random() * 6) + 1;\n          const dice2 = Math.floor(Math.random() * 6) + 1;\n        }\n        \n        setKeyInput('');\n      } else if (e.key.match(/^[0-9a-z]$/i)) {\n        setKeyInput(prev => prev + e.key);\n      }\n    };\n\n    const handlePropertyUpdate = ({ playerId, propertyId, action, newMoney }) => {\n      setPlayers(prevPlayers => {\n        return prevPlayers.map(p => {\n          if (p.socketId === playerId) {\n            return {\n              ...p,\n              properties: action === 'add' \n                ? [...(p.properties || []), propertyId]\n                : (p.properties || []).filter(id => id !== propertyId),\n              money: p.money + newMoney\n            };\n          }\n          return p;\n        });\n      });\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    socket.on('propertyUpdated', handlePropertyUpdate);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n      socket.off('propertyUpdated', handlePropertyUpdate);\n    };\n  }, [keyInput, currentPlayerId, setPlayer, socket, player?.socketId, setPlayers]);\n\n  // Get only current player's properties and sort by division\n  const ownedProperties = tiles\n    .filter(tile => tile.type === 'property')\n    .filter(tile => player?.properties?.includes(tile.id))\n    .sort((a, b) => {\n      if (a.division === b.division) {\n        return a.name.localeCompare(b.name); // Sort by name within same division\n      }\n      return a.division.localeCompare(b.division); // Sort by division\n    });\n\n  const handlePropertyClick = (index) => {\n    if (index === ownedProperties.length - 1) return;\n    setExpandedIndex(expandedIndex === index ? null : index);\n  };\n\n  // Get left-side and right-side players (based on PlayerStats logic)\n  const otherPlayers = players.filter(p => p && p.socketId !== player?.socketId);\n  \n  // Get positions based on number of players (matching PlayerStats logic)\n  const getPositions = (numPlayers) => {\n    switch(numPlayers) {\n      case 1: // Just one other player\n        return [{ position: 'left' }];\n      case 2: // Two other players\n        return [{ position: 'left', top: '25%' }, { position: 'left', top: '75%' }];\n      case 3: // Three other players\n        return [\n          { position: 'left', top: '100%' },\n          { position: 'left', top: '75%' },\n          { position: 'top' }\n        ];\n      case 4: // Four other players\n        return [\n          { position: 'left', top: '25%' },\n          { position: 'left', top: '75%' },\n          { position: 'top' },\n          { position: 'top' }\n        ];\n      case 5: // Five other players\n        return [\n          { position: 'left', top: '25%' },\n          { position: 'left', top: '75%' },\n          { position: 'right', top: '25%' },\n          { position: 'right', top: '75%' },\n          { position: 'top' }\n        ];\n      case 6: // Six other players\n        return [\n          { position: 'left', top: '25%' },\n          { position: 'left', top: '75%' },\n          { position: 'right', top: '25%' },\n          { position: 'right', top: '75%' },\n          { position: 'top' },\n          { position: 'top' }\n        ];\n      case 7: // Seven other players\n        return [\n          { position: 'left', top: '25%' },\n          { position: 'left', top: '75%' },\n          { position: 'right', top: '25%' },\n          { position: 'right', top: '75%' },\n          { position: 'top' },\n          { position: 'top' },\n          { position: 'top' }\n        ];\n      default:\n        return [];\n    }\n  };\n\n  const positions = getPositions(otherPlayers.length);\n\n  // Group players by position\n  const leftPlayers = otherPlayers.filter((_, idx) => positions[idx]?.position === 'left');\n  const rightPlayers = otherPlayers.filter((_, idx) => positions[idx]?.position === 'right');\n\n  return (\n    <>\n      {/* Bottom property stack for current player */}\n      <div style={{\n        position: 'absolute',\n        top: '100%',\n        left: '50%',\n        transform: 'translateX(calc(-50% + 50px))',\n        height: '280px',\n        display: 'flex',\n        alignItems: 'flex-start',\n        overflow: 'visible',\n        marginTop: '-3px',\n        width: '800px',\n        justifyContent: 'center'\n      }}>\n        {ownedProperties.map((property, index) => {\n          const isLastProperty = index === ownedProperties.length - 1;\n          const isExpanded = isLastProperty || expandedIndex === index;\n          const basePosition = index * 56;\n          let expandedOffset = 0;\n          \n          if (expandedIndex !== null && index > expandedIndex) {\n            expandedOffset = 154;\n          }\n\n          const finalPosition = basePosition + expandedOffset;\n          \n          // Calculate rent multiplier\n          const multiplier = (() => {\n            const ownedProperties = tiles.filter(tile => player?.properties?.includes(tile.id));\n            const divisionProperties = ownedProperties.filter(tile => tile.division === property.division);\n            const count = divisionProperties.length;\n\n            if (property.division === 'tech') {\n              if (count >= 6) return 5;\n              if (count >= 5) return 4;\n              \n              const hasGoogle = player.properties.includes(37);\n              const hasApple = player.properties.includes(36);\n              const hasAmazon = player.properties.includes(41);\n              \n              if (hasGoogle && hasApple && hasAmazon) return 3;\n              \n              // Check for any 2 of Google, Apple, Amazon\n              const bigTechCount = [hasGoogle, hasApple, hasAmazon].filter(Boolean).length;\n              if (bigTechCount >= 2) return 2;\n              \n              if (count >= 3) return 2;\n              return 1;\n            } else {\n              if (count >= 6) return 5;\n              if (count >= 5) return 3;\n              if (count >= 3) return 2;\n              return 1;\n            }\n          })();\n\n          const handleSell = (e) => {\n            e.stopPropagation(); // Prevent card expansion when clicking sell button\n            if (window.confirm(`Are you sure you want to sell ${property.name} for $${property.cost}?`)) {\n              socket.emit('updateProperty', {\n                playerId: player.socketId,\n                propertyId: property.id,\n                action: 'remove',\n                refundAmount: property.cost\n              });\n            }\n          };\n          \n          return (\n            <div\n              key={property.id}\n              onClick={() => !isLastProperty && handlePropertyClick(index)}\n              style={{\n                width: '210px',\n                height: '280px',\n                border: '2px solid #666',\n                borderRadius: '12px',\n                position: 'absolute',\n                left: finalPosition,\n                transition: 'all 0.3s ease',\n                zIndex: isExpanded ? ownedProperties.length : index,\n                display: 'flex',\n                flexDirection: 'column',\n                padding: '14px',\n                boxSizing: 'border-box',\n                backgroundColor: 'rgb(173, 216, 230)',\n                cursor: isLastProperty ? 'default' : 'pointer'\n              }}\n            >\n              <div style={{\n                transform: 'rotate(-90deg)',\n                transformOrigin: 'left center',\n                position: 'absolute',\n                width: '280px',\n                height: '210px',\n                top: '140px',\n                left: '105px',\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'flex-start',\n                justifyContent: 'flex-start',\n                color: '#333',\n                fontSize: '1.68rem',\n                fontWeight: 'bold',\n                padding: '14px'\n              }}>\n                <div style={{\n                  fontSize: '1.96rem',\n                  marginBottom: '14px',\n                  textAlign: 'left',\n                  whiteSpace: 'nowrap',\n                  overflow: 'hidden',\n                  textOverflow: 'ellipsis',\n                  maxWidth: '252px',\n                  width: '100%'\n                }}>\n                  {property.name}\n                </div>\n                <div style={{\n                  fontSize: '1.4rem',\n                  textAlign: 'left',\n                  marginBottom: '12px'\n                }}>\n                  Cost: ${property.cost}\n                </div>\n                <div style={{\n                  fontSize: '1.4rem',\n                  textAlign: 'left',\n                  display: 'flex',\n                  alignItems: 'center',\n                  gap: '12px',\n                  marginBottom: '12px'\n                }}>\n                  Rent: ${property.rent}\n                  {multiplier > 1 && (\n                    <span style={{ \n                      color: '#FFA500', \n                      fontSize: '1.3em', \n                      fontWeight: 'bold'\n                    }}>\n                      X{multiplier}\n                    </span>\n                  )}\n                </div>\n                <div style={{\n                  width: '100%',\n                  textAlign: 'left'\n                }}>\n                  <button\n                    onClick={handleSell}\n                    style={{\n                      backgroundColor: '#ff4444',\n                      color: 'white',\n                      border: 'none',\n                      borderRadius: '4px',\n                      padding: '4px 8px',\n                      cursor: 'pointer',\n                      fontSize: '1.2rem',\n                      fontWeight: 'bold'\n                    }}\n                  >\n                    Sell\n                  </button>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n\n      {/* Left side property stacks */}\n      {leftPlayers.map((leftPlayer, idx) => (\n        <PropertyDisplayLeft \n          key={leftPlayer.socketId} \n          player={leftPlayer}\n          position={idx === 0 ? 'top' : 'bottom'}\n        />\n      ))}\n\n      {/* Right side property stacks */}\n      {rightPlayers.map((rightPlayer, idx) => (\n        <PropertyDisplayRight\n          key={rightPlayer.socketId}\n          player={rightPlayer}\n          position={idx === 0 ? 'top' : 'bottom'}\n        />\n      ))}\n    </>\n  );\n};\n\nexport default PropertyDisplay; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}