{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\addhy\\\\Desktop\\\\Business_web\\\\client\\\\src\\\\components\\\\DiceRoller.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from 'react';\nimport { GameContext } from '../context/GameContext';\nimport d1 from '../assets/dice/dice1.png';\nimport d2 from '../assets/dice/dice2.png';\nimport d3 from '../assets/dice/dice3.png';\nimport d4 from '../assets/dice/dice4.png';\nimport d5 from '../assets/dice/dice5.png';\nimport d6 from '../assets/dice/dice6.png';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst diceImgs = {\n  1: d1,\n  2: d2,\n  3: d3,\n  4: d4,\n  5: d5,\n  6: d6\n};\nconst DiceRoller = () => {\n  _s();\n  const {\n    setOriginalCount,\n    setIsMoving,\n    isMoving,\n    player,\n    players,\n    currentPlayerIndex,\n    setCurrentPlayerIndex\n  } = useContext(GameContext);\n  const [diceRoll, setDiceRoll] = useState(null);\n  const rollDice = () => {\n    var _players$currentPlaye;\n    if (!player || ((_players$currentPlaye = players[currentPlayerIndex]) === null || _players$currentPlaye === void 0 ? void 0 : _players$currentPlaye.name) !== player.name) return;\n    if (isMoving || diceRoll) return;\n    const d1 = Math.ceil(Math.random() * 6);\n    const d2 = Math.ceil(Math.random() * 6);\n    setDiceRoll([d1, d2]);\n    setOriginalCount(d1 + d2);\n    setIsMoving(true);\n  };\n  const handleDone = () => {\n    setDiceRoll(null);\n    setCurrentPlayerIndex(prev => (prev + 1) % players.length);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center'\n    },\n    children: [!diceRoll && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: rollDice,\n      children: \"Roll Dice\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }, this), diceRoll && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: diceImgs[diceRoll[0]],\n          alt: `Die ${diceRoll[0]}`,\n          width: 40\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: diceImgs[diceRoll[1]],\n          alt: `Die ${diceRoll[1]}`,\n          width: 40\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), !isMoving && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDone,\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(DiceRoller, \"uwaWyyVcem+CEmLG3HocTadW+Ug=\");\n_c = DiceRoller;\nexport default DiceRoller;\nvar _c;\n$RefreshReg$(_c, \"DiceRoller\");","map":{"version":3,"names":["React","useContext","useState","GameContext","d1","d2","d3","d4","d5","d6","jsxDEV","_jsxDEV","Fragment","_Fragment","diceImgs","DiceRoller","_s","setOriginalCount","setIsMoving","isMoving","player","players","currentPlayerIndex","setCurrentPlayerIndex","diceRoll","setDiceRoll","rollDice","_players$currentPlaye","name","Math","ceil","random","handleDone","prev","length","style","textAlign","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","width","_c","$RefreshReg$"],"sources":["C:/Users/addhy/Desktop/Business_web/client/src/components/DiceRoller.js"],"sourcesContent":["import React, { useContext, useState } from 'react';\nimport { GameContext } from '../context/GameContext';\nimport d1 from '../assets/dice/dice1.png';\nimport d2 from '../assets/dice/dice2.png';\nimport d3 from '../assets/dice/dice3.png';\nimport d4 from '../assets/dice/dice4.png';\nimport d5 from '../assets/dice/dice5.png';\nimport d6 from '../assets/dice/dice6.png';\n\nconst diceImgs = {1:d1,2:d2,3:d3,4:d4,5:d5,6:d6};\n\nconst DiceRoller = () => {\n  const { setOriginalCount, setIsMoving, isMoving, player, players, currentPlayerIndex, setCurrentPlayerIndex } = useContext(GameContext);\n  const [diceRoll, setDiceRoll] = useState(null);\n\n  const rollDice = () => {\n    if (!player || players[currentPlayerIndex]?.name !== player.name) return;\n    if (isMoving || diceRoll) return;\n    const d1 = Math.ceil(Math.random()*6);\n    const d2 = Math.ceil(Math.random()*6);\n    setDiceRoll([d1,d2]);\n    setOriginalCount(d1+d2);\n    setIsMoving(true);\n  };\n\n  const handleDone = () => {\n    setDiceRoll(null);\n    setCurrentPlayerIndex((prev)=>(prev+1)%players.length);\n  };\n\n  return (\n    <div style={{ textAlign:'center' }}>\n      {!diceRoll && <button onClick={rollDice}>Roll Dice</button>}\n      {diceRoll && (\n        <>\n          <div>\n            <img src={diceImgs[diceRoll[0]]} alt={`Die ${diceRoll[0]}`} width={40}/>\n            <img src={diceImgs[diceRoll[1]]} alt={`Die ${diceRoll[1]}`} width={40}/>\n          </div>\n          {!isMoving && <button onClick={handleDone}>Done</button>}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default DiceRoller;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AACnD,SAASC,WAAW,QAAQ,wBAAwB;AACpD,OAAOC,EAAE,MAAM,0BAA0B;AACzC,OAAOC,EAAE,MAAM,0BAA0B;AACzC,OAAOC,EAAE,MAAM,0BAA0B;AACzC,OAAOC,EAAE,MAAM,0BAA0B;AACzC,OAAOC,EAAE,MAAM,0BAA0B;AACzC,OAAOC,EAAE,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1C,MAAMC,QAAQ,GAAG;EAAC,CAAC,EAACV,EAAE;EAAC,CAAC,EAACC,EAAE;EAAC,CAAC,EAACC,EAAE;EAAC,CAAC,EAACC,EAAE;EAAC,CAAC,EAACC,EAAE;EAAC,CAAC,EAACC;AAAE,CAAC;AAEhD,MAAMM,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM;IAAEC,gBAAgB;IAAEC,WAAW;IAAEC,QAAQ;IAAEC,MAAM;IAAEC,OAAO;IAAEC,kBAAkB;IAAEC;EAAsB,CAAC,GAAGtB,UAAU,CAACE,WAAW,CAAC;EACvI,MAAM,CAACqB,QAAQ,EAAEC,WAAW,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC;EAE9C,MAAMwB,QAAQ,GAAGA,CAAA,KAAM;IAAA,IAAAC,qBAAA;IACrB,IAAI,CAACP,MAAM,IAAI,EAAAO,qBAAA,GAAAN,OAAO,CAACC,kBAAkB,CAAC,cAAAK,qBAAA,uBAA3BA,qBAAA,CAA6BC,IAAI,MAAKR,MAAM,CAACQ,IAAI,EAAE;IAClE,IAAIT,QAAQ,IAAIK,QAAQ,EAAE;IAC1B,MAAMpB,EAAE,GAAGyB,IAAI,CAACC,IAAI,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAC,CAAC,CAAC;IACrC,MAAM1B,EAAE,GAAGwB,IAAI,CAACC,IAAI,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAC,CAAC,CAAC;IACrCN,WAAW,CAAC,CAACrB,EAAE,EAACC,EAAE,CAAC,CAAC;IACpBY,gBAAgB,CAACb,EAAE,GAACC,EAAE,CAAC;IACvBa,WAAW,CAAC,IAAI,CAAC;EACnB,CAAC;EAED,MAAMc,UAAU,GAAGA,CAAA,KAAM;IACvBP,WAAW,CAAC,IAAI,CAAC;IACjBF,qBAAqB,CAAEU,IAAI,IAAG,CAACA,IAAI,GAAC,CAAC,IAAEZ,OAAO,CAACa,MAAM,CAAC;EACxD,CAAC;EAED,oBACEvB,OAAA;IAAKwB,KAAK,EAAE;MAAEC,SAAS,EAAC;IAAS,CAAE;IAAAC,QAAA,GAChC,CAACb,QAAQ,iBAAIb,OAAA;MAAQ2B,OAAO,EAAEZ,QAAS;MAAAW,QAAA,EAAC;IAAS;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC1DlB,QAAQ,iBACPb,OAAA,CAAAE,SAAA;MAAAwB,QAAA,gBACE1B,OAAA;QAAA0B,QAAA,gBACE1B,OAAA;UAAKgC,GAAG,EAAE7B,QAAQ,CAACU,QAAQ,CAAC,CAAC,CAAC,CAAE;UAACoB,GAAG,EAAE,OAAOpB,QAAQ,CAAC,CAAC,CAAC,EAAG;UAACqB,KAAK,EAAE;QAAG;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eACxE/B,OAAA;UAAKgC,GAAG,EAAE7B,QAAQ,CAACU,QAAQ,CAAC,CAAC,CAAC,CAAE;UAACoB,GAAG,EAAE,OAAOpB,QAAQ,CAAC,CAAC,CAAC,EAAG;UAACqB,KAAK,EAAE;QAAG;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrE,CAAC,EACL,CAACvB,QAAQ,iBAAIR,OAAA;QAAQ2B,OAAO,EAAEN,UAAW;QAAAK,QAAA,EAAC;MAAI;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,eACxD,CACH;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC1B,EAAA,CAjCID,UAAU;AAAA+B,EAAA,GAAV/B,UAAU;AAmChB,eAAeA,UAAU;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}