{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\addhy\\\\Desktop\\\\Business_web\\\\client\\\\src\\\\components\\\\Board.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState, useEffect } from 'react';\nimport { GameContext } from '../context/GameContext';\nimport boardImage from '../assets/board.png';\nimport { tiles } from '../data/tiles';\n\n// Map piece names to images (update as needed for your assets)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst pieceImages = {};\nfor (let i = 1; i <= 8; i++) {\n  pieceImages[`piece${i}.png`] = require(`../assets/pieces/piece${i}.png`);\n}\nconst PIECE_SIZE = 75; // Size in px (adjust as needed)\n\nconst Board = () => {\n  _s();\n  const {\n    players\n  } = useContext(GameContext);\n  const [boardSize, setBoardSize] = useState({\n    width: 600,\n    height: 600\n  });\n  useEffect(() => {\n    const img = new window.Image();\n    img.onload = () => setBoardSize({\n      width: img.width,\n      height: img.height\n    });\n    img.src = boardImage;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center',\n      marginTop: 20\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative',\n        width: boardSize.width,\n        height: boardSize.height,\n        backgroundImage: `url(${boardImage})`,\n        backgroundSize: '100% 100%',\n        border: '3px solid #333',\n        margin: '0 auto'\n      },\n      children: players.map((p, i) => {\n        const imgSrc = pieceImages[p.piece];\n        if (!imgSrc) return null;\n        const tile = tiles.find(t => t.id === p.tileId);\n        if (!tile) return null;\n        const {\n          x,\n          y\n        } = tile.position;\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          src: imgSrc,\n          alt: p.name,\n          title: p.name,\n          style: {\n            position: 'absolute',\n            top: y + i * 10 - PIECE_SIZE / 2,\n            left: x + i * 10 - PIECE_SIZE / 2,\n            width: PIECE_SIZE,\n            height: PIECE_SIZE,\n            transition: 'top 0.3s, left 0.3s',\n            zIndex: 10\n          }\n        }, p.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(Board, \"Os6PbvUoKLLdbpn6ZuVsWjL5JZY=\");\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useContext","useState","useEffect","GameContext","boardImage","tiles","jsxDEV","_jsxDEV","pieceImages","i","require","PIECE_SIZE","Board","_s","players","boardSize","setBoardSize","width","height","img","window","Image","onload","src","style","textAlign","marginTop","children","position","backgroundImage","backgroundSize","border","margin","map","p","imgSrc","piece","tile","find","t","id","tileId","x","y","alt","name","title","top","left","transition","zIndex","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/addhy/Desktop/Business_web/client/src/components/Board.js"],"sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\r\nimport { GameContext } from '../context/GameContext';\r\nimport boardImage from '../assets/board.png';\r\nimport { tiles } from '../data/tiles';\r\n\r\n// Map piece names to images (update as needed for your assets)\r\nconst pieceImages = {};\r\nfor (let i = 1; i <= 8; i++) {\r\n  pieceImages[`piece${i}.png`] = require(`../assets/pieces/piece${i}.png`);\r\n}\r\n\r\nconst PIECE_SIZE = 75; // Size in px (adjust as needed)\r\n\r\nconst Board = () => {\r\n  const { players } = useContext(GameContext);\r\n  const [boardSize, setBoardSize] = useState({ width: 600, height: 600 });\r\n\r\n  useEffect(() => {\r\n    const img = new window.Image();\r\n    img.onload = () => setBoardSize({ width: img.width, height: img.height });\r\n    img.src = boardImage;\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ textAlign: 'center', marginTop: 20 }}>\r\n      <div\r\n        style={{\r\n          position: 'relative',\r\n          width: boardSize.width,\r\n          height: boardSize.height,\r\n          backgroundImage: `url(${boardImage})`,\r\n          backgroundSize: '100% 100%',\r\n          border: '3px solid #333',\r\n          margin: '0 auto',\r\n        }}\r\n      >\r\n        {players.map((p, i) => {\r\n          const imgSrc = pieceImages[p.piece];\r\n          if (!imgSrc) return null;\r\n          const tile = tiles.find(t => t.id === p.tileId);\r\n          if (!tile) return null;\r\n          const { x, y } = tile.position;\r\n          return (\r\n            <img\r\n              key={p.id}\r\n              src={imgSrc}\r\n              alt={p.name}\r\n              title={p.name}\r\n              style={{\r\n                position: 'absolute',\r\n                top: y + i * 10 - PIECE_SIZE / 2,\r\n                left: x + i * 10 - PIECE_SIZE / 2,\r\n                width: PIECE_SIZE,\r\n                height: PIECE_SIZE,\r\n                transition: 'top 0.3s, left 0.3s',\r\n                zIndex: 10,\r\n              }}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}