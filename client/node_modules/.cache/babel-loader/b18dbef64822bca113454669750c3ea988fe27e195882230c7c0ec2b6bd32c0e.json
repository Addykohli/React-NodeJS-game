{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\addhy\\\\Desktop\\\\Business_web - Copy (2)\\\\client\\\\src\\\\components\\\\GameScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState, useEffect } from 'react';\nimport bgImage from '../assets/bg.png';\nimport Dicebox from '../assets/diceBoard.png';\nimport startIcon from '../assets/start.png';\nimport hotelIcon from '../assets/hotel.png';\nimport casinoIcon from '../assets/casino.png';\nimport roadIcon from '../assets/road.png';\nimport Board from './Board';\nimport DiceRoller from './DiceRoller';\nimport Dashboard from './Dashboard';\nimport PlayerStats from './PlayerStats';\nimport { GameContext } from '../context/GameContext';\nimport { tiles } from '../data/tiles';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function GameScreen() {\n  _s();\n  const {\n    player,\n    players,\n    setPlayer,\n    setPlayers,\n    currentPlayerId,\n    socket,\n    movementDone\n  } = useContext(GameContext);\n  const isMyTurn = (player === null || player === void 0 ? void 0 : player.socketId) === currentPlayerId;\n  const [error, setError] = useState(null);\n  const [testRollInput, setTestRollInput] = useState('');\n  const [testRollMode, setTestRollMode] = useState(false);\n\n  // Determine metadata for the current tile\n  const tileMeta = tiles.find(t => t.id === (player === null || player === void 0 ? void 0 : player.tileId));\n\n  // Add keyboard listener for test rolls\n  useEffect(() => {\n    const handleKeyPress = e => {\n      if (!isMyTurn) return;\n\n      // Build up the test roll input\n      if (e.key === 'Enter' && testRollInput.startsWith('testroll')) {\n        const rollNumber = parseInt(testRollInput.slice(8));\n        if (!isNaN(rollNumber) && rollNumber >= 2 && rollNumber <= 12) {\n          socket.emit('rollDice', {\n            testRoll: rollNumber\n          });\n          setTestRollInput('');\n          setTestRollMode(false);\n        }\n      } else if (e.key === 'Backspace') {\n        setTestRollInput(prev => prev.slice(0, -1));\n      } else if (e.key.length === 1) {\n        // Regular character\n        setTestRollInput(prev => prev + e.key);\n      }\n    };\n    window.addEventListener('keydown', handleKeyPress);\n    return () => window.removeEventListener('keydown', handleKeyPress);\n  }, [isMyTurn, testRollInput, socket]);\n\n  // Show current test roll input if active\n  useEffect(() => {\n    if (testRollInput.startsWith('testroll')) {\n      setTestRollMode(true);\n    } else if (testRollInput.length === 0) {\n      setTestRollMode(false);\n    }\n  }, [testRollInput]);\n\n  // Debug logging to trace condition\n  useEffect(() => {\n    console.log('[GameScreen] Debug:', {\n      isMyTurn,\n      movementDone,\n      tileMeta,\n      \"player.tileId\": player === null || player === void 0 ? void 0 : player.tileId,\n      \"tileMeta.type\": tileMeta === null || tileMeta === void 0 ? void 0 : tileMeta.type,\n      \"tileMeta.cost\": tileMeta === null || tileMeta === void 0 ? void 0 : tileMeta.cost,\n      \"player.money\": player === null || player === void 0 ? void 0 : player.money,\n      testRollMode,\n      testRollInput\n    });\n  }, [isMyTurn, movementDone, tileMeta, player, testRollMode, testRollInput]);\n\n  // Listen for purchase events\n  useEffect(() => {\n    socket.on('purchaseSuccess', ({\n      socketId,\n      money,\n      properties\n    }) => {\n      console.log('[GameScreen] purchaseSuccess', {\n        socketId,\n        money,\n        properties\n      });\n      const updated = players.map(p => p.socketId === socketId ? {\n        ...p,\n        money,\n        properties\n      } : p);\n      setPlayers(updated);\n      if (player.socketId === socketId) {\n        setPlayer({\n          ...player,\n          money,\n          properties\n        });\n      }\n      setError(null);\n    });\n\n    // Add playerMoved event handler\n    socket.on('playerMoved', ({\n      playerId,\n      tileId\n    }) => {\n      console.log('[GameScreen] playerMoved', {\n        playerId,\n        tileId\n      });\n      if (playerId === (player === null || player === void 0 ? void 0 : player.socketId)) {\n        setPlayer(prev => ({\n          ...prev,\n          tileId\n        }));\n      }\n      setPlayers(prev => prev.map(p => p.socketId === playerId ? {\n        ...p,\n        tileId\n      } : p));\n      // Clear any previous messages when a player moves\n      setError(null);\n    });\n    socket.on('purchaseFailed', ({\n      reason\n    }) => {\n      console.log('[GameScreen] purchaseFailed', reason);\n      if (reason === 'insufficientFunds') {\n        setError(\"You don't have enough money.\");\n      } else if (reason === 'alreadyOwned') {\n        setError('You already own this property.');\n      } else {\n        setError('Cannot buy this property.');\n      }\n      // Clear error message after 5 seconds\n      setTimeout(() => setError(null), 5000);\n    });\n\n    // Add rent payment handler\n    socket.on('rentPaid', ({\n      payerSocketId,\n      payerMoney,\n      ownerSocketId,\n      ownerMoney,\n      amount,\n      propertyName\n    }) => {\n      console.log('[GameScreen] rentPaid', {\n        payerSocketId,\n        ownerSocketId,\n        amount\n      });\n\n      // Update players' money\n      const updated = players.map(p => {\n        if (p.socketId === payerSocketId) return {\n          ...p,\n          money: payerMoney\n        };\n        if (p.socketId === ownerSocketId) return {\n          ...p,\n          money: ownerMoney\n        };\n        return p;\n      });\n      setPlayers(updated);\n\n      // Update current player's money if they were involved\n      if (player.socketId === payerSocketId) {\n        var _players$find;\n        setPlayer({\n          ...player,\n          money: payerMoney\n        });\n        setError(`You paid $${amount} rent to ${(_players$find = players.find(p => p.socketId === ownerSocketId)) === null || _players$find === void 0 ? void 0 : _players$find.name} for landing on ${propertyName}`);\n      } else if (player.socketId === ownerSocketId) {\n        var _players$find2;\n        setPlayer({\n          ...player,\n          money: ownerMoney\n        });\n        setError(`You received $${amount} rent from ${(_players$find2 = players.find(p => p.socketId === payerSocketId)) === null || _players$find2 === void 0 ? void 0 : _players$find2.name} for ${propertyName}`);\n      }\n      // Clear rent message after 5 seconds\n      setTimeout(() => setError(null), 5000);\n    });\n\n    // Add rent bonus handler\n    socket.on('rentBonus', ({\n      playerSocketId,\n      newMoney,\n      amount,\n      propertyName\n    }) => {\n      console.log('[GameScreen] rentBonus', {\n        playerSocketId,\n        amount\n      });\n\n      // Update player's money\n      const updated = players.map(p => p.socketId === playerSocketId ? {\n        ...p,\n        money: newMoney\n      } : p);\n      setPlayers(updated);\n\n      // Update current player if they got the bonus\n      if (player.socketId === playerSocketId) {\n        setPlayer({\n          ...player,\n          money: newMoney\n        });\n        setError(`You received $${amount} bonus for landing on your property ${propertyName}!`);\n        // Clear bonus message after 5 seconds\n        setTimeout(() => setError(null), 5000);\n      }\n    });\n    return () => {\n      socket.off('purchaseSuccess');\n      socket.off('purchaseFailed');\n      socket.off('rentPaid');\n      socket.off('playerMoved');\n      socket.off('rentBonus');\n    };\n  }, [socket, player, players, setPlayer, setPlayers]);\n  const handleBuy = () => {\n    console.log('[GameScreen] handleBuy invoked');\n    setError(null);\n    socket.emit('buyProperty');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      minHeight: '100vh',\n      position: 'relative',\n      backgroundImage: `url(${bgImage})`,\n      backgroundSize: 'cover',\n      backgroundPosition: 'center',\n      backgroundRepeat: 'no-repeat',\n      overflow: 'hidden'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '240px',\n        display: 'flex',\n        zIndex: 100,\n        background: 'rgba(80, 80, 80, 0.61)',\n        boxShadow: '0 2px 8px rgba(0,0,0,0.2)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1,\n          position: 'relative',\n          height: '100%',\n          borderRight: '1px solid #333',\n          overflow: 'hidden'\n        },\n        children: [isMyTurn && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: Dicebox,\n            alt: \"Dice Board\",\n            style: {\n              position: 'absolute',\n              top: 0,\n              left: 0,\n              width: '100%',\n              height: '100%',\n              objectFit: 'fill',\n              pointerEvents: 'none'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 15\n          }, this), testRollMode && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'absolute',\n              top: '50%',\n              left: '50%',\n              transform: 'translate(-50%, -50%)',\n              backgroundColor: 'rgba(0, 0, 0, 0.8)',\n              color: '#fff',\n              padding: '8px 16px',\n              borderRadius: '4px',\n              zIndex: 100\n            },\n            children: testRollInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(DiceRoller, {\n          testRollMode: testRollMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1,\n          borderRight: '1px solid #333',\n          height: '100%',\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        children: (() => {\n          // Check if any player owns this property\n          const isPropertyOwned = players.some(p => p.properties.includes(tileMeta === null || tileMeta === void 0 ? void 0 : tileMeta.id));\n          const show = isMyTurn && movementDone && (tileMeta === null || tileMeta === void 0 ? void 0 : tileMeta.type) === 'property' && !isPropertyOwned;\n          console.log('[GameScreen] isMyTurn?', isMyTurn);\n          console.log('[GameScreen] movementDone?', movementDone);\n          console.log('[GameScreen] tileMeta)?', tileMeta);\n          console.log('[GameScreen] isPropertyOwned?', isPropertyOwned);\n          console.log('[GameScreen] render Buy?', show);\n          return show ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleBuy,\n              disabled: player.money < tileMeta.cost,\n              style: {\n                padding: '8px 16px',\n                margin: '4px'\n              },\n              children: [\"Buy ($\", tileMeta.cost, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 17\n            }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: 'tomato',\n                marginTop: '8px'\n              },\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true) : error && /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: 'tomato',\n              marginTop: '8px'\n            },\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 24\n          }, this);\n        })()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1,\n          borderRight: '1px solid #333',\n          height: '100%',\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n          padding: '10px',\n          position: 'relative'\n        },\n        children: (_tileMeta$name => {\n          const isCornerChoice = isMyTurn && movementDone && (tileMeta === null || tileMeta === void 0 ? void 0 : (_tileMeta$name = tileMeta.name) === null || _tileMeta$name === void 0 ? void 0 : _tileMeta$name.toLowerCase().includes('choose corner'));\n          console.log('[GameScreen] isCornerChoice?', isCornerChoice);\n          console.log('[GameScreen] currentTile:', tileMeta);\n          const buttonContainerStyle = {\n            display: 'grid',\n            gridTemplateColumns: '1fr 1fr',\n            gridTemplateRows: '1fr 1fr',\n            gap: '4px',\n            width: '100%',\n            height: '100%',\n            padding: '4px'\n          };\n          const buttonStyle = {\n            margin: 0,\n            padding: 0,\n            border: '2px solid #666',\n            borderRadius: '8px',\n            backgroundSize: 'contain',\n            backgroundRepeat: 'no-repeat',\n            backgroundPosition: 'center center',\n            cursor: 'pointer',\n            display: 'flex',\n            alignItems: 'flex-end',\n            justifyContent: 'center',\n            width: '100%',\n            height: '100%',\n            position: 'relative',\n            backgroundColor: 'rgba(255, 255, 255, 0.1)'\n          };\n          const labelStyle = {\n            padding: '4px 8px',\n            backgroundColor: 'rgba(0,0,0,0.5)',\n            borderRadius: '0 0 6px 6px',\n            color: '#fff',\n            fontWeight: 'bold',\n            textShadow: '2px 2px 4px rgba(0,0,0,0.7)',\n            position: 'absolute',\n            bottom: 0,\n            width: '100%',\n            textAlign: 'center'\n          };\n          return isCornerChoice ? /*#__PURE__*/_jsxDEV(\"div\", {\n            style: buttonContainerStyle,\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                socket.emit('teleport', {\n                  toTile: 1,\n                  prevTile: 30\n                });\n                setError(null);\n              },\n              style: {\n                ...buttonStyle,\n                backgroundImage: `url(${startIcon})`\n              },\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                style: labelStyle,\n                children: \"Start\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                socket.emit('teleport', {\n                  toTile: 7,\n                  prevTile: 6\n                });\n                setError(null);\n              },\n              style: {\n                ...buttonStyle,\n                backgroundImage: `url(${hotelIcon})`\n              },\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                style: labelStyle,\n                children: \"Hotel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                socket.emit('teleport', {\n                  toTile: 16,\n                  prevTile: 15\n                });\n                setError(null);\n              },\n              style: {\n                ...buttonStyle,\n                backgroundImage: `url(${casinoIcon})`\n              },\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                style: labelStyle,\n                children: \"Casino\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                socket.emit('teleport', {\n                  toTile: 22,\n                  prevTile: 21\n                });\n                setError(null);\n              },\n              style: {\n                ...buttonStyle,\n                backgroundImage: `url(${roadIcon})`\n              },\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                style: labelStyle,\n                children: \"Road\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 403,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 15\n          }, this) : null;\n        })()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1,\n          height: '100%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '240px',\n        flex: 1,\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'center',\n        position: 'relative'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          minWidth: 220,\n          height: '80%',\n          marginRight: 48,\n          background: 'rgba(206, 206, 206, 0.96)',\n          borderRight: '2px solid #d3d3d3',\n          borderRadius: 12,\n          boxShadow: '0 0 12px 0 #eee',\n          padding: '16px 10px',\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'stretch'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          style: {\n            textAlign: 'center',\n            margin: 0,\n            marginBottom: 10\n          },\n          children: \"Other Players\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PlayerStats, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'relative',\n          zIndex: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(Board, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100%',\n        background: 'rgba(80, 80, 80, 0.61)',\n        borderTop: '2px solid #bbb',\n        boxShadow: '0 -2px 10px #ececec',\n        padding: '0 0 18px 0',\n        zIndex: 10\n      },\n      children: /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }, this);\n}\n_s(GameScreen, \"V/cJVh30NXeuJO2CLnkeITLGEw4=\");\n_c = GameScreen;\nvar _c;\n$RefreshReg$(_c, \"GameScreen\");","map":{"version":3,"names":["React","useContext","useState","useEffect","bgImage","Dicebox","startIcon","hotelIcon","casinoIcon","roadIcon","Board","DiceRoller","Dashboard","PlayerStats","GameContext","tiles","jsxDEV","_jsxDEV","Fragment","_Fragment","GameScreen","_s","player","players","setPlayer","setPlayers","currentPlayerId","socket","movementDone","isMyTurn","socketId","error","setError","testRollInput","setTestRollInput","testRollMode","setTestRollMode","tileMeta","find","t","id","tileId","handleKeyPress","e","key","startsWith","rollNumber","parseInt","slice","isNaN","emit","testRoll","prev","length","window","addEventListener","removeEventListener","console","log","type","cost","money","on","properties","updated","map","p","playerId","reason","setTimeout","payerSocketId","payerMoney","ownerSocketId","ownerMoney","amount","propertyName","_players$find","name","_players$find2","playerSocketId","newMoney","off","handleBuy","style","display","flexDirection","minHeight","position","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","overflow","children","top","left","width","height","zIndex","background","boxShadow","flex","borderRight","src","alt","objectFit","pointerEvents","fileName","_jsxFileName","lineNumber","columnNumber","transform","backgroundColor","color","padding","borderRadius","alignItems","justifyContent","isPropertyOwned","some","includes","show","onClick","disabled","margin","marginTop","_tileMeta$name","isCornerChoice","toLowerCase","buttonContainerStyle","gridTemplateColumns","gridTemplateRows","gap","buttonStyle","border","cursor","labelStyle","fontWeight","textShadow","bottom","textAlign","toTile","prevTile","minWidth","marginRight","marginBottom","borderTop","_c","$RefreshReg$"],"sources":["C:/Users/addhy/Desktop/Business_web - Copy (2)/client/src/components/GameScreen.js"],"sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\nimport bgImage from '../assets/bg.png';\nimport Dicebox from '../assets/diceBoard.png';\nimport startIcon from '../assets/start.png';\nimport hotelIcon from '../assets/hotel.png';\nimport casinoIcon from '../assets/casino.png';\nimport roadIcon from '../assets/road.png';\nimport Board from './Board';\nimport DiceRoller from './DiceRoller';\nimport Dashboard from './Dashboard';\nimport PlayerStats from './PlayerStats';\nimport { GameContext } from '../context/GameContext';\nimport { tiles } from '../data/tiles';\n\nexport default function GameScreen() {\n  const {\n    player,\n    players,\n    setPlayer,\n    setPlayers,\n    currentPlayerId,\n    socket,\n    movementDone\n  } = useContext(GameContext);\n\n  const isMyTurn = player?.socketId === currentPlayerId;\n  const [error, setError] = useState(null);\n  const [testRollInput, setTestRollInput] = useState('');\n  const [testRollMode, setTestRollMode] = useState(false);\n\n  // Determine metadata for the current tile\n  const tileMeta = tiles.find(t => t.id === player?.tileId);\n\n  // Add keyboard listener for test rolls\n  useEffect(() => {\n    const handleKeyPress = (e) => {\n      if (!isMyTurn) return;\n\n      // Build up the test roll input\n      if (e.key === 'Enter' && testRollInput.startsWith('testroll')) {\n        const rollNumber = parseInt(testRollInput.slice(8));\n        if (!isNaN(rollNumber) && rollNumber >= 2 && rollNumber <= 12) {\n          socket.emit('rollDice', { testRoll: rollNumber });\n          setTestRollInput('');\n          setTestRollMode(false);\n        }\n      } else if (e.key === 'Backspace') {\n        setTestRollInput(prev => prev.slice(0, -1));\n      } else if (e.key.length === 1) { // Regular character\n        setTestRollInput(prev => prev + e.key);\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyPress);\n    return () => window.removeEventListener('keydown', handleKeyPress);\n  }, [isMyTurn, testRollInput, socket]);\n\n  // Show current test roll input if active\n  useEffect(() => {\n    if (testRollInput.startsWith('testroll')) {\n      setTestRollMode(true);\n    } else if (testRollInput.length === 0) {\n      setTestRollMode(false);\n    }\n  }, [testRollInput]);\n\n  // Debug logging to trace condition\n  useEffect(() => {\n    console.log('[GameScreen] Debug:', {\n      isMyTurn,\n      movementDone,\n      tileMeta,\n      \"player.tileId\": player?.tileId,\n      \"tileMeta.type\": tileMeta?.type,\n      \"tileMeta.cost\": tileMeta?.cost,\n      \"player.money\": player?.money,\n      testRollMode,\n      testRollInput\n    });\n  }, [isMyTurn, movementDone, tileMeta, player, testRollMode, testRollInput]);\n\n  // Listen for purchase events\n  useEffect(() => {\n    socket.on('purchaseSuccess', ({ socketId, money, properties }) => {\n      console.log('[GameScreen] purchaseSuccess', { socketId, money, properties });\n      const updated = players.map(p =>\n        p.socketId === socketId ? { ...p, money, properties } : p\n      );\n      setPlayers(updated);\n      if (player.socketId === socketId) {\n        setPlayer({ ...player, money, properties });\n      }\n      setError(null);\n    });\n\n    // Add playerMoved event handler\n    socket.on('playerMoved', ({ playerId, tileId }) => {\n      console.log('[GameScreen] playerMoved', { playerId, tileId });\n      if (playerId === player?.socketId) {\n        setPlayer(prev => ({ ...prev, tileId }));\n      }\n      setPlayers(prev => \n        prev.map(p => p.socketId === playerId ? { ...p, tileId } : p)\n      );\n      // Clear any previous messages when a player moves\n      setError(null);\n    });\n\n    socket.on('purchaseFailed', ({ reason }) => {\n      console.log('[GameScreen] purchaseFailed', reason);\n      if (reason === 'insufficientFunds') {\n        setError(\"You don't have enough money.\");\n      } else if (reason === 'alreadyOwned') {\n        setError('You already own this property.');\n      } else {\n        setError('Cannot buy this property.');\n      }\n      // Clear error message after 5 seconds\n      setTimeout(() => setError(null), 5000);\n    });\n\n    // Add rent payment handler\n    socket.on('rentPaid', ({ payerSocketId, payerMoney, ownerSocketId, ownerMoney, amount, propertyName }) => {\n      console.log('[GameScreen] rentPaid', { payerSocketId, ownerSocketId, amount });\n      \n      // Update players' money\n      const updated = players.map(p => {\n        if (p.socketId === payerSocketId) return { ...p, money: payerMoney };\n        if (p.socketId === ownerSocketId) return { ...p, money: ownerMoney };\n        return p;\n      });\n      setPlayers(updated);\n\n      // Update current player's money if they were involved\n      if (player.socketId === payerSocketId) {\n        setPlayer({ ...player, money: payerMoney });\n        setError(`You paid $${amount} rent to ${players.find(p => p.socketId === ownerSocketId)?.name} for landing on ${propertyName}`);\n      } else if (player.socketId === ownerSocketId) {\n        setPlayer({ ...player, money: ownerMoney });\n        setError(`You received $${amount} rent from ${players.find(p => p.socketId === payerSocketId)?.name} for ${propertyName}`);\n      }\n      // Clear rent message after 5 seconds\n      setTimeout(() => setError(null), 5000);\n    });\n\n    // Add rent bonus handler\n    socket.on('rentBonus', ({ playerSocketId, newMoney, amount, propertyName }) => {\n      console.log('[GameScreen] rentBonus', { playerSocketId, amount });\n      \n      // Update player's money\n      const updated = players.map(p =>\n        p.socketId === playerSocketId ? { ...p, money: newMoney } : p\n      );\n      setPlayers(updated);\n\n      // Update current player if they got the bonus\n      if (player.socketId === playerSocketId) {\n        setPlayer({ ...player, money: newMoney });\n        setError(`You received $${amount} bonus for landing on your property ${propertyName}!`);\n        // Clear bonus message after 5 seconds\n        setTimeout(() => setError(null), 5000);\n      }\n    });\n\n    return () => {\n      socket.off('purchaseSuccess');\n      socket.off('purchaseFailed');\n      socket.off('rentPaid');\n      socket.off('playerMoved');\n      socket.off('rentBonus');\n    };\n  }, [socket, player, players, setPlayer, setPlayers]);\n\n  const handleBuy = () => {\n    console.log('[GameScreen] handleBuy invoked');\n    setError(null);\n    socket.emit('buyProperty');\n  };\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        minHeight: '100vh',\n        position: 'relative',\n        backgroundImage: `url(${bgImage})`,\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n        backgroundRepeat: 'no-repeat',\n        overflow: 'hidden'\n      }}\n    >\n      {/* Top bar with 4 quarters */}\n      <div\n        style={{\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          width: '100%',\n          height: '240px',\n          display: 'flex',\n          zIndex: 100,\n          background: 'rgba(80, 80, 80, 0.61)',\n          boxShadow: '0 2px 8px rgba(0,0,0,0.2)'\n        }}\n      >\n        {/* 1st quarter: Dice board */}\n        <div\n          style={{\n            flex: 1,\n            position: 'relative',\n            height: '100%',\n            borderRight: '1px solid #333',\n            overflow: 'hidden'\n          }}\n        >\n          {isMyTurn && (\n            <>\n              <img\n                src={Dicebox}\n                alt=\"Dice Board\"\n                style={{\n                  position: 'absolute',\n                  top: 0,\n                  left: 0,\n                  width: '100%',\n                  height: '100%',\n                  objectFit: 'fill',\n                  pointerEvents: 'none'\n                }}\n              />\n              {testRollMode && (\n                <div style={{\n                  position: 'absolute',\n                  top: '50%',\n                  left: '50%',\n                  transform: 'translate(-50%, -50%)',\n                  backgroundColor: 'rgba(0, 0, 0, 0.8)',\n                  color: '#fff',\n                  padding: '8px 16px',\n                  borderRadius: '4px',\n                  zIndex: 100\n                }}>\n                  {testRollInput}\n                </div>\n              )}\n            </>\n          )}\n          <DiceRoller testRollMode={testRollMode} />\n        </div>\n\n        {/* 2nd quarter: Buy  */}\n        <div\n          style={{\n            flex: 1,\n            borderRight: '1px solid #333',\n            height: '100%',\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            justifyContent: 'center'\n          }}\n        >\n          {(() => {\n            // Check if any player owns this property\n            const isPropertyOwned = players.some(p => p.properties.includes(tileMeta?.id));\n            const show = isMyTurn && movementDone && tileMeta?.type === 'property' && !isPropertyOwned;\n            \n            console.log('[GameScreen] isMyTurn?', isMyTurn);\n            console.log('[GameScreen] movementDone?', movementDone);\n            console.log('[GameScreen] tileMeta)?', tileMeta);\n            console.log('[GameScreen] isPropertyOwned?', isPropertyOwned);\n            console.log('[GameScreen] render Buy?', show);\n            \n            return show ? (\n              <>\n                <button\n                  onClick={handleBuy}\n                  disabled={player.money < tileMeta.cost}\n                  style={{ padding: '8px 16px', margin: '4px' }}\n                >\n                  Buy (${tileMeta.cost})\n                </button>\n            \n                {error && (\n                  <p style={{ color: 'tomato', marginTop: '8px' }}>{error}</p>\n                )}\n              </>\n            ) : (\n              error && <p style={{ color: 'tomato', marginTop: '8px' }}>{error}</p>\n            );\n          })()}\n        </div>\n\n        {/* 3rd quarter: Teleport */}\n        <div style={{ \n          flex: 1, \n          borderRight: '1px solid #333', \n          height: '100%',\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n          padding: '10px',\n          position: 'relative'\n        }}>\n          {(() => {\n            const isCornerChoice = isMyTurn && movementDone && tileMeta?.name?.toLowerCase().includes('choose corner');\n            \n            console.log('[GameScreen] isCornerChoice?', isCornerChoice);\n            console.log('[GameScreen] currentTile:', tileMeta);\n\n            const buttonContainerStyle = {\n              display: 'grid',\n              gridTemplateColumns: '1fr 1fr',\n              gridTemplateRows: '1fr 1fr',\n              gap: '4px',\n              width: '100%',\n              height: '100%',\n              padding: '4px'\n            };\n\n            const buttonStyle = {\n              margin: 0,\n              padding: 0,\n              border: '2px solid #666',\n              borderRadius: '8px',\n              backgroundSize: 'contain',\n              backgroundRepeat: 'no-repeat',\n              backgroundPosition: 'center center',\n              cursor: 'pointer',\n              display: 'flex',\n              alignItems: 'flex-end',\n              justifyContent: 'center',\n              width: '100%',\n              height: '100%',\n              position: 'relative',\n              backgroundColor: 'rgba(255, 255, 255, 0.1)'\n            };\n\n            const labelStyle = {\n              padding: '4px 8px',\n              backgroundColor: 'rgba(0,0,0,0.5)',\n              borderRadius: '0 0 6px 6px',\n              color: '#fff',\n              fontWeight: 'bold',\n              textShadow: '2px 2px 4px rgba(0,0,0,0.7)',\n              position: 'absolute',\n              bottom: 0,\n              width: '100%',\n              textAlign: 'center'\n            };\n\n            return isCornerChoice ? (\n              <div style={buttonContainerStyle}>\n                <button\n                  onClick={() => {\n                    socket.emit('teleport', { toTile: 1, prevTile: 30 });\n                    setError(null);\n                  }}\n                  style={{\n                    ...buttonStyle,\n                    backgroundImage: `url(${startIcon})`\n                  }}\n                >\n                  <span style={labelStyle}>Start</span>\n                </button>\n                <button\n                  onClick={() => {\n                    socket.emit('teleport', { toTile: 7, prevTile: 6 });\n                    setError(null);\n                  }}\n                  style={{\n                    ...buttonStyle,\n                    backgroundImage: `url(${hotelIcon})`\n                  }}\n                >\n                  <span style={labelStyle}>Hotel</span>\n                </button>\n                <button\n                  onClick={() => {\n                    socket.emit('teleport', { toTile: 16, prevTile: 15 });\n                    setError(null);\n                  }}\n                  style={{\n                    ...buttonStyle,\n                    backgroundImage: `url(${casinoIcon})`\n                  }}\n                >\n                  <span style={labelStyle}>Casino</span>\n                </button>\n                <button\n                  onClick={() => {\n                    socket.emit('teleport', { toTile: 22, prevTile: 21 });\n                    setError(null);\n                  }}\n                  style={{\n                    ...buttonStyle,\n                    backgroundImage: `url(${roadIcon})`\n                  }}\n                >\n                  <span style={labelStyle}>Road</span>\n                </button>\n              </div>\n            ) : null;\n          })()}\n        </div>\n\n        {/* 4th quarter */}\n        <div style={{ flex: 1, height: '100%' }} />\n      </div>\n\n      {/* Main content (board & dashboards) */}\n      <div\n        style={{\n          marginTop: '240px',\n          flex: 1,\n          display: 'flex',\n          flexDirection: 'row',\n          alignItems: 'center',\n          justifyContent: 'center',\n          position: 'relative'\n        }}\n      >\n        <div\n          style={{\n            minWidth: 220,\n            height: '80%',\n            marginRight: 48,\n            background: 'rgba(206, 206, 206, 0.96)',\n            borderRight: '2px solid #d3d3d3',\n            borderRadius: 12,\n            boxShadow: '0 0 12px 0 #eee',\n            padding: '16px 10px',\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'stretch'\n          }}\n        >\n          <h4 style={{ textAlign: 'center', margin: 0, marginBottom: 10 }}>\n            Other Players\n          </h4>\n          <PlayerStats />\n        </div>\n\n        <div style={{ position: 'relative', zIndex: 2 }}>\n          <Board />\n        </div>\n      </div>\n\n      {/* Bottom dashboard */}\n      <div\n        style={{\n          width: '100%',\n          background: 'rgba(80, 80, 80, 0.61)',\n          borderTop: '2px solid #bbb',\n          boxShadow: '0 -2px 10px #ececec',\n          padding: '0 0 18px 0',\n          zIndex: 10\n        }}\n      >\n        <Dashboard />\n      </div>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}