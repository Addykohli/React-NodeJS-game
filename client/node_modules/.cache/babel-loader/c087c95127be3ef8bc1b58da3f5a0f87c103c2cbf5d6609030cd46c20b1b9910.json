{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\addhy\\\\Desktop\\\\Business_web\\\\client\\\\src\\\\components\\\\Board.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState, useEffect } from 'react';\nimport { GameContext } from '../context/GameContext';\nimport boardImage from '../assets/board.png';\nimport { tiles } from '../data/tiles';\nimport './Board.css';\nimport piece1 from '../assets/pieces/piece1.png';\nimport piece2 from '../assets/pieces/piece2.png';\nimport piece3 from '../assets/pieces/piece3.png';\nimport piece4 from '../assets/pieces/piece4.png';\nimport piece5 from '../assets/pieces/piece5.png';\nimport piece6 from '../assets/pieces/piece6.png';\nimport piece7 from '../assets/pieces/piece7.png';\nimport piece8 from '../assets/pieces/piece8.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst pieceMap = {\n  piece1,\n  piece2,\n  piece3,\n  piece4,\n  piece5,\n  piece6,\n  piece7,\n  piece8\n};\nconst Board = () => {\n  _s();\n  const {\n    players\n  } = useContext(GameContext);\n  const [size, setSize] = useState({\n    width: 600,\n    height: 600\n  });\n\n  // load natural board size\n  useEffect(() => {\n    const img = new Image();\n    img.onload = () => setSize({\n      width: img.width,\n      height: img.height\n    });\n    img.src = boardImage;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-image\",\n      style: {\n        width: size.width,\n        height: size.height,\n        backgroundImage: `url(${boardImage})`,\n        backgroundSize: 'cover'\n      },\n      children: players.map((p, i) => {\n        const img = pieceMap[p.piece];\n        if (!img) return null;\n        const tile = tiles.find(t => t.id === p.tileId) || {};\n        const pos = tile.position || {\n          x: 40,\n          y: 520\n        };\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          src: img,\n          alt: p.name,\n          title: p.name,\n          className: \"board-piece\",\n          style: {\n            left: pos.x + i * 10,\n            top: pos.y + i * 10\n          }\n        }, p.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(Board, \"wMfkW4XtiP2R6tfCIHkPBAnRb7E=\");\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useContext","useState","useEffect","GameContext","boardImage","tiles","piece1","piece2","piece3","piece4","piece5","piece6","piece7","piece8","jsxDEV","_jsxDEV","pieceMap","Board","_s","players","size","setSize","width","height","img","Image","onload","src","className","children","style","backgroundImage","backgroundSize","map","p","i","piece","tile","find","t","id","tileId","pos","position","x","y","alt","name","title","left","top","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/addhy/Desktop/Business_web/client/src/components/Board.js"],"sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\nimport { GameContext } from '../context/GameContext';\nimport boardImage from '../assets/board.png';\nimport { tiles } from '../data/tiles';\nimport './Board.css';\n\nimport piece1 from '../assets/pieces/piece1.png';\nimport piece2 from '../assets/pieces/piece2.png';\nimport piece3 from '../assets/pieces/piece3.png';\nimport piece4 from '../assets/pieces/piece4.png';\nimport piece5 from '../assets/pieces/piece5.png';\nimport piece6 from '../assets/pieces/piece6.png';\nimport piece7 from '../assets/pieces/piece7.png';\nimport piece8 from '../assets/pieces/piece8.png';\n\nconst pieceMap = {\n  piece1, piece2, piece3, piece4,\n  piece5, piece6, piece7, piece8\n};\n\nconst Board = () => {\n  const { players } = useContext(GameContext);\n  const [size, setSize] = useState({ width: 600, height: 600 });\n\n  // load natural board size\n  useEffect(() => {\n    const img = new Image();\n    img.onload = () => setSize({ width: img.width, height: img.height });\n    img.src = boardImage;\n  }, []);\n\n  return (\n    <div className=\"board-container\">\n      <div\n        className=\"board-image\"\n        style={{\n          width: size.width,\n          height: size.height,\n          backgroundImage: `url(${boardImage})`,\n          backgroundSize: 'cover'\n        }}\n      >\n        {players.map((p, i) => {\n          const img = pieceMap[p.piece];\n          if (!img) return null;\n          const tile = tiles.find(t => t.id === p.tileId) || {};\n          const pos = tile.position || { x: 40, y: 520 };\n          return (\n            <img\n              key={p.name}\n              src={img}\n              alt={p.name}\n              title={p.name}\n              className=\"board-piece\"\n              style={{\n                left: pos.x + i * 10,\n                top: pos.y + i * 10\n              }}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default Board;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}