{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useContext, useEffect } from 'react';\nimport { GameContext } from '../context/GameContext';\nimport { tiles } from '../data/tiles';\nconst GameController = () => {\n  _s();\n  const {\n    players,\n    setPlayers,\n    currentPlayerIndex,\n    originalCount,\n    isMoving,\n    setIsMoving\n  } = useContext(GameContext);\n  useEffect(() => {\n    if (!isMoving || originalCount <= 0) return;\n    const moveLoop = async () => {\n      let steps = originalCount;\n      const updated = [...players];\n      const me = updated[currentPlayerIndex];\n      while (steps > 0) {\n        var _current$next;\n        const current = tiles.find(t => t.id === me.tileId);\n        if (!(current !== null && current !== void 0 && (_current$next = current.next) !== null && _current$next !== void 0 && _current$next.length)) break;\n\n        // filter out backtrack\n        let opts = current.next.filter(o => o.from !== me.prevTile);\n        if (!opts.length) opts = current.next;\n        let pick;\n        if (opts.length === 1 || originalCount === 7) {\n          pick = opts[0];\n        } else {\n          const type = originalCount < 7 ? 'below' : 'above';\n          pick = opts.find(o => o.roll === type) || opts[0];\n        }\n        me.prevTile = me.tileId;\n        me.tileId = pick.to;\n        setPlayers([...updated]);\n        steps--;\n        // animation pause\n        // eslint-disable-next-line no-await-in-loop\n        await new Promise(r => setTimeout(r, 400));\n      }\n      setIsMoving(false);\n    };\n    moveLoop();\n  }, [isMoving, originalCount, players, currentPlayerIndex, setPlayers, setIsMoving]);\n  return null;\n};\n_s(GameController, \"+6tvM79hU04d3hsjhrgGcFYtjpU=\");\n_c = GameController;\nexport default GameController;\nvar _c;\n$RefreshReg$(_c, \"GameController\");","map":{"version":3,"names":["React","useContext","useEffect","GameContext","tiles","GameController","_s","players","setPlayers","currentPlayerIndex","originalCount","isMoving","setIsMoving","moveLoop","steps","updated","me","_current$next","current","find","t","id","tileId","next","length","opts","filter","o","from","prevTile","pick","type","roll","to","Promise","r","setTimeout","_c","$RefreshReg$"],"sources":["C:/Users/addhy/Desktop/Business_web/client/src/components/GameController.js"],"sourcesContent":["import React, { useContext, useEffect } from 'react';\r\nimport { GameContext } from '../context/GameContext';\r\nimport { tiles } from '../data/tiles';\r\n\r\nconst GameController = () => {\r\n  const {\r\n    players, setPlayers,\r\n    currentPlayerIndex, originalCount,\r\n    isMoving, setIsMoving\r\n  } = useContext(GameContext);\r\n\r\n  useEffect(() => {\r\n    if (!isMoving || originalCount <= 0) return;\r\n\r\n    const moveLoop = async () => {\r\n      let steps = originalCount;\r\n      const updated = [...players];\r\n      const me = updated[currentPlayerIndex];\r\n\r\n      while (steps > 0) {\r\n        const current = tiles.find(t => t.id === me.tileId);\r\n        if (!current?.next?.length) break;\r\n\r\n        // filter out backtrack\r\n        let opts = current.next.filter(o => o.from !== me.prevTile);\r\n        if (!opts.length) opts = current.next;\r\n\r\n        let pick;\r\n        if (opts.length === 1 || originalCount === 7) {\r\n          pick = opts[0];\r\n        } else {\r\n          const type = originalCount < 7 ? 'below' : 'above';\r\n          pick = opts.find(o => o.roll === type) || opts[0];\r\n        }\r\n\r\n        me.prevTile = me.tileId;\r\n        me.tileId = pick.to;\r\n        setPlayers([...updated]);\r\n        steps--;\r\n        // animation pause\r\n        // eslint-disable-next-line no-await-in-loop\r\n        await new Promise(r => setTimeout(r, 400));\r\n      }\r\n\r\n      setIsMoving(false);\r\n    };\r\n\r\n    moveLoop();\r\n  }, [isMoving, originalCount, players, currentPlayerIndex, setPlayers, setIsMoving]);\r\n\r\n  return null;\r\n};\r\n\r\nexport default GameController;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AACpD,SAASC,WAAW,QAAQ,wBAAwB;AACpD,SAASC,KAAK,QAAQ,eAAe;AAErC,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM;IACJC,OAAO;IAAEC,UAAU;IACnBC,kBAAkB;IAAEC,aAAa;IACjCC,QAAQ;IAAEC;EACZ,CAAC,GAAGX,UAAU,CAACE,WAAW,CAAC;EAE3BD,SAAS,CAAC,MAAM;IACd,IAAI,CAACS,QAAQ,IAAID,aAAa,IAAI,CAAC,EAAE;IAErC,MAAMG,QAAQ,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAIC,KAAK,GAAGJ,aAAa;MACzB,MAAMK,OAAO,GAAG,CAAC,GAAGR,OAAO,CAAC;MAC5B,MAAMS,EAAE,GAAGD,OAAO,CAACN,kBAAkB,CAAC;MAEtC,OAAOK,KAAK,GAAG,CAAC,EAAE;QAAA,IAAAG,aAAA;QAChB,MAAMC,OAAO,GAAGd,KAAK,CAACe,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKL,EAAE,CAACM,MAAM,CAAC;QACnD,IAAI,EAACJ,OAAO,aAAPA,OAAO,gBAAAD,aAAA,GAAPC,OAAO,CAAEK,IAAI,cAAAN,aAAA,eAAbA,aAAA,CAAeO,MAAM,GAAE;;QAE5B;QACA,IAAIC,IAAI,GAAGP,OAAO,CAACK,IAAI,CAACG,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,KAAKZ,EAAE,CAACa,QAAQ,CAAC;QAC3D,IAAI,CAACJ,IAAI,CAACD,MAAM,EAAEC,IAAI,GAAGP,OAAO,CAACK,IAAI;QAErC,IAAIO,IAAI;QACR,IAAIL,IAAI,CAACD,MAAM,KAAK,CAAC,IAAId,aAAa,KAAK,CAAC,EAAE;UAC5CoB,IAAI,GAAGL,IAAI,CAAC,CAAC,CAAC;QAChB,CAAC,MAAM;UACL,MAAMM,IAAI,GAAGrB,aAAa,GAAG,CAAC,GAAG,OAAO,GAAG,OAAO;UAClDoB,IAAI,GAAGL,IAAI,CAACN,IAAI,CAACQ,CAAC,IAAIA,CAAC,CAACK,IAAI,KAAKD,IAAI,CAAC,IAAIN,IAAI,CAAC,CAAC,CAAC;QACnD;QAEAT,EAAE,CAACa,QAAQ,GAAGb,EAAE,CAACM,MAAM;QACvBN,EAAE,CAACM,MAAM,GAAGQ,IAAI,CAACG,EAAE;QACnBzB,UAAU,CAAC,CAAC,GAAGO,OAAO,CAAC,CAAC;QACxBD,KAAK,EAAE;QACP;QACA;QACA,MAAM,IAAIoB,OAAO,CAACC,CAAC,IAAIC,UAAU,CAACD,CAAC,EAAE,GAAG,CAAC,CAAC;MAC5C;MAEAvB,WAAW,CAAC,KAAK,CAAC;IACpB,CAAC;IAEDC,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,CAACF,QAAQ,EAAED,aAAa,EAAEH,OAAO,EAAEE,kBAAkB,EAAED,UAAU,EAAEI,WAAW,CAAC,CAAC;EAEnF,OAAO,IAAI;AACb,CAAC;AAACN,EAAA,CA/CID,cAAc;AAAAgC,EAAA,GAAdhC,cAAc;AAiDpB,eAAeA,cAAc;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}