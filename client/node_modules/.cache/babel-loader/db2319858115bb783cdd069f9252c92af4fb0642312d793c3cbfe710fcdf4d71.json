{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\addhy\\\\Desktop\\\\Business_web - Copy (2)\\\\client\\\\src\\\\components\\\\RoadCash.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport cash500 from '../assets/cash500.png';\nimport cash1000 from '../assets/cash1000.png';\nimport cash5000 from '../assets/cash5000.png';\nimport cash10000 from '../assets/cash10000.png';\nimport cashBehind from '../assets/cashBehind.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cashImages = [{\n  amount: 500,\n  image: cash500\n}, {\n  amount: 1000,\n  image: cash1000\n}, {\n  amount: 5000,\n  image: cash5000\n}, {\n  amount: 10000,\n  image: cash10000\n}];\nconst RoadCash = ({\n  isMyTurn,\n  socket\n}) => {\n  _s();\n  const [selectedIndex, setSelectedIndex] = useState(null);\n  const [revealedAmount, setRevealedAmount] = useState(null);\n  const [showAll, setShowAll] = useState(false);\n  const [isActive, setIsActive] = useState(true);\n  const [remainingAmounts, setRemainingAmounts] = useState([]);\n  const handleCashClick = index => {\n    if (!isMyTurn || selectedIndex !== null) return;\n\n    // Generate random amount for clicked card\n    const randomAmount = cashImages[Math.floor(Math.random() * cashImages.length)].amount;\n    setRevealedAmount(randomAmount);\n    setSelectedIndex(index);\n\n    // Generate random amounts for remaining cards\n    const otherAmounts = cashImages.map(img => img.amount).sort(() => Math.random() - 0.5).slice(0, 4);\n    setRemainingAmounts(otherAmounts);\n    socket.emit('roadCashSelected', {\n      amount: randomAmount\n    });\n\n    // After 3 seconds, show all cards\n    setTimeout(() => {\n      setShowAll(true);\n      // After another 3 seconds, hide everything\n      setTimeout(() => {\n        setIsActive(false);\n      }, 3000);\n    }, 3000);\n  };\n  if (!isActive) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      transform: 'translate(-50%, -50%)',\n      display: 'grid',\n      gridTemplateColumns: 'repeat(2, 1fr)',\n      gap: '20px',\n      padding: '20px',\n      zIndex: 1000\n    },\n    children: [0, 1, 2, 3].map(index => {\n      const isSelected = index === selectedIndex;\n\n      // Determine which image to show\n      let currentImage = cashBehind;\n      if (isSelected) {\n        var _cashImages$find;\n        // Show revealed amount for selected card immediately\n        currentImage = (_cashImages$find = cashImages.find(c => c.amount === revealedAmount)) === null || _cashImages$find === void 0 ? void 0 : _cashImages$find.image;\n      } else if (showAll) {\n        var _cashImages$find2;\n        // Show random amounts for other cards after delay\n        const amount = remainingAmounts[index] || cashImages[index].amount;\n        currentImage = (_cashImages$find2 = cashImages.find(c => c.amount === amount)) === null || _cashImages$find2 === void 0 ? void 0 : _cashImages$find2.image;\n      }\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        src: currentImage,\n        alt: `Cash ${index + 1}`,\n        onClick: () => handleCashClick(index),\n        style: {\n          cursor: isMyTurn && !selectedIndex ? 'pointer' : 'default',\n          transition: 'opacity 0.3s ease',\n          opacity: showAll ? 0.8 : 1\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(RoadCash, \"x1dTrUBSVW0Y7Svkxf7jp5c2UAQ=\");\n_c = RoadCash;\nexport default RoadCash;\nvar _c;\n$RefreshReg$(_c, \"RoadCash\");","map":{"version":3,"names":["React","useState","useEffect","cash500","cash1000","cash5000","cash10000","cashBehind","jsxDEV","_jsxDEV","cashImages","amount","image","RoadCash","isMyTurn","socket","_s","selectedIndex","setSelectedIndex","revealedAmount","setRevealedAmount","showAll","setShowAll","isActive","setIsActive","remainingAmounts","setRemainingAmounts","handleCashClick","index","randomAmount","Math","floor","random","length","otherAmounts","map","img","sort","slice","emit","setTimeout","style","position","top","left","transform","display","gridTemplateColumns","gap","padding","zIndex","children","isSelected","currentImage","_cashImages$find","find","c","_cashImages$find2","src","alt","onClick","cursor","transition","opacity","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/addhy/Desktop/Business_web - Copy (2)/client/src/components/RoadCash.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport cash500 from '../assets/cash500.png';\r\nimport cash1000 from '../assets/cash1000.png';\r\nimport cash5000 from '../assets/cash5000.png';\r\nimport cash10000 from '../assets/cash10000.png';\r\nimport cashBehind from '../assets/cashBehind.png';\r\n\r\nconst cashImages = [\r\n  { amount: 500, image: cash500 },\r\n  { amount: 1000, image: cash1000 },\r\n  { amount: 5000, image: cash5000 },\r\n  { amount: 10000, image: cash10000 }\r\n];\r\n\r\nconst RoadCash = ({ isMyTurn, socket }) => {\r\n  const [selectedIndex, setSelectedIndex] = useState(null);\r\n  const [revealedAmount, setRevealedAmount] = useState(null);\r\n  const [showAll, setShowAll] = useState(false);\r\n  const [isActive, setIsActive] = useState(true);\r\n  const [remainingAmounts, setRemainingAmounts] = useState([]);\r\n\r\n  const handleCashClick = (index) => {\r\n    if (!isMyTurn || selectedIndex !== null) return;\r\n\r\n    // Generate random amount for clicked card\r\n    const randomAmount = cashImages[Math.floor(Math.random() * cashImages.length)].amount;\r\n    setRevealedAmount(randomAmount);\r\n    setSelectedIndex(index);\r\n\r\n    // Generate random amounts for remaining cards\r\n    const otherAmounts = cashImages\r\n      .map(img => img.amount)\r\n      .sort(() => Math.random() - 0.5)\r\n      .slice(0, 4);\r\n    setRemainingAmounts(otherAmounts);\r\n\r\n    socket.emit('roadCashSelected', { amount: randomAmount });\r\n\r\n    // After 3 seconds, show all cards\r\n    setTimeout(() => {\r\n      setShowAll(true);\r\n      // After another 3 seconds, hide everything\r\n      setTimeout(() => {\r\n        setIsActive(false);\r\n      }, 3000);\r\n    }, 3000);\r\n  };\r\n\r\n  if (!isActive) return null;\r\n\r\n  return (\r\n    <div style={{\r\n      position: 'absolute',\r\n      top: '50%',\r\n      left: '50%',\r\n      transform: 'translate(-50%, -50%)',\r\n      display: 'grid',\r\n      gridTemplateColumns: 'repeat(2, 1fr)',\r\n      gap: '20px',\r\n      padding: '20px',\r\n      zIndex: 1000\r\n    }}>\r\n      {[0, 1, 2, 3].map((index) => {\r\n        const isSelected = index === selectedIndex;\r\n        \r\n        // Determine which image to show\r\n        let currentImage = cashBehind;\r\n        if (isSelected) {\r\n          // Show revealed amount for selected card immediately\r\n          currentImage = cashImages.find(c => c.amount === revealedAmount)?.image;\r\n        } else if (showAll) {\r\n          // Show random amounts for other cards after delay\r\n          const amount = remainingAmounts[index] || cashImages[index].amount;\r\n          currentImage = cashImages.find(c => c.amount === amount)?.image;\r\n        }\r\n\r\n        return (\r\n          <img\r\n            key={index}\r\n            src={currentImage}\r\n            alt={`Cash ${index + 1}`}\r\n            onClick={() => handleCashClick(index)}\r\n            style={{\r\n              cursor: isMyTurn && !selectedIndex ? 'pointer' : 'default',\r\n              transition: 'opacity 0.3s ease',\r\n              opacity: showAll ? 0.8 : 1\r\n            }}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RoadCash; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}