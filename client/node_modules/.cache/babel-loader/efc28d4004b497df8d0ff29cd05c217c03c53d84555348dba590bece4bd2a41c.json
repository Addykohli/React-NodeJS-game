{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\addhy\\\\Desktop\\\\Business_web\\\\client\\\\src\\\\components\\\\Board.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState, useEffect } from 'react';\nimport { GameContext } from '../context/GameContext';\nimport boardImage from '../assets/board.png';\nimport { tiles } from '../data/tiles';\nimport piece1 from '../assets/pieces/piece1.png';\nimport piece2 from '../assets/pieces/piece2.png';\nimport piece3 from '../assets/pieces/piece3.png';\nimport piece4 from '../assets/pieces/piece4.png';\nimport piece5 from '../assets/pieces/piece5.png';\nimport piece6 from '../assets/pieces/piece6.png';\nimport piece7 from '../assets/pieces/piece7.png';\nimport piece8 from '../assets/pieces/piece8.png';\n\n// Map filenames (with extension) to imported images\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst pieceMap = {\n  'piece1.png': piece1,\n  'piece2.png': piece2,\n  'piece3.png': piece3,\n  'piece4.png': piece4,\n  'piece5.png': piece5,\n  'piece6.png': piece6,\n  'piece7.png': piece7,\n  'piece8.png': piece8\n};\nconst Board = () => {\n  _s();\n  const {\n    players\n  } = useContext(GameContext);\n  const [coords, setCoords] = useState({\n    x: null,\n    y: null\n  });\n  const [naturalSize, setNaturalSize] = useState({\n    width: 600,\n    height: 600\n  });\n  useEffect(() => {\n    const img = new Image();\n    img.onload = () => setNaturalSize({\n      width: img.width,\n      height: img.height\n    });\n    img.src = boardImage;\n  }, []);\n  const handleClick = e => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const logicalX = Math.round(e.clientX - rect.left);\n    const logicalY = Math.round(e.clientY - rect.top);\n    console.log(`Tile Coordinates: (${logicalX}, ${logicalY})`);\n    setCoords({\n      x: logicalX,\n      y: logicalY\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center',\n      marginTop: '20px'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: handleClick,\n      style: {\n        position: 'relative',\n        width: `${naturalSize.width}px`,\n        height: `${naturalSize.height}px`,\n        background: `url(${boardImage}) no-repeat center/100%`,\n        border: '3px solid #333',\n        margin: '0 auto'\n      },\n      children: [players.map((p, i) => {\n        const src = pieceMap[p.piece];\n        if (!src) return null;\n\n        // Find tile by ID, default to start\n        const tile = tiles.find(t => t.id === p.tileId) || {};\n        const pos = tile.position || {\n          x: 40,\n          y: 520\n        };\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          src: src,\n          alt: p.name,\n          title: p.name,\n          style: {\n            position: 'absolute',\n            top: pos.y + i * 10,\n            left: pos.x + i * 10,\n            width: 30,\n            height: 30,\n            transform: 'translate(-50%, -50%)',\n            transition: 'top 0.3s, left 0.3s'\n          }\n        }, p.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this);\n      }), coords.x !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          top: 10,\n          left: 10,\n          background: 'rgba(255, 255, 255, 0.9)',\n          padding: '4px 8px',\n          fontSize: '14px',\n          border: '1px solid #ccc',\n          borderRadius: '4px'\n        },\n        children: [\"Tile: (\", coords.x, \", \", coords.y, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(Board, \"0kZMzTDjiNyi7JFUKoquHS+70Ws=\");\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useContext","useState","useEffect","GameContext","boardImage","tiles","piece1","piece2","piece3","piece4","piece5","piece6","piece7","piece8","jsxDEV","_jsxDEV","pieceMap","Board","_s","players","coords","setCoords","x","y","naturalSize","setNaturalSize","width","height","img","Image","onload","src","handleClick","e","rect","currentTarget","getBoundingClientRect","logicalX","Math","round","clientX","left","logicalY","clientY","top","console","log","style","textAlign","marginTop","children","onClick","position","background","border","margin","map","p","i","piece","tile","find","t","id","tileId","pos","alt","name","title","transform","transition","fileName","_jsxFileName","lineNumber","columnNumber","padding","fontSize","borderRadius","_c","$RefreshReg$"],"sources":["C:/Users/addhy/Desktop/Business_web/client/src/components/Board.js"],"sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\nimport { GameContext } from '../context/GameContext';\nimport boardImage from '../assets/board.png';\nimport { tiles } from '../data/tiles';\n\nimport piece1 from '../assets/pieces/piece1.png';\nimport piece2 from '../assets/pieces/piece2.png';\nimport piece3 from '../assets/pieces/piece3.png';\nimport piece4 from '../assets/pieces/piece4.png';\nimport piece5 from '../assets/pieces/piece5.png';\nimport piece6 from '../assets/pieces/piece6.png';\nimport piece7 from '../assets/pieces/piece7.png';\nimport piece8 from '../assets/pieces/piece8.png';\n\n// Map filenames (with extension) to imported images\nconst pieceMap = {\n  'piece1.png': piece1,\n  'piece2.png': piece2,\n  'piece3.png': piece3,\n  'piece4.png': piece4,\n  'piece5.png': piece5,\n  'piece6.png': piece6,\n  'piece7.png': piece7,\n  'piece8.png': piece8,\n};\n\nconst Board = () => {\n  const { players } = useContext(GameContext);\n  const [coords, setCoords] = useState({ x: null, y: null });\n  const [naturalSize, setNaturalSize] = useState({ width: 600, height: 600 });\n\n  useEffect(() => {\n    const img = new Image();\n    img.onload = () => setNaturalSize({ width: img.width, height: img.height });\n    img.src = boardImage;\n  }, []);\n\n  const handleClick = (e) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const logicalX = Math.round(e.clientX - rect.left);\n    const logicalY = Math.round(e.clientY - rect.top);\n    console.log(`Tile Coordinates: (${logicalX}, ${logicalY})`);\n    setCoords({ x: logicalX, y: logicalY });\n  };\n\n  return (\n    <div style={{ textAlign: 'center', marginTop: '20px' }}>\n      <div\n        onClick={handleClick}\n        style={{\n          position: 'relative',\n          width: `${naturalSize.width}px`,\n          height: `${naturalSize.height}px`,\n          background: `url(${boardImage}) no-repeat center/100%`,\n          border: '3px solid #333',\n          margin: '0 auto',\n        }}\n      >\n        {players.map((p, i) => {\n          const src = pieceMap[p.piece];\n          if (!src) return null;\n\n          // Find tile by ID, default to start\n          const tile = tiles.find(t => t.id === p.tileId) || {};\n          const pos = tile.position || { x: 40, y: 520 };\n\n          return (\n            <img\n              key={p.name}\n              src={src}\n              alt={p.name}\n              title={p.name}\n              style={{\n                position: 'absolute',\n                top: pos.y + i * 10,\n                left: pos.x + i * 10,\n                width: 30,\n                height: 30,\n                transform: 'translate(-50%, -50%)',\n                transition: 'top 0.3s, left 0.3s',\n              }}\n            />\n          );\n        })}\n\n        {coords.x !== null && (\n          <div\n            style={{\n              position: 'absolute',\n              top: 10,\n              left: 10,\n              background: 'rgba(255, 255, 255, 0.9)',\n              padding: '4px 8px',\n              fontSize: '14px',\n              border: '1px solid #ccc',\n              borderRadius: '4px',\n            }}\n          >\n            Tile: ({coords.x}, {coords.y})\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Board;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}