{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useContext, useEffect } from 'react';\nimport { GameContext } from '../context/GameContext';\nimport { tiles } from '../data/tiles';\nconst delay = ms => new Promise(res => setTimeout(res, ms));\nconst GameController = () => {\n  _s();\n  const {\n    players,\n    setPlayers,\n    currentPlayerIndex,\n    originalCount,\n    isMoving,\n    setIsMoving\n  } = useContext(GameContext);\n  useEffect(() => {\n    const movePlayer = async () => {\n      if (!isMoving || originalCount <= 0) return;\n      const updated = [...players];\n      const p = updated[currentPlayerIndex];\n      for (let i = 0; i < originalCount; i++) {\n        var _opts$;\n        const cur = tiles.find(t => t.id === p.tileId) || {};\n        let opts = (cur.next || []).filter(o => o.from !== p.prevTile);\n        let nextId = (_opts$ = opts[0]) === null || _opts$ === void 0 ? void 0 : _opts$.to;\n        if (opts.length === 2) {\n          if (originalCount === 7) {\n            nextId = window.confirm('Go left path?') ? opts[0].to : opts[1].to;\n          } else {\n            var _opts$find;\n            const rollType = originalCount > 7 ? 'above' : 'below';\n            nextId = ((_opts$find = opts.find(o => o.roll === rollType)) === null || _opts$find === void 0 ? void 0 : _opts$find.to) || opts[0].to;\n          }\n        }\n        p.prevTile = p.tileId;\n        p.tileId = nextId || p.tileId;\n        setPlayers([...updated]);\n        await delay(500);\n      }\n      setIsMoving(false);\n    };\n    movePlayer();\n  }, [isMoving, originalCount, players, currentPlayerIndex, setIsMoving, setPlayers]);\n  return null;\n};\n_s(GameController, \"shEKEYjt/+EYWglnYp0Dd33frI4=\");\n_c = GameController;\nexport default GameController;\nvar _c;\n$RefreshReg$(_c, \"GameController\");","map":{"version":3,"names":["useContext","useEffect","GameContext","tiles","delay","ms","Promise","res","setTimeout","GameController","_s","players","setPlayers","currentPlayerIndex","originalCount","isMoving","setIsMoving","movePlayer","updated","p","i","_opts$","cur","find","t","id","tileId","opts","next","filter","o","from","prevTile","nextId","to","length","window","confirm","_opts$find","rollType","roll","_c","$RefreshReg$"],"sources":["C:/Users/addhy/Desktop/Business_web/client/src/components/GameController.js"],"sourcesContent":["import { useContext, useEffect } from 'react';\r\nimport { GameContext } from '../context/GameContext';\r\nimport { tiles } from '../data/tiles';\r\n\r\nconst delay = ms => new Promise(res => setTimeout(res, ms));\r\n\r\nconst GameController = () => {\r\n  const {\r\n    players, setPlayers,\r\n    currentPlayerIndex,\r\n    originalCount,\r\n    isMoving, setIsMoving\r\n  } = useContext(GameContext);\r\n\r\n  useEffect(() => {\r\n    const movePlayer = async () => {\r\n      if (!isMoving || originalCount <= 0) return;\r\n      const updated = [...players];\r\n      const p = updated[currentPlayerIndex];\r\n\r\n      for (let i = 0; i < originalCount; i++) {\r\n        const cur = tiles.find(t => t.id === p.tileId) || {};\r\n        let opts = (cur.next || []).filter(o => o.from !== p.prevTile);\r\n        let nextId = opts[0]?.to;\r\n        if (opts.length === 2) {\r\n          if (originalCount === 7) {\r\n            nextId = window.confirm('Go left path?') ? opts[0].to : opts[1].to;\r\n          } else {\r\n            const rollType = originalCount > 7 ? 'above' : 'below';\r\n            nextId = opts.find(o => o.roll === rollType)?.to || opts[0].to;\r\n          }\r\n        }\r\n        p.prevTile = p.tileId;\r\n        p.tileId = nextId || p.tileId;\r\n        setPlayers([...updated]);\r\n        await delay(500);\r\n      }\r\n\r\n      setIsMoving(false);\r\n    };\r\n\r\n    movePlayer();\r\n  }, [isMoving, originalCount, players, currentPlayerIndex, setIsMoving, setPlayers]);\r\n\r\n  return null;\r\n};\r\n\r\nexport default GameController;\r\n"],"mappings":";AAAA,SAASA,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC7C,SAASC,WAAW,QAAQ,wBAAwB;AACpD,SAASC,KAAK,QAAQ,eAAe;AAErC,MAAMC,KAAK,GAAGC,EAAE,IAAI,IAAIC,OAAO,CAACC,GAAG,IAAIC,UAAU,CAACD,GAAG,EAAEF,EAAE,CAAC,CAAC;AAE3D,MAAMI,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM;IACJC,OAAO;IAAEC,UAAU;IACnBC,kBAAkB;IAClBC,aAAa;IACbC,QAAQ;IAAEC;EACZ,CAAC,GAAGhB,UAAU,CAACE,WAAW,CAAC;EAE3BD,SAAS,CAAC,MAAM;IACd,MAAMgB,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI,CAACF,QAAQ,IAAID,aAAa,IAAI,CAAC,EAAE;MACrC,MAAMI,OAAO,GAAG,CAAC,GAAGP,OAAO,CAAC;MAC5B,MAAMQ,CAAC,GAAGD,OAAO,CAACL,kBAAkB,CAAC;MAErC,KAAK,IAAIO,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,aAAa,EAAEM,CAAC,EAAE,EAAE;QAAA,IAAAC,MAAA;QACtC,MAAMC,GAAG,GAAGnB,KAAK,CAACoB,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKN,CAAC,CAACO,MAAM,CAAC,IAAI,CAAC,CAAC;QACpD,IAAIC,IAAI,GAAG,CAACL,GAAG,CAACM,IAAI,IAAI,EAAE,EAAEC,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,KAAKZ,CAAC,CAACa,QAAQ,CAAC;QAC9D,IAAIC,MAAM,IAAAZ,MAAA,GAAGM,IAAI,CAAC,CAAC,CAAC,cAAAN,MAAA,uBAAPA,MAAA,CAASa,EAAE;QACxB,IAAIP,IAAI,CAACQ,MAAM,KAAK,CAAC,EAAE;UACrB,IAAIrB,aAAa,KAAK,CAAC,EAAE;YACvBmB,MAAM,GAAGG,MAAM,CAACC,OAAO,CAAC,eAAe,CAAC,GAAGV,IAAI,CAAC,CAAC,CAAC,CAACO,EAAE,GAAGP,IAAI,CAAC,CAAC,CAAC,CAACO,EAAE;UACpE,CAAC,MAAM;YAAA,IAAAI,UAAA;YACL,MAAMC,QAAQ,GAAGzB,aAAa,GAAG,CAAC,GAAG,OAAO,GAAG,OAAO;YACtDmB,MAAM,GAAG,EAAAK,UAAA,GAAAX,IAAI,CAACJ,IAAI,CAACO,CAAC,IAAIA,CAAC,CAACU,IAAI,KAAKD,QAAQ,CAAC,cAAAD,UAAA,uBAAnCA,UAAA,CAAqCJ,EAAE,KAAIP,IAAI,CAAC,CAAC,CAAC,CAACO,EAAE;UAChE;QACF;QACAf,CAAC,CAACa,QAAQ,GAAGb,CAAC,CAACO,MAAM;QACrBP,CAAC,CAACO,MAAM,GAAGO,MAAM,IAAId,CAAC,CAACO,MAAM;QAC7Bd,UAAU,CAAC,CAAC,GAAGM,OAAO,CAAC,CAAC;QACxB,MAAMd,KAAK,CAAC,GAAG,CAAC;MAClB;MAEAY,WAAW,CAAC,KAAK,CAAC;IACpB,CAAC;IAEDC,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACF,QAAQ,EAAED,aAAa,EAAEH,OAAO,EAAEE,kBAAkB,EAAEG,WAAW,EAAEJ,UAAU,CAAC,CAAC;EAEnF,OAAO,IAAI;AACb,CAAC;AAACF,EAAA,CAvCID,cAAc;AAAAgC,EAAA,GAAdhC,cAAc;AAyCpB,eAAeA,cAAc;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}