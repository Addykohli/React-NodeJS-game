{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\addhy\\\\Desktop\\\\Business_web - Copy (2)\\\\client\\\\src\\\\components\\\\TopPropertyDisplay.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport { tiles } from '../data/tiles';\nimport { GameContext } from '../context/GameContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TopPropertyDisplay = () => {\n  _s();\n  const [expandedStates, setExpandedStates] = useState({});\n  const {\n    players,\n    player: currentPlayer,\n    socket\n  } = useContext(GameContext);\n\n  // Get all players except the current player\n  const otherPlayers = players.filter(p => p.socketId !== (currentPlayer === null || currentPlayer === void 0 ? void 0 : currentPlayer.socketId));\n\n  // Get positions based on number of players (matching PlayerStats logic)\n  const getPositions = numPlayers => {\n    switch (numPlayers) {\n      case 3:\n        return [{\n          left: '50%'\n        }];\n      case 4:\n        return [{\n          left: '30%'\n        }, {\n          left: '70%'\n        }];\n      case 5:\n        return [{\n          left: '50%'\n        }];\n      case 6:\n        return [{\n          left: '30%'\n        }, {\n          left: '70%'\n        }];\n      case 7:\n        return [{\n          left: '15%'\n        }, {\n          left: '50%'\n        }, {\n          left: '85%'\n        }];\n      default:\n        return [];\n    }\n  };\n\n  // Get only the players that should appear at the top\n  const getTopPlayers = (players, totalPlayers) => {\n    switch (totalPlayers) {\n      case 3:\n        return players.slice(2, 3);\n      case 4:\n        return players.slice(2, 4);\n      case 5:\n        return players.slice(4, 5);\n      case 6:\n        return players.slice(4, 6);\n      case 7:\n        return players.slice(4, 7);\n      default:\n        return [];\n    }\n  };\n  const handlePropertyClick = (playerId, propertyIndex) => {\n    setExpandedStates(prev => ({\n      ...prev,\n      [playerId]: prev[playerId] === propertyIndex ? null : propertyIndex\n    }));\n  };\n\n  // Calculate rent multiplier based on owned properties\n  const getRentMultiplier = (player, property) => {\n    if (!(player !== null && player !== void 0 && player.properties)) return 1;\n    const ownedProperties = tiles.filter(tile => player.properties.includes(tile.id));\n    const divisionProperties = ownedProperties.filter(tile => tile.division === property.division);\n    const count = divisionProperties.length;\n    if (property.division === 'tech') {\n      if (count >= 6) return 5;\n      if (count >= 5) return 4;\n      const hasGoogle = player.properties.includes(37);\n      const hasApple = player.properties.includes(36);\n      const hasAmazon = player.properties.includes(41);\n      if (hasGoogle && hasApple && hasAmazon) return 3;\n      if (count >= 3) return 2;\n      return 1;\n    } else {\n      if (count >= 6) return 5;\n      if (count >= 5) return 3;\n      if (count >= 3) return 2;\n      return 1;\n    }\n  };\n  const handleSell = (e, player, property) => {\n    e.stopPropagation(); // Prevent card expansion when clicking sell button\n    if (window.confirm(`Are you sure you want to sell ${property.name} for $${property.cost}?`)) {\n      socket.emit('updateProperty', {\n        playerId: player.socketId,\n        propertyId: property.id,\n        action: 'remove',\n        refundAmount: property.cost\n      });\n    }\n  };\n  const topPlayers = getTopPlayers(otherPlayers, otherPlayers.length);\n  const positions = getPositions(otherPlayers.length);\n\n  // Reduced dimensions (70% of original)\n  const cardWidth = 147; // 70% of 210\n  const cardHeight = 196; // 70% of 280\n  const cardOverlap = 39; // 70% of 56\n  const expandOffset = 108; // 70% of 154\n  const stackWidth = cardWidth + cardOverlap * 4;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'absolute',\n      top: '-190px',\n      left: '50%',\n      transform: 'translateX(-50%)',\n      height: cardHeight + 'px',\n      display: 'flex',\n      alignItems: 'flex-start',\n      overflow: 'visible',\n      width: '1000px',\n      justifyContent: 'space-around',\n      zIndex: 1\n    },\n    children: topPlayers.map((player, playerIndex) => {\n      // Get player's properties\n      const ownedProperties = tiles.filter(tile => tile.type === 'property').filter(tile => {\n        var _player$properties;\n        return player === null || player === void 0 ? void 0 : (_player$properties = player.properties) === null || _player$properties === void 0 ? void 0 : _player$properties.includes(tile.id);\n      });\n      const position = positions[playerIndex];\n      const playerExpandedIndex = expandedStates[player.socketId];\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          left: position.left,\n          transform: 'translateX(-50%)',\n          width: stackWidth + 'px',\n          height: '100%',\n          display: 'flex',\n          alignItems: 'flex-start'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'absolute',\n            top: '100%',\n            left: '50%',\n            transform: 'translateX(-50%)',\n            backgroundColor: 'rgba(0, 0, 0, 0.7)',\n            color: '#fff',\n            padding: '4px 8px',\n            borderRadius: '4px',\n            whiteSpace: 'nowrap',\n            fontSize: '0.9rem',\n            fontWeight: 'bold',\n            zIndex: 4,\n            marginTop: '4px'\n          },\n          children: player.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this), ownedProperties.map((property, index) => {\n          const isLastProperty = index === ownedProperties.length - 1;\n          const isExpanded = isLastProperty || playerExpandedIndex === index;\n          const multiplier = getRentMultiplier(player, property);\n\n          // Calculate base position (never changes)\n          const basePosition = index * cardOverlap;\n\n          // Calculate additional offset based on expanded state\n          let expandedOffset = 0;\n          if (playerExpandedIndex !== null && playerExpandedIndex !== undefined) {\n            // If there's an expanded card\n            if (index > playerExpandedIndex) {\n              expandedOffset = expandOffset;\n            }\n          }\n\n          // Calculate final position\n          const finalPosition = basePosition + expandedOffset;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => !isLastProperty && handlePropertyClick(player.socketId, index),\n            style: {\n              width: cardWidth + 'px',\n              height: cardHeight + 'px',\n              border: '2px solid #666',\n              borderRadius: '8px',\n              position: 'absolute',\n              left: finalPosition,\n              transition: 'all 0.3s ease',\n              zIndex: isExpanded ? ownedProperties.length : index,\n              display: 'flex',\n              flexDirection: 'column',\n              padding: '10px',\n              boxSizing: 'border-box',\n              backgroundColor: 'rgb(173, 216, 230)',\n              cursor: isLastProperty ? 'default' : 'pointer'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                transform: 'rotate(-90deg)',\n                transformOrigin: 'left center',\n                position: 'absolute',\n                width: cardHeight + 'px',\n                height: cardWidth + 'px',\n                top: cardHeight / 2 + 'px',\n                left: cardWidth / 2 + 'px',\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'flex-start',\n                justifyContent: 'space-between',\n                color: '#333',\n                fontSize: '1.2rem',\n                fontWeight: 'bold',\n                padding: '10px',\n                height: '100%'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: '1.4rem',\n                  textAlign: 'left',\n                  whiteSpace: 'nowrap',\n                  overflow: 'hidden',\n                  textOverflow: 'ellipsis',\n                  maxWidth: '176px',\n                  width: '100%'\n                },\n                children: property.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: '1rem',\n                  opacity: isExpanded ? 1 : 0,\n                  transition: 'opacity 0.3s ease',\n                  textAlign: 'left',\n                  display: 'flex',\n                  flexDirection: 'column',\n                  gap: '4px',\n                  width: '100%'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"Cost: $\", property.cost]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    display: 'flex',\n                    alignItems: 'center',\n                    gap: '8px'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\"Rent: $\", property.rent]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 231,\n                    columnNumber: 25\n                  }, this), multiplier > 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      color: '#FFA500',\n                      fontSize: '1.3em',\n                      fontWeight: 'bold'\n                    },\n                    children: [\"X\", multiplier]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 233,\n                    columnNumber: 27\n                  }, this), player.socketId === (currentPlayer === null || currentPlayer === void 0 ? void 0 : currentPlayer.socketId) && /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: e => handleSell(e, player, property),\n                    style: {\n                      backgroundColor: '#ff4444',\n                      color: 'white',\n                      border: 'none',\n                      borderRadius: '4px',\n                      padding: '4px 8px',\n                      cursor: 'pointer',\n                      fontSize: '0.9rem',\n                      fontWeight: 'bold',\n                      marginLeft: '8px'\n                    },\n                    children: \"Sell\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 242,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 19\n            }, this)\n          }, property.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 17\n          }, this);\n        })]\n      }, player.socketId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s(TopPropertyDisplay, \"SL8LPmK++QICofSaiAy4YiDSLVg=\");\n_c = TopPropertyDisplay;\nexport default TopPropertyDisplay;\nvar _c;\n$RefreshReg$(_c, \"TopPropertyDisplay\");","map":{"version":3,"names":["React","useState","useContext","tiles","GameContext","jsxDEV","_jsxDEV","TopPropertyDisplay","_s","expandedStates","setExpandedStates","players","player","currentPlayer","socket","otherPlayers","filter","p","socketId","getPositions","numPlayers","left","getTopPlayers","totalPlayers","slice","handlePropertyClick","playerId","propertyIndex","prev","getRentMultiplier","property","properties","ownedProperties","tile","includes","id","divisionProperties","division","count","length","hasGoogle","hasApple","hasAmazon","handleSell","e","stopPropagation","window","confirm","name","cost","emit","propertyId","action","refundAmount","topPlayers","positions","cardWidth","cardHeight","cardOverlap","expandOffset","stackWidth","style","position","top","transform","height","display","alignItems","overflow","width","justifyContent","zIndex","children","map","playerIndex","type","_player$properties","playerExpandedIndex","backgroundColor","color","padding","borderRadius","whiteSpace","fontSize","fontWeight","marginTop","fileName","_jsxFileName","lineNumber","columnNumber","index","isLastProperty","isExpanded","multiplier","basePosition","expandedOffset","undefined","finalPosition","onClick","border","transition","flexDirection","boxSizing","cursor","transformOrigin","textAlign","textOverflow","maxWidth","opacity","gap","rent","marginLeft","_c","$RefreshReg$"],"sources":["C:/Users/addhy/Desktop/Business_web - Copy (2)/client/src/components/TopPropertyDisplay.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\nimport { tiles } from '../data/tiles';\nimport { GameContext } from '../context/GameContext';\n\nconst TopPropertyDisplay = () => {\n  const [expandedStates, setExpandedStates] = useState({});\n  const { players, player: currentPlayer, socket } = useContext(GameContext);\n\n  // Get all players except the current player\n  const otherPlayers = players.filter(p => p.socketId !== currentPlayer?.socketId);\n  \n  // Get positions based on number of players (matching PlayerStats logic)\n  const getPositions = (numPlayers) => {\n    switch(numPlayers) {\n      case 3: return [{ left: '50%' }];\n      case 4: return [{ left: '30%' }, { left: '70%' }];\n      case 5: return [{ left: '50%' }];\n      case 6: return [{ left: '30%' }, { left: '70%' }];\n      case 7: return [{ left: '15%' }, { left: '50%' }, { left: '85%' }];\n      default: return [];\n    }\n  };\n\n  // Get only the players that should appear at the top\n  const getTopPlayers = (players, totalPlayers) => {\n    switch(totalPlayers) {\n      case 3: return players.slice(2, 3);\n      case 4: return players.slice(2, 4);\n      case 5: return players.slice(4, 5);\n      case 6: return players.slice(4, 6);\n      case 7: return players.slice(4, 7);\n      default: return [];\n    }\n  };\n\n  const handlePropertyClick = (playerId, propertyIndex) => {\n    setExpandedStates(prev => ({\n      ...prev,\n      [playerId]: prev[playerId] === propertyIndex ? null : propertyIndex\n    }));\n  };\n\n  // Calculate rent multiplier based on owned properties\n  const getRentMultiplier = (player, property) => {\n    if (!player?.properties) return 1;\n    \n    const ownedProperties = tiles.filter(tile => player.properties.includes(tile.id));\n    const divisionProperties = ownedProperties.filter(tile => tile.division === property.division);\n    const count = divisionProperties.length;\n\n    if (property.division === 'tech') {\n      if (count >= 6) return 5;\n      if (count >= 5) return 4;\n      \n      const hasGoogle = player.properties.includes(37);\n      const hasApple = player.properties.includes(36);\n      const hasAmazon = player.properties.includes(41);\n      \n      if (hasGoogle && hasApple && hasAmazon) return 3;\n      if (count >= 3) return 2;\n      return 1;\n    } else {\n      if (count >= 6) return 5;\n      if (count >= 5) return 3;\n      if (count >= 3) return 2;\n      return 1;\n    }\n  };\n\n  const handleSell = (e, player, property) => {\n    e.stopPropagation(); // Prevent card expansion when clicking sell button\n    if (window.confirm(`Are you sure you want to sell ${property.name} for $${property.cost}?`)) {\n      socket.emit('updateProperty', {\n        playerId: player.socketId,\n        propertyId: property.id,\n        action: 'remove',\n        refundAmount: property.cost\n      });\n    }\n  };\n\n  const topPlayers = getTopPlayers(otherPlayers, otherPlayers.length);\n  const positions = getPositions(otherPlayers.length);\n\n  // Reduced dimensions (70% of original)\n  const cardWidth = 147; // 70% of 210\n  const cardHeight = 196; // 70% of 280\n  const cardOverlap = 39; // 70% of 56\n  const expandOffset = 108; // 70% of 154\n  const stackWidth = cardWidth + (cardOverlap * 4);\n\n  return (\n    <div style={{\n      position: 'absolute',\n      top: '-190px',\n      left: '50%',\n      transform: 'translateX(-50%)',\n      height: cardHeight + 'px',\n      display: 'flex',\n      alignItems: 'flex-start',\n      overflow: 'visible',\n      width: '1000px',\n      justifyContent: 'space-around',\n      zIndex: 1\n    }}>\n      {topPlayers.map((player, playerIndex) => {\n        // Get player's properties\n        const ownedProperties = tiles\n          .filter(tile => tile.type === 'property')\n          .filter(tile => player?.properties?.includes(tile.id));\n\n        const position = positions[playerIndex];\n        const playerExpandedIndex = expandedStates[player.socketId];\n\n        return (\n          <div key={player.socketId} style={{\n            position: 'absolute',\n            left: position.left,\n            transform: 'translateX(-50%)',\n            width: stackWidth + 'px',\n            height: '100%',\n            display: 'flex',\n            alignItems: 'flex-start'\n          }}>\n            {/* Player name label */}\n            <div style={{\n              position: 'absolute',\n              top: '100%',\n              left: '50%',\n              transform: 'translateX(-50%)',\n              backgroundColor: 'rgba(0, 0, 0, 0.7)',\n              color: '#fff',\n              padding: '4px 8px',\n              borderRadius: '4px',\n              whiteSpace: 'nowrap',\n              fontSize: '0.9rem',\n              fontWeight: 'bold',\n              zIndex: 4,\n              marginTop: '4px'\n            }}>\n              {player.name}\n            </div>\n\n            {ownedProperties.map((property, index) => {\n              const isLastProperty = index === ownedProperties.length - 1;\n              const isExpanded = isLastProperty || playerExpandedIndex === index;\n              const multiplier = getRentMultiplier(player, property);\n              \n              // Calculate base position (never changes)\n              const basePosition = index * cardOverlap;\n              \n              // Calculate additional offset based on expanded state\n              let expandedOffset = 0;\n              \n              if (playerExpandedIndex !== null && playerExpandedIndex !== undefined) {\n                // If there's an expanded card\n                if (index > playerExpandedIndex) {\n                  expandedOffset = expandOffset;\n                }\n              }\n\n              // Calculate final position\n              const finalPosition = basePosition + expandedOffset;\n              \n              return (\n                <div\n                  key={property.id}\n                  onClick={() => !isLastProperty && handlePropertyClick(player.socketId, index)}\n                  style={{\n                    width: cardWidth + 'px',\n                    height: cardHeight + 'px',\n                    border: '2px solid #666',\n                    borderRadius: '8px',\n                    position: 'absolute',\n                    left: finalPosition,\n                    transition: 'all 0.3s ease',\n                    zIndex: isExpanded ? ownedProperties.length : index,\n                    display: 'flex',\n                    flexDirection: 'column',\n                    padding: '10px',\n                    boxSizing: 'border-box',\n                    backgroundColor: 'rgb(173, 216, 230)',\n                    cursor: isLastProperty ? 'default' : 'pointer'\n                  }}\n                >\n                  <div style={{\n                    transform: 'rotate(-90deg)',\n                    transformOrigin: 'left center',\n                    position: 'absolute',\n                    width: cardHeight + 'px',\n                    height: cardWidth + 'px',\n                    top: cardHeight / 2 + 'px',\n                    left: cardWidth / 2 + 'px',\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'flex-start',\n                    justifyContent: 'space-between',\n                    color: '#333',\n                    fontSize: '1.2rem',\n                    fontWeight: 'bold',\n                    padding: '10px',\n                    height: '100%'\n                  }}>\n                    <div style={{\n                      fontSize: '1.4rem',\n                      textAlign: 'left',\n                      whiteSpace: 'nowrap',\n                      overflow: 'hidden',\n                      textOverflow: 'ellipsis',\n                      maxWidth: '176px',\n                      width: '100%'\n                    }}>\n                      {property.name}\n                    </div>\n                    <div style={{\n                      fontSize: '1rem',\n                      opacity: isExpanded ? 1 : 0,\n                      transition: 'opacity 0.3s ease',\n                      textAlign: 'left',\n                      display: 'flex',\n                      flexDirection: 'column',\n                      gap: '4px',\n                      width: '100%'\n                    }}>\n                      <div>Cost: ${property.cost}</div>\n                      <div style={{\n                        display: 'flex',\n                        alignItems: 'center',\n                        gap: '8px'\n                      }}>\n                        <span>Rent: ${property.rent}</span>\n                        {multiplier > 1 && (\n                          <span style={{ \n                            color: '#FFA500', \n                            fontSize: '1.3em', \n                            fontWeight: 'bold'\n                          }}>\n                            X{multiplier}\n                          </span>\n                        )}\n                        {player.socketId === currentPlayer?.socketId && (\n                          <button\n                            onClick={(e) => handleSell(e, player, property)}\n                            style={{\n                              backgroundColor: '#ff4444',\n                              color: 'white',\n                              border: 'none',\n                              borderRadius: '4px',\n                              padding: '4px 8px',\n                              cursor: 'pointer',\n                              fontSize: '0.9rem',\n                              fontWeight: 'bold',\n                              marginLeft: '8px'\n                            }}\n                          >\n                            Sell\n                          </button>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default TopPropertyDisplay; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}