{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\addhy\\\\Desktop\\\\Business_web - Copy (2)\\\\client\\\\src\\\\components\\\\GameScreen.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useContext, useState, useEffect } from 'react';\nimport bgImage from '../assets/bg.png';\nimport Dicebox from '../assets/diceBoard.png';\nimport startIcon from '../assets/start.png';\nimport hotelIcon from '../assets/hotel.png';\nimport casinoIcon from '../assets/casino.png';\nimport roadIcon from '../assets/road.png';\nimport Board from './Board';\nimport DiceRoller from './DiceRoller';\nimport Dashboard from './Dashboard';\nimport PlayerStats from './PlayerStats';\nimport RoadCash from './RoadCash';\nimport { GameContext } from '../context/GameContext';\nimport { tiles } from '../data/tiles';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CasinoBetting = ({\n  isMyTurn,\n  currentMoney,\n  socket,\n  player,\n  onCasinoPlayed\n}) => {\n  _s();\n  const [betAmount, setBetAmount] = useState(1000);\n  const [selectedBet, setSelectedBet] = useState(null);\n  const [showResult, setShowResult] = useState(null);\n  const [diceResult, setDiceResult] = useState(null);\n  const [isActive, setIsActive] = useState(true);\n  const handleAmountChange = delta => {\n    const newAmount = Math.max(1000, Math.min(currentMoney, betAmount + delta));\n    setBetAmount(newAmount);\n  };\n  const handleBetSelect = bet => {\n    setSelectedBet(bet);\n  };\n  const handleRoll = () => {\n    if (selectedBet && betAmount >= 1000 && betAmount <= currentMoney) {\n      socket.emit('casinoRoll', {\n        betAmount,\n        betType: selectedBet\n      });\n    }\n  };\n  useEffect(() => {\n    const handleCasinoResult = ({\n      playerId,\n      dice,\n      amount,\n      won,\n      playerMoney\n    }) => {\n      if (playerId === player.socketId) {\n        setDiceResult(dice);\n        setShowResult({\n          won,\n          amount\n        });\n        setIsActive(false);\n        onCasinoPlayed();\n      }\n    };\n    socket.on('casinoResult', handleCasinoResult);\n    return () => socket.off('casinoResult', handleCasinoResult);\n  }, [socket, player.socketId, onCasinoPlayed]);\n\n  // If not active (after result), show nothing\n  if (!isActive) {\n    if (showResult && diceResult) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n          height: '100%',\n          gap: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            gap: '10px',\n            justifyContent: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `/dice/dice${diceResult[0]}.png`,\n            alt: `Die ${diceResult[0]}`,\n            width: 125,\n            height: 125\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `/dice/dice${diceResult[1]}.png`,\n            alt: `Die ${diceResult[1]}`,\n            width: 125,\n            height: 125\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: showResult.won ? '#4CAF50' : '#f44336',\n            fontWeight: 'bold',\n            fontSize: '1.2em'\n          },\n          children: showResult.won ? `You won $${showResult.amount}!` : `You lost $${showResult.amount}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this);\n    }\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: '100%',\n      gap: '15px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        gap: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAmountChange(-1000),\n        disabled: !isMyTurn || betAmount <= 1000,\n        style: {\n          padding: '8px 12px',\n          fontSize: '1.2em',\n          cursor: isMyTurn ? 'pointer' : 'not-allowed'\n        },\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '8px 16px',\n          border: '1px solid #ccc',\n          borderRadius: '4px',\n          minWidth: '100px',\n          textAlign: 'center'\n        },\n        children: [\"$\", betAmount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAmountChange(1000),\n        disabled: !isMyTurn || betAmount >= currentMoney,\n        style: {\n          padding: '8px 12px',\n          fontSize: '1.2em',\n          cursor: isMyTurn ? 'pointer' : 'not-allowed'\n        },\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        gap: '10px'\n      },\n      children: ['above', '7', 'below'].map(bet => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleBetSelect(bet),\n        disabled: !isMyTurn,\n        style: {\n          padding: '8px 16px',\n          backgroundColor: selectedBet === bet ? '#4CAF50' : '#fff',\n          color: selectedBet === bet ? '#fff' : '#000',\n          border: '1px solid #666',\n          borderRadius: '4px',\n          cursor: isMyTurn ? 'pointer' : 'not-allowed',\n          textTransform: 'capitalize'\n        },\n        children: bet\n      }, bet, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRoll,\n      disabled: !isMyTurn || !selectedBet || betAmount < 1000 || betAmount > currentMoney,\n      style: {\n        padding: '8px 24px',\n        backgroundColor: '#2196F3',\n        color: '#fff',\n        border: 'none',\n        borderRadius: '4px',\n        marginTop: '10px',\n        cursor: isMyTurn && selectedBet ? 'pointer' : 'not-allowed',\n        opacity: isMyTurn && selectedBet ? 1 : 0.7\n      },\n      children: \"Roll\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_s(CasinoBetting, \"1erwuWbl18mQT2wIK6glrgWb/ks=\");\n_c = CasinoBetting;\nexport default function GameScreen() {\n  _s2();\n  const {\n    player,\n    players,\n    setPlayer,\n    setPlayers,\n    currentPlayerId,\n    socket,\n    movementDone\n  } = useContext(GameContext);\n  const isMyTurn = (player === null || player === void 0 ? void 0 : player.socketId) === currentPlayerId;\n  const [error, setError] = useState(null);\n  const [testRollInput, setTestRollInput] = useState('');\n  const [testRollMode, setTestRollMode] = useState(false);\n  const [inCasino, setInCasino] = useState(false);\n  const [hasCasinoPlayed, setHasCasinoPlayed] = useState(false);\n  const [zoomLevel, setZoomLevel] = useState(1);\n  const [hasChosenCorner, setHasChosenCorner] = useState(false);\n\n  // Determine metadata for the current tile\n  const tileMeta = tiles.find(t => t.id === (player === null || player === void 0 ? void 0 : player.tileId));\n\n  // Reset hasChosenCorner when turn ends or tile changes\n  useEffect(() => {\n    var _tileMeta$name;\n    if (!isMyTurn || !(tileMeta !== null && tileMeta !== void 0 && (_tileMeta$name = tileMeta.name) !== null && _tileMeta$name !== void 0 && _tileMeta$name.toLowerCase().includes('choose corner'))) {\n      setHasChosenCorner(false);\n    }\n  }, [isMyTurn, tileMeta]);\n\n  // Add keyboard listener for test rolls\n  useEffect(() => {\n    const handleKeyPress = e => {\n      if (!isMyTurn) return;\n\n      // Build up the test roll input\n      if (e.key === 'Enter' && testRollInput.startsWith('testroll')) {\n        const rollNumber = parseInt(testRollInput.slice(8));\n        if (!isNaN(rollNumber) && rollNumber >= 2 && rollNumber <= 12) {\n          socket.emit('rollDice', {\n            testRoll: rollNumber\n          });\n          setTestRollInput('');\n          setTestRollMode(false);\n        }\n      } else if (e.key === 'Backspace') {\n        setTestRollInput(prev => prev.slice(0, -1));\n      } else if (e.key.length === 1) {\n        // Regular character\n        setTestRollInput(prev => prev + e.key);\n      }\n    };\n    window.addEventListener('keydown', handleKeyPress);\n    return () => window.removeEventListener('keydown', handleKeyPress);\n  }, [isMyTurn, testRollInput, socket]);\n\n  // Show current test roll input if active\n  useEffect(() => {\n    if (testRollInput.startsWith('testroll')) {\n      setTestRollMode(true);\n    } else if (testRollInput.length === 0) {\n      setTestRollMode(false);\n    }\n  }, [testRollInput]);\n\n  // Debug logging to trace condition\n  useEffect(() => {\n    console.log('[GameScreen] Debug:', {\n      isMyTurn,\n      movementDone,\n      tileMeta,\n      \"player.tileId\": player === null || player === void 0 ? void 0 : player.tileId,\n      \"tileMeta.type\": tileMeta === null || tileMeta === void 0 ? void 0 : tileMeta.type,\n      \"tileMeta.cost\": tileMeta === null || tileMeta === void 0 ? void 0 : tileMeta.cost,\n      \"player.money\": player === null || player === void 0 ? void 0 : player.money,\n      testRollMode,\n      testRollInput\n    });\n  }, [isMyTurn, movementDone, tileMeta, player, testRollMode, testRollInput]);\n\n  // Listen for purchase events\n  useEffect(() => {\n    socket.on('purchaseSuccess', ({\n      socketId,\n      money,\n      properties\n    }) => {\n      console.log('[GameScreen] purchaseSuccess', {\n        socketId,\n        money,\n        properties\n      });\n      const updated = players.map(p => p.socketId === socketId ? {\n        ...p,\n        money,\n        properties\n      } : p);\n      setPlayers(updated);\n      if (player.socketId === socketId) {\n        setPlayer({\n          ...player,\n          money,\n          properties\n        });\n      }\n      setError(null);\n    });\n\n    // Add start bonus handler\n    socket.on('startBonus', ({\n      playerSocketId,\n      newMoney,\n      amount,\n      reason\n    }) => {\n      console.log('[GameScreen] startBonus', {\n        playerSocketId,\n        newMoney,\n        amount,\n        reason\n      });\n\n      // Update players' money\n      const updated = players.map(p => p.socketId === playerSocketId ? {\n        ...p,\n        money: newMoney\n      } : p);\n      setPlayers(updated);\n\n      // Update current player's money if they got the bonus\n      if (player.socketId === playerSocketId) {\n        setPlayer({\n          ...player,\n          money: newMoney\n        });\n        setError(`You received $${amount} for ${reason} Start!`);\n        // Clear bonus message after 5 seconds\n        setTimeout(() => setError(null), 5000);\n      }\n    });\n\n    // Add playerMoved event handler\n    socket.on('playerMoved', ({\n      playerId,\n      tileId\n    }) => {\n      console.log('[GameScreen] playerMoved', {\n        playerId,\n        tileId\n      });\n      if (playerId === (player === null || player === void 0 ? void 0 : player.socketId)) {\n        setPlayer(prev => ({\n          ...prev,\n          tileId\n        }));\n      }\n      setPlayers(prev => prev.map(p => p.socketId === playerId ? {\n        ...p,\n        tileId\n      } : p));\n      // Clear any previous messages when a player moves\n      setError(null);\n    });\n    socket.on('purchaseFailed', ({\n      reason\n    }) => {\n      console.log('[GameScreen] purchaseFailed', reason);\n      if (reason === 'insufficientFunds') {\n        setError(\"You don't have enough money.\");\n      } else if (reason === 'alreadyOwned') {\n        setError('You already own this property.');\n      } else {\n        setError('Cannot buy this property.');\n      }\n      // Clear error message after 5 seconds\n      setTimeout(() => setError(null), 5000);\n    });\n\n    // Add rent payment handler\n    socket.on('rentPaid', ({\n      payerSocketId,\n      payerMoney,\n      ownerSocketId,\n      ownerMoney,\n      amount,\n      propertyName\n    }) => {\n      console.log('[GameScreen] rentPaid', {\n        payerSocketId,\n        ownerSocketId,\n        amount\n      });\n\n      // Update players' money\n      const updated = players.map(p => {\n        if (p.socketId === payerSocketId) return {\n          ...p,\n          money: payerMoney\n        };\n        if (p.socketId === ownerSocketId) return {\n          ...p,\n          money: ownerMoney\n        };\n        return p;\n      });\n      setPlayers(updated);\n\n      // Update current player's money if they were involved\n      if (player.socketId === payerSocketId) {\n        var _players$find;\n        setPlayer({\n          ...player,\n          money: payerMoney\n        });\n        setError(`You paid $${amount} rent to ${(_players$find = players.find(p => p.socketId === ownerSocketId)) === null || _players$find === void 0 ? void 0 : _players$find.name} for landing on ${propertyName}`);\n      } else if (player.socketId === ownerSocketId) {\n        var _players$find2;\n        setPlayer({\n          ...player,\n          money: ownerMoney\n        });\n        setError(`You received $${amount} rent from ${(_players$find2 = players.find(p => p.socketId === payerSocketId)) === null || _players$find2 === void 0 ? void 0 : _players$find2.name} for ${propertyName}`);\n      }\n      // Clear rent message after 5 seconds\n      setTimeout(() => setError(null), 5000);\n    });\n\n    // Add rent bonus handler\n    socket.on('rentBonus', ({\n      playerSocketId,\n      newMoney,\n      amount,\n      propertyName\n    }) => {\n      console.log('[GameScreen] rentBonus', {\n        playerSocketId,\n        amount\n      });\n\n      // Update player's money\n      const updated = players.map(p => p.socketId === playerSocketId ? {\n        ...p,\n        money: newMoney\n      } : p);\n      setPlayers(updated);\n\n      // Update current player if they got the bonus\n      if (player.socketId === playerSocketId) {\n        setPlayer({\n          ...player,\n          money: newMoney\n        });\n        setError(`You received $${amount} bonus for landing on your property ${propertyName}!`);\n        // Clear bonus message after 5 seconds\n        setTimeout(() => setError(null), 5000);\n      }\n    });\n\n    // Add casino result handler for other players\n    socket.on('casinoResult', ({\n      playerId,\n      dice,\n      amount,\n      won,\n      playerName,\n      playerMoney\n    }) => {\n      console.log('[GameScreen] casinoResult', {\n        playerId,\n        dice,\n        amount,\n        won,\n        playerName,\n        playerMoney\n      });\n\n      // Update player money in the game state\n      const updated = players.map(p => p.socketId === playerId ? {\n        ...p,\n        money: playerMoney\n      } : p);\n      setPlayers(updated);\n      if (player.socketId === playerId) {\n        setPlayer(prev => ({\n          ...prev,\n          money: playerMoney\n        }));\n      } else {\n        setError(`${playerName} ${won ? 'won' : 'lost'} $${amount} at the casino!`);\n        setTimeout(() => setError(null), 5000);\n      }\n    });\n\n    // Add roadCash handler\n    socket.on('roadCashResult', ({\n      playerSocketId,\n      newMoney,\n      amount\n    }) => {\n      console.log('[GameScreen] roadCashResult', {\n        playerSocketId,\n        newMoney,\n        amount\n      });\n\n      // Update player's money\n      const updated = players.map(p => p.socketId === playerSocketId ? {\n        ...p,\n        money: newMoney\n      } : p);\n      setPlayers(updated);\n\n      // Update current player if they got the money\n      if (player.socketId === playerSocketId) {\n        setPlayer({\n          ...player,\n          money: newMoney\n        });\n        setError(`You received $${amount} from the road!`);\n        // Clear message after 5 seconds\n        setTimeout(() => setError(null), 5000);\n      }\n    });\n    return () => {\n      socket.off('purchaseSuccess');\n      socket.off('purchaseFailed');\n      socket.off('rentPaid');\n      socket.off('playerMoved');\n      socket.off('rentBonus');\n      socket.off('startBonus');\n      socket.off('casinoResult');\n      socket.off('roadCashResult');\n    };\n  }, [socket, player, players, setPlayer, setPlayers]);\n\n  // Update inCasino state when tile changes\n  useEffect(() => {\n    const isCasinoTile = (tileMeta === null || tileMeta === void 0 ? void 0 : tileMeta.id) === 16;\n    setInCasino(isCasinoTile);\n    if (isCasinoTile) {\n      setHasCasinoPlayed(false);\n    }\n  }, [tileMeta]);\n\n  // Reset casino states when turn ends\n  useEffect(() => {\n    if (!isMyTurn) {\n      setInCasino(false);\n      setHasCasinoPlayed(false);\n    }\n  }, [isMyTurn]);\n  const handleBuy = () => {\n    console.log('[GameScreen] handleBuy invoked');\n    setError(null);\n    socket.emit('buyProperty');\n  };\n  const handleZoom = direction => {\n    if (direction === 'in' && zoomLevel < 2) {\n      setZoomLevel(prev => Math.min(2, prev + 0.1));\n    } else if (direction === 'out' && zoomLevel > 0.5) {\n      setZoomLevel(prev => Math.max(0.5, prev - 0.1));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'relative'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        top: '20px',\n        right: '20px',\n        display: 'flex',\n        gap: '10px',\n        zIndex: 1000,\n        background: 'rgba(0, 0, 0, 0.7)',\n        padding: '10px',\n        borderRadius: '8px',\n        boxShadow: '0 2px 4px rgba(0,0,0,0.2)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleZoom('in'),\n        disabled: zoomLevel >= 2,\n        style: {\n          padding: '8px 12px',\n          fontSize: '1.2em',\n          backgroundColor: zoomLevel >= 2 ? '#666' : '#4CAF50',\n          color: 'white',\n          border: 'none',\n          borderRadius: '4px',\n          cursor: zoomLevel >= 2 ? 'not-allowed' : 'pointer',\n          width: '40px',\n          height: '40px',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleZoom('out'),\n        disabled: zoomLevel <= 0.5,\n        style: {\n          padding: '8px 12px',\n          fontSize: '1.2em',\n          backgroundColor: zoomLevel <= 0.5 ? '#666' : '#4CAF50',\n          color: 'white',\n          border: 'none',\n          borderRadius: '4px',\n          cursor: zoomLevel <= 0.5 ? 'not-allowed' : 'pointer',\n          width: '40px',\n          height: '40px',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '8px 12px',\n          backgroundColor: 'rgba(255, 255, 255, 0.9)',\n          borderRadius: '4px',\n          minWidth: '60px',\n          textAlign: 'center',\n          fontSize: '1.1em'\n        },\n        children: [Math.round(zoomLevel * 100), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        minHeight: '100vh',\n        minWidth: '1200px',\n        position: 'relative',\n        backgroundImage: `url(${bgImage})`,\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n        backgroundRepeat: 'no-repeat',\n        overflow: 'auto',\n        transform: `scale(${zoomLevel})`,\n        transformOrigin: 'center top',\n        transition: 'transform 0.2s ease-out'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1,\n          display: 'flex',\n          flexDirection: 'row',\n          alignItems: 'center',\n          justifyContent: 'center',\n          position: 'relative',\n          minWidth: '1080px',\n          padding: '20px',\n          marginTop: '220px',\n          marginBottom: '20px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'relative',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            width: '100%',\n            height: '100%',\n            minHeight: '600px' // Ensure minimum height for the board container\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'relative',\n              margin: '200px' // Add margin around the board to make space for player stats\n            },\n            children: [/*#__PURE__*/_jsxDEV(Board, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 561,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(PlayerStats, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 562,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 557,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 535,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '60%',\n          minWidth: '800px',\n          height: '240px',\n          minHeight: '400px',\n          background: 'rgba(80, 80, 80, 0.9)',\n          borderTop: '2px solid #bbb',\n          boxShadow: '0 -2px 10px rgba(0, 0, 0, 0.2)',\n          zIndex: 100,\n          display: 'flex',\n          border: '2px solid #666',\n          borderRadius: '30px 30px 0 0',\n          margin: '80px auto 0 auto'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: 1,\n            position: 'relative',\n            borderRight: '2px solid #666',\n            padding: '10px',\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            justifyContent: 'center',\n            background: 'rgba(60, 60, 60, 0.3)',\n            borderRadius: '30px 30px 30px 30px',\n            overflow: 'hidden'\n          },\n          children: [isMyTurn && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: Dicebox,\n              alt: \"Dice Board\",\n              style: {\n                position: 'absolute',\n                top: 0,\n                left: 0,\n                width: '100%',\n                height: '100%',\n                objectFit: 'fill',\n                objectPosition: 'center',\n                pointerEvents: 'none'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 598,\n              columnNumber: 13\n            }, this), testRollMode && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                position: 'absolute',\n                top: '50%',\n                left: '50%',\n                transform: 'translate(-50%, -50%)',\n                backgroundColor: 'rgba(0, 0, 0, 0.8)',\n                color: '#fff',\n                padding: '8px 16px',\n                borderRadius: '4px',\n                zIndex: 100\n              },\n              children: testRollInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 613,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(DiceRoller, {\n            testRollMode: testRollMode,\n            hasCasinoPlayed: hasCasinoPlayed,\n            style: {\n              position: 'relative',\n              zIndex: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 629,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 583,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: 1,\n            borderRight: '2px solid #666',\n            padding: '10px',\n            display: 'flex',\n            flexDirection: 'column',\n            background: 'rgba(60, 60, 60, 0.3)'\n          },\n          children: /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 645,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 637,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: 1,\n            padding: '10px',\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            justifyContent: 'center',\n            background: 'rgba(60, 60, 60, 0.3)',\n            borderRadius: '0 10px 0 0'\n          },\n          children: (_tileMeta$name2 => {\n            // Show \"Your Turn\" for current player before landing\n            if (isMyTurn && !movementDone) {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  height: '100%',\n                  color: '#fff',\n                  fontSize: '1.6em',\n                  fontWeight: 'bold',\n                  textShadow: '2px 2px 4px rgba(0,0,0,0.5)'\n                },\n                children: \"Your Turn\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 663,\n                columnNumber: 19\n              }, this);\n            }\n\n            // Buy Property\n            if (isMyTurn && (tileMeta === null || tileMeta === void 0 ? void 0 : tileMeta.type) === 'property' && !players.some(p => p.properties.includes(tileMeta === null || tileMeta === void 0 ? void 0 : tileMeta.id))) {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  flexDirection: 'column',\n                  alignItems: 'center',\n                  gap: '10px'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: handleBuy,\n                  disabled: player.money < tileMeta.cost,\n                  style: {\n                    padding: '12px 24px',\n                    fontSize: '1.1em',\n                    backgroundColor: player.money >= tileMeta.cost ? '#4CAF50' : '#ccc',\n                    color: player.money >= tileMeta.cost ? 'white' : '#ff0000',\n                    border: 'none',\n                    borderRadius: '8px',\n                    cursor: player.money >= tileMeta.cost ? 'pointer' : 'not-allowed',\n                    fontWeight: 'bold'\n                  },\n                  children: [\"Buy ($\", tileMeta.cost, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 688,\n                  columnNumber: 17\n                }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    color: 'tomato',\n                    margin: 0\n                  },\n                  children: error\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 705,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 682,\n                columnNumber: 19\n              }, this);\n            }\n\n            // Road Cash Game\n            if (isMyTurn && (tileMeta === null || tileMeta === void 0 ? void 0 : tileMeta.id) === 22) {\n              return /*#__PURE__*/_jsxDEV(RoadCash, {\n                isMyTurn: isMyTurn,\n                socket: socket\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 713,\n                columnNumber: 24\n              }, this);\n            }\n\n            // Casino\n            if (inCasino && isMyTurn) {\n              return /*#__PURE__*/_jsxDEV(CasinoBetting, {\n                isMyTurn: isMyTurn,\n                currentMoney: (player === null || player === void 0 ? void 0 : player.money) || 0,\n                socket: socket,\n                player: player,\n                onCasinoPlayed: () => setHasCasinoPlayed(true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 719,\n                columnNumber: 19\n              }, this);\n            }\n\n            // Corner Choice\n            if (isMyTurn && tileMeta !== null && tileMeta !== void 0 && (_tileMeta$name2 = tileMeta.name) !== null && _tileMeta$name2 !== void 0 && _tileMeta$name2.toLowerCase().includes('choose corner')) {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'grid',\n                  gridTemplateColumns: '1fr 1fr',\n                  gridTemplateRows: '1fr 1fr',\n                  gap: '20px',\n                  width: '100%',\n                  maxWidth: '600px',\n                  padding: '20px',\n                  margin: '0 auto'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => {\n                    socket.emit('teleport', {\n                      toTile: 1,\n                      prevTile: 30\n                    });\n                    setError(null);\n                    setHasChosenCorner(true);\n                  },\n                  style: {\n                    margin: 0,\n                    padding: 0,\n                    border: '3px solid #666',\n                    borderRadius: '12px',\n                    backgroundImage: `url(${startIcon})`,\n                    backgroundSize: '80%',\n                    backgroundRepeat: 'no-repeat',\n                    backgroundPosition: 'center 40%',\n                    cursor: 'pointer',\n                    display: 'flex',\n                    alignItems: 'flex-end',\n                    justifyContent: 'center',\n                    width: '100%',\n                    height: '100%',\n                    minHeight: '180px',\n                    position: 'relative',\n                    backgroundColor: 'rgba(255, 255, 255, 0.15)',\n                    transition: 'transform 0.2s, background-color 0.2s',\n                    ':hover': {\n                      transform: 'scale(1.02)',\n                      backgroundColor: 'rgba(255, 255, 255, 0.2)'\n                    }\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      padding: '8px 16px',\n                      backgroundColor: 'rgba(0,0,0,0.6)',\n                      borderRadius: '0 0 9px 9px',\n                      color: '#fff',\n                      fontWeight: 'bold',\n                      fontSize: '1.4em',\n                      textShadow: '2px 2px 4px rgba(0,0,0,0.7)',\n                      position: 'absolute',\n                      bottom: 0,\n                      width: '100%',\n                      textAlign: 'center'\n                    },\n                    children: \"Start\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 773,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 742,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => {\n                    socket.emit('teleport', {\n                      toTile: 22,\n                      prevTile: 21\n                    });\n                    setError(null);\n                    setHasChosenCorner(true);\n                  },\n                  style: {\n                    margin: 0,\n                    padding: 0,\n                    border: '3px solid #666',\n                    borderRadius: '12px',\n                    backgroundImage: `url(${roadIcon})`,\n                    backgroundSize: '80%',\n                    backgroundRepeat: 'no-repeat',\n                    backgroundPosition: 'center 40%',\n                    cursor: 'pointer',\n                    display: 'flex',\n                    alignItems: 'flex-end',\n                    justifyContent: 'center',\n                    width: '100%',\n                    height: '100%',\n                    minHeight: '180px',\n                    position: 'relative',\n                    backgroundColor: 'rgba(255, 255, 255, 0.15)',\n                    transition: 'transform 0.2s, background-color 0.2s',\n                    ':hover': {\n                      transform: 'scale(1.02)',\n                      backgroundColor: 'rgba(255, 255, 255, 0.2)'\n                    }\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      padding: '8px 16px',\n                      backgroundColor: 'rgba(0,0,0,0.6)',\n                      borderRadius: '0 0 9px 9px',\n                      color: '#fff',\n                      fontWeight: 'bold',\n                      fontSize: '1.4em',\n                      textShadow: '2px 2px 4px rgba(0,0,0,0.7)',\n                      position: 'absolute',\n                      bottom: 0,\n                      width: '100%',\n                      textAlign: 'center'\n                    },\n                    children: \"Road\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 818,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 787,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => {\n                    socket.emit('teleport', {\n                      toTile: 7,\n                      prevTile: 6\n                    });\n                    setError(null);\n                    setHasChosenCorner(true);\n                  },\n                  style: {\n                    margin: 0,\n                    padding: 0,\n                    border: '3px solid #666',\n                    borderRadius: '12px',\n                    backgroundImage: `url(${hotelIcon})`,\n                    backgroundSize: '80%',\n                    backgroundRepeat: 'no-repeat',\n                    backgroundPosition: 'center 40%',\n                    cursor: 'pointer',\n                    display: 'flex',\n                    alignItems: 'flex-end',\n                    justifyContent: 'center',\n                    width: '100%',\n                    height: '100%',\n                    minHeight: '180px',\n                    position: 'relative',\n                    backgroundColor: 'rgba(255, 255, 255, 0.15)',\n                    transition: 'transform 0.2s, background-color 0.2s',\n                    ':hover': {\n                      transform: 'scale(1.02)',\n                      backgroundColor: 'rgba(255, 255, 255, 0.2)'\n                    }\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      padding: '8px 16px',\n                      backgroundColor: 'rgba(0,0,0,0.6)',\n                      borderRadius: '0 0 9px 9px',\n                      color: '#fff',\n                      fontWeight: 'bold',\n                      fontSize: '1.4em',\n                      textShadow: '2px 2px 4px rgba(0,0,0,0.7)',\n                      position: 'absolute',\n                      bottom: 0,\n                      width: '100%',\n                      textAlign: 'center'\n                    },\n                    children: \"Hotel\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 863,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 832,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => {\n                    socket.emit('teleport', {\n                      toTile: 16,\n                      prevTile: 15\n                    });\n                    setError(null);\n                    setHasChosenCorner(true);\n                  },\n                  style: {\n                    margin: 0,\n                    padding: 0,\n                    border: '3px solid #666',\n                    borderRadius: '12px',\n                    backgroundImage: `url(${casinoIcon})`,\n                    backgroundSize: '80%',\n                    backgroundRepeat: 'no-repeat',\n                    backgroundPosition: 'center 40%',\n                    cursor: 'pointer',\n                    display: 'flex',\n                    alignItems: 'flex-end',\n                    justifyContent: 'center',\n                    width: '100%',\n                    height: '100%',\n                    minHeight: '180px',\n                    position: 'relative',\n                    backgroundColor: 'rgba(255, 255, 255, 0.15)',\n                    transition: 'transform 0.2s, background-color 0.2s',\n                    ':hover': {\n                      transform: 'scale(1.02)',\n                      backgroundColor: 'rgba(255, 255, 255, 0.2)'\n                    }\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      padding: '8px 16px',\n                      backgroundColor: 'rgba(0,0,0,0.6)',\n                      borderRadius: '0 0 9px 9px',\n                      color: '#fff',\n                      fontWeight: 'bold',\n                      fontSize: '1.4em',\n                      textShadow: '2px 2px 4px rgba(0,0,0,0.7)',\n                      position: 'absolute',\n                      bottom: 0,\n                      width: '100%',\n                      textAlign: 'center'\n                    },\n                    children: \"Casino\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 908,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 877,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 732,\n                columnNumber: 19\n              }, this);\n            }\n\n            // Show error message if any\n            if (error) {\n              return /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  color: 'tomato',\n                  margin: 0\n                },\n                children: error\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 929,\n                columnNumber: 19\n              }, this);\n            }\n\n            // Show empty state for non-turn players or when no action is needed\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                height: '100%',\n                color: 'rgba(255, 255, 255, 0.7)',\n                fontSize: '1.2em'\n              },\n              children: \"\\xA0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 935,\n              columnNumber: 17\n            }, this);\n          })()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 649,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 568,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 450,\n    columnNumber: 5\n  }, this);\n}\n_s2(GameScreen, \"isPMdtPoZ+y2078xOCAAofCbAgc=\");\n_c2 = GameScreen;\nvar _c, _c2;\n$RefreshReg$(_c, \"CasinoBetting\");\n$RefreshReg$(_c2, \"GameScreen\");","map":{"version":3,"names":["React","useContext","useState","useEffect","bgImage","Dicebox","startIcon","hotelIcon","casinoIcon","roadIcon","Board","DiceRoller","Dashboard","PlayerStats","RoadCash","GameContext","tiles","jsxDEV","_jsxDEV","Fragment","_Fragment","CasinoBetting","isMyTurn","currentMoney","socket","player","onCasinoPlayed","_s","betAmount","setBetAmount","selectedBet","setSelectedBet","showResult","setShowResult","diceResult","setDiceResult","isActive","setIsActive","handleAmountChange","delta","newAmount","Math","max","min","handleBetSelect","bet","handleRoll","emit","betType","handleCasinoResult","playerId","dice","amount","won","playerMoney","socketId","on","off","style","display","flexDirection","alignItems","justifyContent","height","gap","children","src","alt","width","fileName","_jsxFileName","lineNumber","columnNumber","color","fontWeight","fontSize","onClick","disabled","padding","cursor","border","borderRadius","minWidth","textAlign","map","backgroundColor","textTransform","marginTop","opacity","_c","GameScreen","_s2","players","setPlayer","setPlayers","currentPlayerId","movementDone","error","setError","testRollInput","setTestRollInput","testRollMode","setTestRollMode","inCasino","setInCasino","hasCasinoPlayed","setHasCasinoPlayed","zoomLevel","setZoomLevel","hasChosenCorner","setHasChosenCorner","tileMeta","find","t","id","tileId","_tileMeta$name","name","toLowerCase","includes","handleKeyPress","e","key","startsWith","rollNumber","parseInt","slice","isNaN","testRoll","prev","length","window","addEventListener","removeEventListener","console","log","type","cost","money","properties","updated","p","playerSocketId","newMoney","reason","setTimeout","payerSocketId","payerMoney","ownerSocketId","ownerMoney","propertyName","_players$find","_players$find2","playerName","isCasinoTile","handleBuy","handleZoom","direction","position","top","right","zIndex","background","boxShadow","round","minHeight","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","overflow","transform","transformOrigin","transition","flex","marginBottom","margin","borderTop","borderRight","left","objectFit","objectPosition","pointerEvents","_tileMeta$name2","textShadow","some","gridTemplateColumns","gridTemplateRows","maxWidth","toTile","prevTile","bottom","_c2","$RefreshReg$"],"sources":["C:/Users/addhy/Desktop/Business_web - Copy (2)/client/src/components/GameScreen.js"],"sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\nimport bgImage from '../assets/bg.png';\nimport Dicebox from '../assets/diceBoard.png';\nimport startIcon from '../assets/start.png';\nimport hotelIcon from '../assets/hotel.png';\nimport casinoIcon from '../assets/casino.png';\nimport roadIcon from '../assets/road.png';\nimport Board from './Board';\nimport DiceRoller from './DiceRoller';\nimport Dashboard from './Dashboard';\nimport PlayerStats from './PlayerStats';\nimport RoadCash from './RoadCash';\nimport { GameContext } from '../context/GameContext';\nimport { tiles } from '../data/tiles';\n\nconst CasinoBetting = ({ isMyTurn, currentMoney, socket, player, onCasinoPlayed }) => {\n  const [betAmount, setBetAmount] = useState(1000);\n  const [selectedBet, setSelectedBet] = useState(null);\n  const [showResult, setShowResult] = useState(null);\n  const [diceResult, setDiceResult] = useState(null);\n  const [isActive, setIsActive] = useState(true);\n\n  const handleAmountChange = (delta) => {\n    const newAmount = Math.max(1000, Math.min(currentMoney, betAmount + delta));\n    setBetAmount(newAmount);\n  };\n\n  const handleBetSelect = (bet) => {\n    setSelectedBet(bet);\n  };\n\n  const handleRoll = () => {\n    if (selectedBet && betAmount >= 1000 && betAmount <= currentMoney) {\n      socket.emit('casinoRoll', { betAmount, betType: selectedBet });\n    }\n  };\n\n  useEffect(() => {\n    const handleCasinoResult = ({ playerId, dice, amount, won, playerMoney }) => {\n      if (playerId === player.socketId) {\n        setDiceResult(dice);\n        setShowResult({ won, amount });\n        setIsActive(false);\n        onCasinoPlayed();\n      }\n    };\n\n    socket.on('casinoResult', handleCasinoResult);\n    return () => socket.off('casinoResult', handleCasinoResult);\n  }, [socket, player.socketId, onCasinoPlayed]);\n\n  // If not active (after result), show nothing\n  if (!isActive) {\n    if (showResult && diceResult) {\n      return (\n        <div style={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n          height: '100%',\n          gap: '20px'\n        }}>\n          <div style={{\n            display: 'flex',\n            gap: '10px',\n            justifyContent: 'center'\n          }}>\n            <img \n              src={`/dice/dice${diceResult[0]}.png`} \n              alt={`Die ${diceResult[0]}`} \n              width={125}\n              height={125}\n            />\n            <img \n              src={`/dice/dice${diceResult[1]}.png`} \n              alt={`Die ${diceResult[1]}`} \n              width={125}\n              height={125}\n            />\n          </div>\n          <div style={{\n            color: showResult.won ? '#4CAF50' : '#f44336',\n            fontWeight: 'bold',\n            fontSize: '1.2em'\n          }}>\n            {showResult.won ? `You won $${showResult.amount}!` : `You lost $${showResult.amount}`}\n          </div>\n        </div>\n      );\n    }\n    return null;\n  }\n\n  return (\n    <div style={{\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: '100%',\n      gap: '15px'\n    }}>\n      {/* Bet amount control */}\n      <div style={{\n        display: 'flex',\n        alignItems: 'center',\n        gap: '10px'\n      }}>\n        <button\n          onClick={() => handleAmountChange(-1000)}\n          disabled={!isMyTurn || betAmount <= 1000}\n          style={{\n            padding: '8px 12px',\n            fontSize: '1.2em',\n            cursor: isMyTurn ? 'pointer' : 'not-allowed'\n          }}\n        >\n          -\n        </button>\n        <div style={{\n          padding: '8px 16px',\n          border: '1px solid #ccc',\n          borderRadius: '4px',\n          minWidth: '100px',\n          textAlign: 'center'\n        }}>\n          ${betAmount}\n        </div>\n        <button\n          onClick={() => handleAmountChange(1000)}\n          disabled={!isMyTurn || betAmount >= currentMoney}\n          style={{\n            padding: '8px 12px',\n            fontSize: '1.2em',\n            cursor: isMyTurn ? 'pointer' : 'not-allowed'\n          }}\n        >\n          +\n        </button>\n      </div>\n\n      {/* Bet type buttons */}\n      <div style={{\n        display: 'flex',\n        gap: '10px'\n      }}>\n        {['above', '7', 'below'].map(bet => (\n          <button\n            key={bet}\n            onClick={() => handleBetSelect(bet)}\n            disabled={!isMyTurn}\n            style={{\n              padding: '8px 16px',\n              backgroundColor: selectedBet === bet ? '#4CAF50' : '#fff',\n              color: selectedBet === bet ? '#fff' : '#000',\n              border: '1px solid #666',\n              borderRadius: '4px',\n              cursor: isMyTurn ? 'pointer' : 'not-allowed',\n              textTransform: 'capitalize'\n            }}\n          >\n            {bet}\n          </button>\n        ))}\n      </div>\n\n      {/* Roll button */}\n      <button\n        onClick={handleRoll}\n        disabled={!isMyTurn || !selectedBet || betAmount < 1000 || betAmount > currentMoney}\n        style={{\n          padding: '8px 24px',\n          backgroundColor: '#2196F3',\n          color: '#fff',\n          border: 'none',\n          borderRadius: '4px',\n          marginTop: '10px',\n          cursor: isMyTurn && selectedBet ? 'pointer' : 'not-allowed',\n          opacity: isMyTurn && selectedBet ? 1 : 0.7\n        }}\n      >\n        Roll\n      </button>\n    </div>\n  );\n};\n\nexport default function GameScreen() {\n  const {\n    player,\n    players,\n    setPlayer,\n    setPlayers,\n    currentPlayerId,\n    socket,\n    movementDone\n  } = useContext(GameContext);\n\n  const isMyTurn = player?.socketId === currentPlayerId;\n  const [error, setError] = useState(null);\n  const [testRollInput, setTestRollInput] = useState('');\n  const [testRollMode, setTestRollMode] = useState(false);\n  const [inCasino, setInCasino] = useState(false);\n  const [hasCasinoPlayed, setHasCasinoPlayed] = useState(false);\n  const [zoomLevel, setZoomLevel] = useState(1);\n  const [hasChosenCorner, setHasChosenCorner] = useState(false);\n\n  // Determine metadata for the current tile\n  const tileMeta = tiles.find(t => t.id === player?.tileId);\n\n  // Reset hasChosenCorner when turn ends or tile changes\n  useEffect(() => {\n    if (!isMyTurn || !tileMeta?.name?.toLowerCase().includes('choose corner')) {\n      setHasChosenCorner(false);\n    }\n  }, [isMyTurn, tileMeta]);\n\n  // Add keyboard listener for test rolls\n  useEffect(() => {\n    const handleKeyPress = (e) => {\n      if (!isMyTurn) return;\n\n      // Build up the test roll input\n      if (e.key === 'Enter' && testRollInput.startsWith('testroll')) {\n        const rollNumber = parseInt(testRollInput.slice(8));\n        if (!isNaN(rollNumber) && rollNumber >= 2 && rollNumber <= 12) {\n          socket.emit('rollDice', { testRoll: rollNumber });\n          setTestRollInput('');\n          setTestRollMode(false);\n        }\n      } else if (e.key === 'Backspace') {\n        setTestRollInput(prev => prev.slice(0, -1));\n      } else if (e.key.length === 1) { // Regular character\n        setTestRollInput(prev => prev + e.key);\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyPress);\n    return () => window.removeEventListener('keydown', handleKeyPress);\n  }, [isMyTurn, testRollInput, socket]);\n\n  // Show current test roll input if active\n  useEffect(() => {\n    if (testRollInput.startsWith('testroll')) {\n      setTestRollMode(true);\n    } else if (testRollInput.length === 0) {\n      setTestRollMode(false);\n    }\n  }, [testRollInput]);\n\n  // Debug logging to trace condition\n  useEffect(() => {\n    console.log('[GameScreen] Debug:', {\n      isMyTurn,\n      movementDone,\n      tileMeta,\n      \"player.tileId\": player?.tileId,\n      \"tileMeta.type\": tileMeta?.type,\n      \"tileMeta.cost\": tileMeta?.cost,\n      \"player.money\": player?.money,\n      testRollMode,\n      testRollInput\n    });\n  }, [isMyTurn, movementDone, tileMeta, player, testRollMode, testRollInput]);\n\n  // Listen for purchase events\n  useEffect(() => {\n    socket.on('purchaseSuccess', ({ socketId, money, properties }) => {\n      console.log('[GameScreen] purchaseSuccess', { socketId, money, properties });\n      const updated = players.map(p =>\n        p.socketId === socketId ? { ...p, money, properties } : p\n      );\n      setPlayers(updated);\n      if (player.socketId === socketId) {\n        setPlayer({ ...player, money, properties });\n      }\n      setError(null);\n    });\n\n    // Add start bonus handler\n    socket.on('startBonus', ({ playerSocketId, newMoney, amount, reason }) => {\n      console.log('[GameScreen] startBonus', { playerSocketId, newMoney, amount, reason });\n      \n      // Update players' money\n      const updated = players.map(p =>\n        p.socketId === playerSocketId ? { ...p, money: newMoney } : p\n      );\n      setPlayers(updated);\n\n      // Update current player's money if they got the bonus\n      if (player.socketId === playerSocketId) {\n        setPlayer({ ...player, money: newMoney });\n        setError(`You received $${amount} for ${reason} Start!`);\n        // Clear bonus message after 5 seconds\n        setTimeout(() => setError(null), 5000);\n      }\n    });\n\n    // Add playerMoved event handler\n    socket.on('playerMoved', ({ playerId, tileId }) => {\n      console.log('[GameScreen] playerMoved', { playerId, tileId });\n      if (playerId === player?.socketId) {\n        setPlayer(prev => ({ ...prev, tileId }));\n      }\n      setPlayers(prev => \n        prev.map(p => p.socketId === playerId ? { ...p, tileId } : p)\n      );\n      // Clear any previous messages when a player moves\n      setError(null);\n    });\n\n    socket.on('purchaseFailed', ({ reason }) => {\n      console.log('[GameScreen] purchaseFailed', reason);\n      if (reason === 'insufficientFunds') {\n        setError(\"You don't have enough money.\");\n      } else if (reason === 'alreadyOwned') {\n        setError('You already own this property.');\n      } else {\n        setError('Cannot buy this property.');\n      }\n      // Clear error message after 5 seconds\n      setTimeout(() => setError(null), 5000);\n    });\n\n    // Add rent payment handler\n    socket.on('rentPaid', ({ payerSocketId, payerMoney, ownerSocketId, ownerMoney, amount, propertyName }) => {\n      console.log('[GameScreen] rentPaid', { payerSocketId, ownerSocketId, amount });\n      \n      // Update players' money\n      const updated = players.map(p => {\n        if (p.socketId === payerSocketId) return { ...p, money: payerMoney };\n        if (p.socketId === ownerSocketId) return { ...p, money: ownerMoney };\n        return p;\n      });\n      setPlayers(updated);\n\n      // Update current player's money if they were involved\n      if (player.socketId === payerSocketId) {\n        setPlayer({ ...player, money: payerMoney });\n        setError(`You paid $${amount} rent to ${players.find(p => p.socketId === ownerSocketId)?.name} for landing on ${propertyName}`);\n      } else if (player.socketId === ownerSocketId) {\n        setPlayer({ ...player, money: ownerMoney });\n        setError(`You received $${amount} rent from ${players.find(p => p.socketId === payerSocketId)?.name} for ${propertyName}`);\n      }\n      // Clear rent message after 5 seconds\n      setTimeout(() => setError(null), 5000);\n    });\n\n    // Add rent bonus handler\n    socket.on('rentBonus', ({ playerSocketId, newMoney, amount, propertyName }) => {\n      console.log('[GameScreen] rentBonus', { playerSocketId, amount });\n      \n      // Update player's money\n      const updated = players.map(p =>\n        p.socketId === playerSocketId ? { ...p, money: newMoney } : p\n      );\n      setPlayers(updated);\n\n      // Update current player if they got the bonus\n      if (player.socketId === playerSocketId) {\n        setPlayer({ ...player, money: newMoney });\n        setError(`You received $${amount} bonus for landing on your property ${propertyName}!`);\n        // Clear bonus message after 5 seconds\n        setTimeout(() => setError(null), 5000);\n      }\n    });\n\n    // Add casino result handler for other players\n    socket.on('casinoResult', ({ playerId, dice, amount, won, playerName, playerMoney }) => {\n      console.log('[GameScreen] casinoResult', { playerId, dice, amount, won, playerName, playerMoney });\n      \n      // Update player money in the game state\n      const updated = players.map(p =>\n        p.socketId === playerId ? { ...p, money: playerMoney } : p\n      );\n      setPlayers(updated);\n      \n      if (player.socketId === playerId) {\n        setPlayer(prev => ({ ...prev, money: playerMoney }));\n      } else {\n        setError(`${playerName} ${won ? 'won' : 'lost'} $${amount} at the casino!`);\n        setTimeout(() => setError(null), 5000);\n      }\n    });\n\n    // Add roadCash handler\n    socket.on('roadCashResult', ({ playerSocketId, newMoney, amount }) => {\n      console.log('[GameScreen] roadCashResult', { playerSocketId, newMoney, amount });\n      \n      // Update player's money\n      const updated = players.map(p =>\n        p.socketId === playerSocketId ? { ...p, money: newMoney } : p\n      );\n      setPlayers(updated);\n\n      // Update current player if they got the money\n      if (player.socketId === playerSocketId) {\n        setPlayer({ ...player, money: newMoney });\n        setError(`You received $${amount} from the road!`);\n        // Clear message after 5 seconds\n        setTimeout(() => setError(null), 5000);\n      }\n    });\n\n    return () => {\n      socket.off('purchaseSuccess');\n      socket.off('purchaseFailed');\n      socket.off('rentPaid');\n      socket.off('playerMoved');\n      socket.off('rentBonus');\n      socket.off('startBonus');\n      socket.off('casinoResult');\n      socket.off('roadCashResult');\n    };\n  }, [socket, player, players, setPlayer, setPlayers]);\n\n  // Update inCasino state when tile changes\n  useEffect(() => {\n    const isCasinoTile = tileMeta?.id === 16;\n    setInCasino(isCasinoTile);\n    if (isCasinoTile) {\n      setHasCasinoPlayed(false);\n    }\n  }, [tileMeta]);\n\n  // Reset casino states when turn ends\n  useEffect(() => {\n    if (!isMyTurn) {\n      setInCasino(false);\n      setHasCasinoPlayed(false);\n    }\n  }, [isMyTurn]);\n\n  const handleBuy = () => {\n    console.log('[GameScreen] handleBuy invoked');\n    setError(null);\n    socket.emit('buyProperty');\n  };\n\n  const handleZoom = (direction) => {\n    if (direction === 'in' && zoomLevel < 2) {\n      setZoomLevel(prev => Math.min(2, prev + 0.1));\n    } else if (direction === 'out' && zoomLevel > 0.5) {\n      setZoomLevel(prev => Math.max(0.5, prev - 0.1));\n    }\n  };\n\n  return (\n    <div style={{\n      position: 'relative'\n    }}>\n      {/* Zoom Controls */}\n      <div style={{\n        position: 'fixed',\n        top: '20px',\n        right: '20px',\n        display: 'flex',\n        gap: '10px',\n        zIndex: 1000,\n        background: 'rgba(0, 0, 0, 0.7)',\n        padding: '10px',\n        borderRadius: '8px',\n        boxShadow: '0 2px 4px rgba(0,0,0,0.2)'\n      }}>\n        <button\n          onClick={() => handleZoom('in')}\n          disabled={zoomLevel >= 2}\n          style={{\n            padding: '8px 12px',\n            fontSize: '1.2em',\n            backgroundColor: zoomLevel >= 2 ? '#666' : '#4CAF50',\n            color: 'white',\n            border: 'none',\n            borderRadius: '4px',\n            cursor: zoomLevel >= 2 ? 'not-allowed' : 'pointer',\n            width: '40px',\n            height: '40px',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center'\n          }}\n        >\n          +\n        </button>\n        <button\n          onClick={() => handleZoom('out')}\n          disabled={zoomLevel <= 0.5}\n          style={{\n            padding: '8px 12px',\n            fontSize: '1.2em',\n            backgroundColor: zoomLevel <= 0.5 ? '#666' : '#4CAF50',\n            color: 'white',\n            border: 'none',\n            borderRadius: '4px',\n            cursor: zoomLevel <= 0.5 ? 'not-allowed' : 'pointer',\n            width: '40px',\n            height: '40px',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center'\n          }}\n        >\n          -\n        </button>\n        <div style={{\n          padding: '8px 12px',\n          backgroundColor: 'rgba(255, 255, 255, 0.9)',\n          borderRadius: '4px',\n          minWidth: '60px',\n          textAlign: 'center',\n          fontSize: '1.1em'\n        }}>\n          {Math.round(zoomLevel * 100)}%\n        </div>\n      </div>\n\n      {/* Main content with zoom applied */}\n      <div style={{\n        display: 'flex',\n        flexDirection: 'column',\n        minHeight: '100vh',\n        minWidth: '1200px',\n        position: 'relative',\n        backgroundImage: `url(${bgImage})`,\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n        backgroundRepeat: 'no-repeat',\n        overflow: 'auto',\n        transform: `scale(${zoomLevel})`,\n        transformOrigin: 'center top',\n        transition: 'transform 0.2s ease-out'\n      }}>\n        {/* Main content (board & player stats) */}\n        <div style={{\n          flex: 1,\n          display: 'flex',\n          flexDirection: 'row',\n          alignItems: 'center',\n          justifyContent: 'center',\n          position: 'relative',\n          minWidth: '1080px',\n          padding: '20px',\n          marginTop: '220px',\n          marginBottom: '20px'\n        }}>\n          {/* Board with centered positioning */}\n          <div style={{ \n            position: 'relative',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n          width: '100%',\n            height: '100%',\n            minHeight: '600px' // Ensure minimum height for the board container\n          }}>\n            <div style={{ \n              position: 'relative',\n              margin: '200px' // Add margin around the board to make space for player stats\n            }}>\n              <Board />\n              <PlayerStats />\n            </div>\n          </div>\n        </div>\n\n        {/* Bottom sections (not fixed anymore) */}\n        <div style={{\n          width: '60%',\n          minWidth: '800px',\n          height: '240px',\n          minHeight: '400px',\n          background: 'rgba(80, 80, 80, 0.9)',\n          borderTop: '2px solid #bbb',\n          boxShadow: '0 -2px 10px rgba(0, 0, 0, 0.2)',\n          zIndex: 100,\n          display: 'flex',\n          border: '2px solid #666',\n          borderRadius: '30px 30px 0 0',\n          margin: '80px auto 0 auto'\n        }}>\n          {/* Dice Roller Section */}\n          <div style={{\n            flex: 1,\n            position: 'relative',\n            borderRight: '2px solid #666',\n            padding: '10px',\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            justifyContent: 'center',\n            background: 'rgba(60, 60, 60, 0.3)',\n            borderRadius: '30px 30px 30px 30px',\n            overflow: 'hidden'\n          }}>\n          {isMyTurn && (\n              <>\n            <img\n              src={Dicebox}\n              alt=\"Dice Board\"\n              style={{\n                position: 'absolute',\n                top: 0,\n                left: 0,\n                width: '100%',\n                height: '100%',\n                objectFit: 'fill',\n                    objectPosition: 'center',\n                pointerEvents: 'none'\n              }}\n            />\n                {testRollMode && (\n                  <div style={{\n                    position: 'absolute',\n                    top: '50%',\n                    left: '50%',\n                    transform: 'translate(-50%, -50%)',\n                    backgroundColor: 'rgba(0, 0, 0, 0.8)',\n                    color: '#fff',\n                    padding: '8px 16px',\n                    borderRadius: '4px',\n                    zIndex: 100\n                  }}>\n                    {testRollInput}\n                  </div>\n                )}\n              </>\n            )}\n            <DiceRoller \n              testRollMode={testRollMode} \n              hasCasinoPlayed={hasCasinoPlayed}\n              style={{ position: 'relative', zIndex: 1 }}\n            />\n          </div>\n\n          {/* Dashboard Section */}\n          <div style={{\n            flex: 1,\n            borderRight: '2px solid #666',\n            padding: '10px',\n            display: 'flex',\n            flexDirection: 'column',\n            background: 'rgba(60, 60, 60, 0.3)'\n          }}>\n            <Dashboard />\n        </div>\n\n          {/* Events Section */}\n          <div style={{\n            flex: 1,\n            padding: '10px',\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            justifyContent: 'center',\n            background: 'rgba(60, 60, 60, 0.3)',\n            borderRadius: '0 10px 0 0'\n          }}>\n          {(() => {\n              // Show \"Your Turn\" for current player before landing\n              if (isMyTurn && !movementDone) {\n                return (\n                  <div style={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    height: '100%',\n                    color: '#fff',\n                    fontSize: '1.6em',\n                    fontWeight: 'bold',\n                    textShadow: '2px 2px 4px rgba(0,0,0,0.5)'\n                  }}>\n                    Your Turn\n                  </div>\n                );\n              }\n\n              // Buy Property\n              if (isMyTurn && tileMeta?.type === 'property' && \n                  !players.some(p => p.properties.includes(tileMeta?.id))) {\n                return (\n                  <div style={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'center',\n                    gap: '10px'\n                  }}>\n                <button\n                  onClick={handleBuy}\n                  disabled={player.money < tileMeta.cost}\n                      style={{\n                        padding: '12px 24px',\n                        fontSize: '1.1em',\n                        backgroundColor: player.money >= tileMeta.cost ? '#4CAF50' : '#ccc',\n                        color: player.money >= tileMeta.cost ? 'white' : '#ff0000',\n                        border: 'none',\n                        borderRadius: '8px',\n                        cursor: player.money >= tileMeta.cost ? 'pointer' : 'not-allowed',\n                        fontWeight: 'bold'\n                      }}\n                >\n                  Buy (${tileMeta.cost})\n                </button>\n                {error && (\n                      <p style={{ color: 'tomato', margin: 0 }}>{error}</p>\n                )}\n        </div>\n                );\n              }\n\n              // Road Cash Game\n              if (isMyTurn && tileMeta?.id === 22) {\n                return <RoadCash isMyTurn={isMyTurn} socket={socket} />;\n              }\n\n              // Casino\n              if (inCasino && isMyTurn) {\n                return (\n                  <CasinoBetting \n                    isMyTurn={isMyTurn} \n                    currentMoney={player?.money || 0}\n                    socket={socket}\n                    player={player}\n                    onCasinoPlayed={() => setHasCasinoPlayed(true)}\n                  />\n                );\n              }\n\n              // Corner Choice\n              if (isMyTurn && tileMeta?.name?.toLowerCase().includes('choose corner')) {\n                return (\n                  <div style={{\n                    display: 'grid',\n                    gridTemplateColumns: '1fr 1fr',\n                    gridTemplateRows: '1fr 1fr',\n                    gap: '20px',\n                    width: '100%',\n                    maxWidth: '600px',\n                    padding: '20px',\n                    margin: '0 auto'\n                  }}>\n                    <button\n                      onClick={() => {\n                        socket.emit('teleport', { toTile: 1, prevTile: 30 });\n                        setError(null);\n                        setHasChosenCorner(true);\n                      }}\n                      style={{\n                        margin: 0,\n                        padding: 0,\n                        border: '3px solid #666',\n                        borderRadius: '12px',\n                        backgroundImage: `url(${startIcon})`,\n                        backgroundSize: '80%',\n                        backgroundRepeat: 'no-repeat',\n                        backgroundPosition: 'center 40%',\n                        cursor: 'pointer',\n                        display: 'flex',\n                        alignItems: 'flex-end',\n                        justifyContent: 'center',\n                        width: '100%',\n                        height: '100%',\n                        minHeight: '180px',\n                        position: 'relative',\n                        backgroundColor: 'rgba(255, 255, 255, 0.15)',\n                        transition: 'transform 0.2s, background-color 0.2s',\n                        ':hover': {\n                          transform: 'scale(1.02)',\n                          backgroundColor: 'rgba(255, 255, 255, 0.2)'\n                        }\n                      }}\n                    >\n                      <span style={{\n                        padding: '8px 16px',\n                        backgroundColor: 'rgba(0,0,0,0.6)',\n                        borderRadius: '0 0 9px 9px',\n                        color: '#fff',\n                        fontWeight: 'bold',\n                        fontSize: '1.4em',\n                        textShadow: '2px 2px 4px rgba(0,0,0,0.7)',\n                        position: 'absolute',\n                        bottom: 0,\n                        width: '100%',\n                        textAlign: 'center'\n                      }}>Start</span>\n                    </button>\n                    <button\n                      onClick={() => {\n                        socket.emit('teleport', { toTile: 22, prevTile: 21 });\n                        setError(null);\n                        setHasChosenCorner(true);\n                      }}\n                      style={{\n                        margin: 0,\n                        padding: 0,\n                        border: '3px solid #666',\n                        borderRadius: '12px',\n                        backgroundImage: `url(${roadIcon})`,\n                        backgroundSize: '80%',\n                        backgroundRepeat: 'no-repeat',\n                        backgroundPosition: 'center 40%',\n                        cursor: 'pointer',\n                        display: 'flex',\n                        alignItems: 'flex-end',\n                        justifyContent: 'center',\n                        width: '100%',\n                        height: '100%',\n                        minHeight: '180px',\n                        position: 'relative',\n                        backgroundColor: 'rgba(255, 255, 255, 0.15)',\n                        transition: 'transform 0.2s, background-color 0.2s',\n                        ':hover': {\n                          transform: 'scale(1.02)',\n                          backgroundColor: 'rgba(255, 255, 255, 0.2)'\n                        }\n                      }}\n                    >\n                      <span style={{\n                        padding: '8px 16px',\n                        backgroundColor: 'rgba(0,0,0,0.6)',\n                        borderRadius: '0 0 9px 9px',\n                        color: '#fff',\n                        fontWeight: 'bold',\n                        fontSize: '1.4em',\n                        textShadow: '2px 2px 4px rgba(0,0,0,0.7)',\n                        position: 'absolute',\n                        bottom: 0,\n                        width: '100%',\n                        textAlign: 'center'\n                      }}>Road</span>\n                    </button>\n                    <button\n                      onClick={() => {\n                        socket.emit('teleport', { toTile: 7, prevTile: 6 });\n                        setError(null);\n                        setHasChosenCorner(true);\n                      }}\n                      style={{\n                        margin: 0,\n                        padding: 0,\n                        border: '3px solid #666',\n                        borderRadius: '12px',\n                        backgroundImage: `url(${hotelIcon})`,\n                        backgroundSize: '80%',\n                        backgroundRepeat: 'no-repeat',\n                        backgroundPosition: 'center 40%',\n                        cursor: 'pointer',\n                        display: 'flex',\n                        alignItems: 'flex-end',\n                        justifyContent: 'center',\n                        width: '100%',\n                        height: '100%',\n                        minHeight: '180px',\n                        position: 'relative',\n                        backgroundColor: 'rgba(255, 255, 255, 0.15)',\n                        transition: 'transform 0.2s, background-color 0.2s',\n                        ':hover': {\n                          transform: 'scale(1.02)',\n                          backgroundColor: 'rgba(255, 255, 255, 0.2)'\n                        }\n                      }}\n                    >\n                      <span style={{\n                        padding: '8px 16px',\n                        backgroundColor: 'rgba(0,0,0,0.6)',\n                        borderRadius: '0 0 9px 9px',\n                        color: '#fff',\n                        fontWeight: 'bold',\n                        fontSize: '1.4em',\n                        textShadow: '2px 2px 4px rgba(0,0,0,0.7)',\n                        position: 'absolute',\n                        bottom: 0,\n                        width: '100%',\n                        textAlign: 'center'\n                      }}>Hotel</span>\n                    </button>\n                    <button\n                      onClick={() => {\n                        socket.emit('teleport', { toTile: 16, prevTile: 15 });\n                        setError(null);\n                        setHasChosenCorner(true);\n                      }}\n                      style={{\n                        margin: 0,\n                        padding: 0,\n                        border: '3px solid #666',\n                        borderRadius: '12px',\n                        backgroundImage: `url(${casinoIcon})`,\n                        backgroundSize: '80%',\n                        backgroundRepeat: 'no-repeat',\n                        backgroundPosition: 'center 40%',\n                        cursor: 'pointer',\n                        display: 'flex',\n                        alignItems: 'flex-end',\n                        justifyContent: 'center',\n                        width: '100%',\n                        height: '100%',\n                        minHeight: '180px',\n                        position: 'relative',\n                        backgroundColor: 'rgba(255, 255, 255, 0.15)',\n                        transition: 'transform 0.2s, background-color 0.2s',\n                        ':hover': {\n                          transform: 'scale(1.02)',\n                          backgroundColor: 'rgba(255, 255, 255, 0.2)'\n                        }\n                      }}\n                    >\n                      <span style={{\n                        padding: '8px 16px',\n                        backgroundColor: 'rgba(0,0,0,0.6)',\n                        borderRadius: '0 0 9px 9px',\n                        color: '#fff',\n                        fontWeight: 'bold',\n                        fontSize: '1.4em',\n                        textShadow: '2px 2px 4px rgba(0,0,0,0.7)',\n                        position: 'absolute',\n                        bottom: 0,\n                        width: '100%',\n                        textAlign: 'center'\n                      }}>Casino</span>\n                    </button>\n                  </div>\n                );\n              }\n\n              // Show error message if any\n              if (error) {\n                return (\n                  <p style={{ color: 'tomato', margin: 0 }}>{error}</p>\n                );\n              }\n\n              // Show empty state for non-turn players or when no action is needed\n              return (\n                <div style={{\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  height: '100%',\n                  color: 'rgba(255, 255, 255, 0.7)',\n                  fontSize: '1.2em'\n                }}>\n                  &nbsp;\n                </div>\n              );\n            })()}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}