{"ast":null,"code":"var _s = $RefreshSig$();\n// Final verified GameController.js\nimport React, { useContext, useEffect } from 'react';\nimport { GameContext } from '../context/GameContext';\nimport { tiles } from '../data/tiles';\nconst GameController = () => {\n  _s();\n  const {\n    players,\n    setPlayers,\n    currentPlayerIndex,\n    setCurrentPlayerIndex,\n    originalCount,\n    setOriginalCount,\n    isMoving,\n    setIsMoving,\n    player\n  } = useContext(GameContext);\n  useEffect(() => {\n    if (!isMoving || originalCount <= 0) return;\n    const interval = setInterval(() => {\n      setPlayers(prev => {\n        const updated = [...prev];\n        const current = updated[currentPlayerIndex];\n        const tile = tiles.find(t => t.id === current.tileId);\n        let next = originalCount > 7 ? tile === null || tile === void 0 ? void 0 : tile.nextAbove7 : tile === null || tile === void 0 ? void 0 : tile.nextBelow7;\n        if (originalCount === 7 && tile !== null && tile !== void 0 && tile.nextAbove7 && tile !== null && tile !== void 0 && tile.nextBelow7) {\n          const options = [tile.nextAbove7, tile.nextBelow7].filter(id => id !== current.prevTile);\n          next = window.confirm(\"Choose left path?\") ? options[0] : options[1];\n        }\n        current.prevTile = current.tileId;\n        current.tileId = next || current.tileId;\n        return updated;\n      });\n      setOriginalCount(c => {\n        const next = c - 1;\n        if (next <= 0) {\n          clearInterval(interval);\n          setIsMoving(false);\n        }\n        return next;\n      });\n    }, 500);\n    return () => clearInterval(interval);\n  }, [isMoving, originalCount]);\n  return null;\n};\n_s(GameController, \"i9it7Zw0YCReqAXbbp+xS+rKwXM=\");\n_c = GameController;\nexport default GameController;\nvar _c;\n$RefreshReg$(_c, \"GameController\");","map":{"version":3,"names":["React","useContext","useEffect","GameContext","tiles","GameController","_s","players","setPlayers","currentPlayerIndex","setCurrentPlayerIndex","originalCount","setOriginalCount","isMoving","setIsMoving","player","interval","setInterval","prev","updated","current","tile","find","t","id","tileId","next","nextAbove7","nextBelow7","options","filter","prevTile","window","confirm","c","clearInterval","_c","$RefreshReg$"],"sources":["C:/Users/addhy/Desktop/Business_web/client/src/components/GameController.js"],"sourcesContent":["// Final verified GameController.js\nimport React, { useContext, useEffect } from 'react';\nimport { GameContext } from '../context/GameContext';\nimport { tiles } from '../data/tiles';\n\nconst GameController = () => {\n  const {\n    players, setPlayers,\n    currentPlayerIndex, setCurrentPlayerIndex,\n    originalCount, setOriginalCount,\n    isMoving, setIsMoving,\n    player\n  } = useContext(GameContext);\n\n  useEffect(() => {\n    if (!isMoving || originalCount <= 0) return;\n\n    const interval = setInterval(() => {\n      setPlayers(prev => {\n        const updated = [...prev];\n        const current = updated[currentPlayerIndex];\n        const tile = tiles.find(t => t.id === current.tileId);\n\n        let next = originalCount > 7 ? tile?.nextAbove7 : tile?.nextBelow7;\n        if (originalCount === 7 && tile?.nextAbove7 && tile?.nextBelow7) {\n          const options = [tile.nextAbove7, tile.nextBelow7].filter(id => id !== current.prevTile);\n          next = window.confirm(\"Choose left path?\") ? options[0] : options[1];\n        }\n\n        current.prevTile = current.tileId;\n        current.tileId = next || current.tileId;\n\n        return updated;\n      });\n\n      setOriginalCount(c => {\n        const next = c - 1;\n        if (next <= 0) {\n          clearInterval(interval);\n          setIsMoving(false);\n        }\n        return next;\n      });\n    }, 500);\n\n    return () => clearInterval(interval);\n  }, [isMoving, originalCount]);\n\n  return null;\n};\n\nexport default GameController;\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AACpD,SAASC,WAAW,QAAQ,wBAAwB;AACpD,SAASC,KAAK,QAAQ,eAAe;AAErC,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM;IACJC,OAAO;IAAEC,UAAU;IACnBC,kBAAkB;IAAEC,qBAAqB;IACzCC,aAAa;IAAEC,gBAAgB;IAC/BC,QAAQ;IAAEC,WAAW;IACrBC;EACF,CAAC,GAAGd,UAAU,CAACE,WAAW,CAAC;EAE3BD,SAAS,CAAC,MAAM;IACd,IAAI,CAACW,QAAQ,IAAIF,aAAa,IAAI,CAAC,EAAE;IAErC,MAAMK,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjCT,UAAU,CAACU,IAAI,IAAI;QACjB,MAAMC,OAAO,GAAG,CAAC,GAAGD,IAAI,CAAC;QACzB,MAAME,OAAO,GAAGD,OAAO,CAACV,kBAAkB,CAAC;QAC3C,MAAMY,IAAI,GAAGjB,KAAK,CAACkB,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKJ,OAAO,CAACK,MAAM,CAAC;QAErD,IAAIC,IAAI,GAAGf,aAAa,GAAG,CAAC,GAAGU,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEM,UAAU,GAAGN,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEO,UAAU;QAClE,IAAIjB,aAAa,KAAK,CAAC,IAAIU,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEM,UAAU,IAAIN,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEO,UAAU,EAAE;UAC/D,MAAMC,OAAO,GAAG,CAACR,IAAI,CAACM,UAAU,EAAEN,IAAI,CAACO,UAAU,CAAC,CAACE,MAAM,CAACN,EAAE,IAAIA,EAAE,KAAKJ,OAAO,CAACW,QAAQ,CAAC;UACxFL,IAAI,GAAGM,MAAM,CAACC,OAAO,CAAC,mBAAmB,CAAC,GAAGJ,OAAO,CAAC,CAAC,CAAC,GAAGA,OAAO,CAAC,CAAC,CAAC;QACtE;QAEAT,OAAO,CAACW,QAAQ,GAAGX,OAAO,CAACK,MAAM;QACjCL,OAAO,CAACK,MAAM,GAAGC,IAAI,IAAIN,OAAO,CAACK,MAAM;QAEvC,OAAON,OAAO;MAChB,CAAC,CAAC;MAEFP,gBAAgB,CAACsB,CAAC,IAAI;QACpB,MAAMR,IAAI,GAAGQ,CAAC,GAAG,CAAC;QAClB,IAAIR,IAAI,IAAI,CAAC,EAAE;UACbS,aAAa,CAACnB,QAAQ,CAAC;UACvBF,WAAW,CAAC,KAAK,CAAC;QACpB;QACA,OAAOY,IAAI;MACb,CAAC,CAAC;IACJ,CAAC,EAAE,GAAG,CAAC;IAEP,OAAO,MAAMS,aAAa,CAACnB,QAAQ,CAAC;EACtC,CAAC,EAAE,CAACH,QAAQ,EAAEF,aAAa,CAAC,CAAC;EAE7B,OAAO,IAAI;AACb,CAAC;AAACL,EAAA,CA5CID,cAAc;AAAA+B,EAAA,GAAd/B,cAAc;AA8CpB,eAAeA,cAAc;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}