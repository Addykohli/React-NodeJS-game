{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\addhy\\\\Desktop\\\\Business_web - Copy (2)\\\\client\\\\src\\\\components\\\\PropertyDisplay.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useState, useContext, useEffect } from 'react';\nimport { tiles } from '../data/tiles';\nimport { GameContext } from '../context/GameContext';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PropertyCard = ({\n  property,\n  isExpanded,\n  isLastProperty,\n  isCurrentPlayer,\n  socket,\n  playerId,\n  player\n}) => {\n  const handleSell = e => {\n    e.stopPropagation(); // Prevent card expansion when clicking sell button\n    if (window.confirm(`Are you sure you want to sell ${property.name} for $${property.cost}?`)) {\n      socket.emit('updateProperty', {\n        playerId: playerId,\n        propertyId: property.id,\n        action: 'remove',\n        refundAmount: property.cost\n      });\n    }\n  };\n\n  // Calculate rent multiplier based on owned properties\n  const getRentMultiplier = () => {\n    if (!(player !== null && player !== void 0 && player.properties)) return 1;\n    const ownedProperties = tiles.filter(tile => player.properties.includes(tile.id));\n    const divisionProperties = ownedProperties.filter(tile => tile.division === property.division);\n    const count = divisionProperties.length;\n    if (property.division === 'tech') {\n      if (count >= 6) return 5;\n      if (count >= 5) return 4;\n      const hasGoogle = player.properties.includes(37);\n      const hasApple = player.properties.includes(36);\n      const hasAmazon = player.properties.includes(41);\n      if (hasGoogle && hasApple && hasAmazon) return 3;\n      if (count >= 3) return 2;\n      return 1;\n    } else {\n      if (count >= 6) return 5;\n      if (count >= 5) return 3;\n      if (count >= 3) return 2;\n      return 1;\n    }\n  };\n  const multiplier = getRentMultiplier();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'flex-start',\n      justifyContent: 'flex-start',\n      color: '#333',\n      fontSize: '1.2rem',\n      fontWeight: 'bold',\n      height: '100%',\n      position: 'relative'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontSize: '1.4rem',\n        marginBottom: '10px',\n        textAlign: 'left',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        maxWidth: '176px',\n        width: '100%'\n      },\n      children: property.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontSize: '1rem',\n        opacity: 1,\n        textAlign: 'center',\n        display: 'flex',\n        flexDirection: 'column',\n        gap: '4px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Cost: $\", property.cost]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: '8px',\n          justifyContent: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Rent: $\", property.rent]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), multiplier > 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: '#FFA500',\n            fontSize: '1.3em',\n            fontWeight: 'bold'\n          },\n          children: [\"X\", multiplier]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), isExpanded && isCurrentPlayer && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSell,\n          style: {\n            backgroundColor: '#ff4444',\n            color: 'white',\n            border: 'none',\n            borderRadius: '4px',\n            padding: '4px 8px',\n            cursor: 'pointer',\n            fontSize: '0.9rem',\n            fontWeight: 'bold',\n            transform: 'rotate(-90deg)',\n            transformOrigin: 'center',\n            marginLeft: '4px',\n            ':hover': {\n              backgroundColor: '#ff0000'\n            }\n          },\n          children: \"Sell\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_c = PropertyCard;\nconst PropertyDisplayLeft = ({\n  player,\n  position\n}) => {\n  _s();\n  const {\n    socket,\n    player: currentPlayer\n  } = useContext(GameContext);\n  const [expandedIndex, setExpandedIndex] = useState(null);\n\n  // Get only this player's properties\n  const ownedProperties = tiles.filter(tile => tile.type === 'property').filter(tile => {\n    var _player$properties;\n    return player === null || player === void 0 ? void 0 : (_player$properties = player.properties) === null || _player$properties === void 0 ? void 0 : _player$properties.includes(tile.id);\n  });\n  const handlePropertyClick = index => {\n    if (index === ownedProperties.length - 1) return;\n    setExpandedIndex(expandedIndex === index ? null : index);\n  };\n\n  // Reduced dimensions (70% of original) - matching TopPropertyDisplay\n  const cardWidth = 196; // 70% of 280 (swapped)\n  const cardHeight = 147; // 70% of 210 (swapped)\n  const cardOverlap = 39; // 70% of 56\n  const expandOffset = 108; // 70% of 154\n\n  // Calculate the total height of the stack when expanded\n  const stackHeight = ownedProperties.length * cardOverlap + (expandedIndex !== null ? expandOffset : 0);\n\n  // Position relative to board center (300px = half of board height)\n  const centerOffset = position === 'top' ? -150 : 150; // Â±150px from center\n\n  // Calculate the starting position for the stack - anchor at top instead of center\n  const stackStartPosition = 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'absolute',\n      right: '100%',\n      top: '50%',\n      transform: `translate(5px, calc(-50% + ${centerOffset}px - ${(ownedProperties.length - 1) * cardOverlap / 2}px))`,\n      width: cardWidth + 'px',\n      display: 'flex',\n      alignItems: 'flex-start',\n      overflow: 'visible',\n      height: stackHeight + 'px',\n      zIndex: 1\n    },\n    children: ownedProperties.map((property, index) => {\n      const isLastProperty = index === ownedProperties.length - 1;\n      const isExpanded = isLastProperty || expandedIndex === index;\n      const basePosition = index * cardOverlap;\n      let expandedOffset = 0;\n      if (expandedIndex !== null && index > expandedIndex) {\n        expandedOffset = expandOffset;\n      }\n      const finalPosition = basePosition + expandedOffset;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => !isLastProperty && handlePropertyClick(index),\n        style: {\n          width: cardWidth + 'px',\n          height: cardHeight + 'px',\n          border: '2px solid #666',\n          borderRadius: '8px',\n          position: 'absolute',\n          top: finalPosition,\n          transition: 'all 0.3s ease',\n          zIndex: isExpanded ? ownedProperties.length : index,\n          display: 'flex',\n          flexDirection: 'column',\n          padding: '10px',\n          boxSizing: 'border-box',\n          backgroundColor: 'rgb(173, 216, 230)',\n          cursor: isLastProperty ? 'default' : 'pointer'\n        },\n        children: /*#__PURE__*/_jsxDEV(PropertyCard, {\n          property: property,\n          isExpanded: isExpanded,\n          isLastProperty: isLastProperty,\n          isCurrentPlayer: player.socketId === (currentPlayer === null || currentPlayer === void 0 ? void 0 : currentPlayer.socketId),\n          socket: socket,\n          playerId: player.socketId,\n          player: player\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this)\n      }, property.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n};\n_s(PropertyDisplayLeft, \"q2hj4T2UvMZYBgQu/sypQbIZ050=\");\n_c2 = PropertyDisplayLeft;\nconst PropertyDisplayRight = ({\n  player,\n  position\n}) => {\n  _s2();\n  const {\n    socket,\n    player: currentPlayer\n  } = useContext(GameContext);\n  const [expandedIndex, setExpandedIndex] = useState(null);\n\n  // Get only this player's properties\n  const ownedProperties = tiles.filter(tile => tile.type === 'property').filter(tile => {\n    var _player$properties2;\n    return player === null || player === void 0 ? void 0 : (_player$properties2 = player.properties) === null || _player$properties2 === void 0 ? void 0 : _player$properties2.includes(tile.id);\n  });\n  const handlePropertyClick = index => {\n    if (index === ownedProperties.length - 1) return;\n    setExpandedIndex(expandedIndex === index ? null : index);\n  };\n\n  // Reduced dimensions (70% of original) - matching TopPropertyDisplay\n  const cardWidth = 196; // 70% of 280 (swapped)\n  const cardHeight = 147; // 70% of 210 (swapped)\n  const cardOverlap = 39; // 70% of 56\n  const expandOffset = 108; // 70% of 154\n\n  // Calculate the total height of the stack when expanded\n  const stackHeight = ownedProperties.length * cardOverlap + (expandedIndex !== null ? expandOffset : 0);\n\n  // Position relative to board center (300px = half of board height)\n  const centerOffset = position === 'top' ? -150 : 150; // Â±150px from center\n\n  // Calculate the starting position for the stack - anchor at top instead of center\n  const stackStartPosition = 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'absolute',\n      left: '100%',\n      top: '50%',\n      transform: `translate(-5px, calc(-50% + ${centerOffset}px - ${(ownedProperties.length - 1) * cardOverlap / 2}px))`,\n      width: cardWidth + 'px',\n      display: 'flex',\n      alignItems: 'flex-start',\n      overflow: 'visible',\n      height: stackHeight + 'px',\n      zIndex: 1\n    },\n    children: ownedProperties.map((property, index) => {\n      const isLastProperty = index === ownedProperties.length - 1;\n      const isExpanded = isLastProperty || expandedIndex === index;\n      const basePosition = index * cardOverlap;\n      let expandedOffset = 0;\n      if (expandedIndex !== null && index > expandedIndex) {\n        expandedOffset = expandOffset;\n      }\n      const finalPosition = basePosition + expandedOffset;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => !isLastProperty && handlePropertyClick(index),\n        style: {\n          width: cardWidth + 'px',\n          height: cardHeight + 'px',\n          border: '2px solid #666',\n          borderRadius: '8px',\n          position: 'absolute',\n          top: finalPosition,\n          transition: 'all 0.3s ease',\n          zIndex: isExpanded ? ownedProperties.length : index,\n          display: 'flex',\n          flexDirection: 'column',\n          padding: '10px',\n          boxSizing: 'border-box',\n          backgroundColor: 'rgb(173, 216, 230)',\n          cursor: isLastProperty ? 'default' : 'pointer'\n        },\n        children: /*#__PURE__*/_jsxDEV(PropertyCard, {\n          property: property,\n          isExpanded: isExpanded,\n          isLastProperty: isLastProperty,\n          isCurrentPlayer: player.socketId === (currentPlayer === null || currentPlayer === void 0 ? void 0 : currentPlayer.socketId),\n          socket: socket,\n          playerId: player.socketId,\n          player: player\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 13\n        }, this)\n      }, property.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 246,\n    columnNumber: 5\n  }, this);\n};\n_s2(PropertyDisplayRight, \"q2hj4T2UvMZYBgQu/sypQbIZ050=\");\n_c3 = PropertyDisplayRight;\nconst PropertyDisplay = () => {\n  _s3();\n  const [expandedIndex, setExpandedIndex] = useState(null);\n  const {\n    player,\n    setPlayer,\n    currentPlayerId,\n    socket,\n    players = [],\n    setPlayers\n  } = useContext(GameContext);\n  const [keyInput, setKeyInput] = useState('');\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.key === 'Enter') {\n        const commands = keyInput.trim().toLowerCase();\n\n        // Process 'own#' commands\n        const ownMatches = commands.matchAll(/own(\\d+)/g);\n        const matchesArray = Array.from(ownMatches);\n        for (const match of matchesArray) {\n          const propertyId = parseInt(match[1], 10);\n          const property = tiles.find(tile => tile.id === propertyId);\n          if (property) {\n            // Emit socket event to update property ownership for all clients\n            socket.emit('updateProperty', {\n              playerId: player.socketId,\n              propertyId: propertyId,\n              action: 'add'\n            });\n          }\n        }\n\n        // Process dice roll commands\n        if (commands.includes('testroll') || commands.includes('diceroll')) {\n          const dice1 = Math.floor(Math.random() * 6) + 1;\n          const dice2 = Math.floor(Math.random() * 6) + 1;\n        }\n        setKeyInput('');\n      } else if (e.key.match(/^[0-9a-z]$/i)) {\n        setKeyInput(prev => prev + e.key);\n      }\n    };\n\n    // Handle property updates from server\n    const handlePropertyUpdate = ({\n      playerId,\n      propertyId,\n      action\n    }) => {\n      setPlayers(prevPlayers => {\n        return prevPlayers.map(p => {\n          if (p.socketId === playerId) {\n            return {\n              ...p,\n              properties: action === 'add' ? [...(p.properties || []), propertyId] : (p.properties || []).filter(id => id !== propertyId)\n            };\n          }\n          return p;\n        });\n      });\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    socket.on('propertyUpdated', handlePropertyUpdate);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n      socket.off('propertyUpdated', handlePropertyUpdate);\n    };\n  }, [keyInput, currentPlayerId, setPlayer, socket, player === null || player === void 0 ? void 0 : player.socketId, setPlayers]);\n\n  // Get only current player's properties\n  const ownedProperties = tiles.filter(tile => tile.type === 'property').filter(tile => {\n    var _player$properties3;\n    return player === null || player === void 0 ? void 0 : (_player$properties3 = player.properties) === null || _player$properties3 === void 0 ? void 0 : _player$properties3.includes(tile.id);\n  });\n  const handlePropertyClick = index => {\n    if (index === ownedProperties.length - 1) return;\n    setExpandedIndex(expandedIndex === index ? null : index);\n  };\n\n  // Get left-side and right-side players (based on PlayerStats logic)\n  const otherPlayers = players.filter(p => p && p.socketId !== (player === null || player === void 0 ? void 0 : player.socketId));\n  const leftPlayers = otherPlayers.slice(0, 2);\n  const rightPlayers = otherPlayers.slice(2, 4);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: '100%',\n        left: '50%',\n        transform: 'translateX(calc(-50% + 50px))',\n        height: '280px',\n        display: 'flex',\n        alignItems: 'flex-start',\n        overflow: 'visible',\n        marginTop: '-3px',\n        width: '800px',\n        justifyContent: 'center'\n      },\n      children: ownedProperties.map((property, index) => {\n        const isLastProperty = index === ownedProperties.length - 1;\n        const isExpanded = isLastProperty || expandedIndex === index;\n        const basePosition = index * 56;\n        let expandedOffset = 0;\n        if (expandedIndex !== null && index > expandedIndex) {\n          expandedOffset = 154;\n        }\n        const finalPosition = basePosition + expandedOffset;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => !isLastProperty && handlePropertyClick(index),\n          style: {\n            width: '210px',\n            height: '280px',\n            border: '2px solid #666',\n            borderRadius: '12px',\n            position: 'absolute',\n            left: finalPosition,\n            transition: 'all 0.3s ease',\n            zIndex: isExpanded ? ownedProperties.length : index,\n            display: 'flex',\n            flexDirection: 'column',\n            padding: '14px',\n            boxSizing: 'border-box',\n            backgroundColor: 'rgb(173, 216, 230)',\n            cursor: isLastProperty ? 'default' : 'pointer'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              transform: 'rotate(-90deg)',\n              transformOrigin: 'left center',\n              position: 'absolute',\n              width: '280px',\n              height: '210px',\n              top: '140px',\n              left: '105px',\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'flex-start',\n              justifyContent: 'flex-start',\n              color: '#333',\n              fontSize: '1.68rem',\n              fontWeight: 'bold',\n              padding: '14px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: '1.96rem',\n                marginBottom: '14px',\n                textAlign: 'left',\n                whiteSpace: 'nowrap',\n                overflow: 'hidden',\n                textOverflow: 'ellipsis',\n                maxWidth: '252px',\n                width: '100%'\n              },\n              children: property.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: '1.4rem',\n                opacity: 1,\n                textAlign: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Cost: $\", property.cost]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 469,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Rent: $\", property.rent]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 470,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 15\n          }, this)\n        }, property.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 7\n    }, this), leftPlayers.map((leftPlayer, idx) => /*#__PURE__*/_jsxDEV(PropertyDisplayLeft, {\n      player: leftPlayer,\n      position: idx === 0 ? 'top' : 'bottom'\n    }, leftPlayer.socketId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 9\n    }, this)), rightPlayers.map((rightPlayer, idx) => /*#__PURE__*/_jsxDEV(PropertyDisplayRight, {\n      player: rightPlayer,\n      position: idx === 0 ? 'top' : 'bottom'\n    }, rightPlayer.socketId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true);\n};\n_s3(PropertyDisplay, \"64C7RweenXYflEjKa/vQrJGMfoE=\");\n_c4 = PropertyDisplay;\nexport default PropertyDisplay;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"PropertyCard\");\n$RefreshReg$(_c2, \"PropertyDisplayLeft\");\n$RefreshReg$(_c3, \"PropertyDisplayRight\");\n$RefreshReg$(_c4, \"PropertyDisplay\");","map":{"version":3,"names":["React","useState","useContext","useEffect","tiles","GameContext","jsxDEV","_jsxDEV","Fragment","_Fragment","PropertyCard","property","isExpanded","isLastProperty","isCurrentPlayer","socket","playerId","player","handleSell","e","stopPropagation","window","confirm","name","cost","emit","propertyId","id","action","refundAmount","getRentMultiplier","properties","ownedProperties","filter","tile","includes","divisionProperties","division","count","length","hasGoogle","hasApple","hasAmazon","multiplier","style","display","flexDirection","alignItems","justifyContent","color","fontSize","fontWeight","height","position","children","marginBottom","textAlign","whiteSpace","overflow","textOverflow","maxWidth","width","fileName","_jsxFileName","lineNumber","columnNumber","opacity","gap","rent","onClick","backgroundColor","border","borderRadius","padding","cursor","transform","transformOrigin","marginLeft","_c","PropertyDisplayLeft","_s","currentPlayer","expandedIndex","setExpandedIndex","type","_player$properties","handlePropertyClick","index","cardWidth","cardHeight","cardOverlap","expandOffset","stackHeight","centerOffset","stackStartPosition","right","top","zIndex","map","basePosition","expandedOffset","finalPosition","transition","boxSizing","socketId","_c2","PropertyDisplayRight","_s2","_player$properties2","left","_c3","PropertyDisplay","_s3","setPlayer","currentPlayerId","players","setPlayers","keyInput","setKeyInput","handleKeyDown","key","commands","trim","toLowerCase","ownMatches","matchAll","matchesArray","Array","from","match","parseInt","find","dice1","Math","floor","random","dice2","prev","handlePropertyUpdate","prevPlayers","p","addEventListener","on","removeEventListener","off","_player$properties3","otherPlayers","leftPlayers","slice","rightPlayers","marginTop","leftPlayer","idx","rightPlayer","_c4","$RefreshReg$"],"sources":["C:/Users/addhy/Desktop/Business_web - Copy (2)/client/src/components/PropertyDisplay.js"],"sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport { tiles } from '../data/tiles';\nimport { GameContext } from '../context/GameContext';\n\nconst PropertyCard = ({ property, isExpanded, isLastProperty, isCurrentPlayer, socket, playerId, player }) => {\n  const handleSell = (e) => {\n    e.stopPropagation(); // Prevent card expansion when clicking sell button\n    if (window.confirm(`Are you sure you want to sell ${property.name} for $${property.cost}?`)) {\n      socket.emit('updateProperty', {\n        playerId: playerId,\n        propertyId: property.id,\n        action: 'remove',\n        refundAmount: property.cost\n      });\n    }\n  };\n\n  // Calculate rent multiplier based on owned properties\n  const getRentMultiplier = () => {\n    if (!player?.properties) return 1;\n    \n    const ownedProperties = tiles.filter(tile => player.properties.includes(tile.id));\n    const divisionProperties = ownedProperties.filter(tile => tile.division === property.division);\n    const count = divisionProperties.length;\n\n    if (property.division === 'tech') {\n      if (count >= 6) return 5;\n      if (count >= 5) return 4;\n      \n      const hasGoogle = player.properties.includes(37);\n      const hasApple = player.properties.includes(36);\n      const hasAmazon = player.properties.includes(41);\n      \n      if (hasGoogle && hasApple && hasAmazon) return 3;\n      if (count >= 3) return 2;\n      return 1;\n    } else {\n      if (count >= 6) return 5;\n      if (count >= 5) return 3;\n      if (count >= 3) return 2;\n      return 1;\n    }\n  };\n\n  const multiplier = getRentMultiplier();\n\n  return (\n    <div style={{\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'flex-start',\n      justifyContent: 'flex-start',\n      color: '#333',\n      fontSize: '1.2rem',\n      fontWeight: 'bold',\n      height: '100%',\n      position: 'relative'\n    }}>\n      <div\n        style={{\n          fontSize: '1.4rem',\n          marginBottom: '10px',\n          textAlign: 'left',\n          whiteSpace: 'nowrap',\n          overflow: 'hidden',\n          textOverflow: 'ellipsis',\n          maxWidth: '176px',\n          width: '100%'\n        }}>\n        {property.name}\n      </div>\n      <div style={{\n        fontSize: '1rem',\n        opacity: 1,\n        textAlign: 'center',\n        display: 'flex',\n        flexDirection: 'column',\n        gap: '4px'\n      }}>\n        <div>Cost: ${property.cost}</div>\n        <div style={{ \n          display: 'flex', \n          alignItems: 'center', \n          gap: '8px', \n          justifyContent: 'center' \n        }}>\n          <span>Rent: ${property.rent}</span>\n          {multiplier > 1 && (\n            <span style={{ \n              color: '#FFA500', \n              fontSize: '1.3em', \n              fontWeight: 'bold'\n            }}>\n              X{multiplier}\n            </span>\n          )}\n          {isExpanded && isCurrentPlayer && (\n            <button\n              onClick={handleSell}\n              style={{\n                backgroundColor: '#ff4444',\n                color: 'white',\n                border: 'none',\n                borderRadius: '4px',\n                padding: '4px 8px',\n                cursor: 'pointer',\n                fontSize: '0.9rem',\n                fontWeight: 'bold',\n                transform: 'rotate(-90deg)',\n                transformOrigin: 'center',\n                marginLeft: '4px',\n                ':hover': {\n                  backgroundColor: '#ff0000'\n                }\n              }}\n            >\n              Sell\n            </button>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst PropertyDisplayLeft = ({ player, position }) => {\n  const { socket, player: currentPlayer } = useContext(GameContext);\n  const [expandedIndex, setExpandedIndex] = useState(null);\n  \n  // Get only this player's properties\n  const ownedProperties = tiles\n    .filter(tile => tile.type === 'property')\n    .filter(tile => player?.properties?.includes(tile.id));\n\n  const handlePropertyClick = (index) => {\n    if (index === ownedProperties.length - 1) return;\n    setExpandedIndex(expandedIndex === index ? null : index);\n  };\n\n  // Reduced dimensions (70% of original) - matching TopPropertyDisplay\n  const cardWidth = 196; // 70% of 280 (swapped)\n  const cardHeight = 147; // 70% of 210 (swapped)\n  const cardOverlap = 39; // 70% of 56\n  const expandOffset = 108; // 70% of 154\n\n  // Calculate the total height of the stack when expanded\n  const stackHeight = ownedProperties.length * cardOverlap + (expandedIndex !== null ? expandOffset : 0);\n  \n  // Position relative to board center (300px = half of board height)\n  const centerOffset = position === 'top' ? -150 : 150; // Â±150px from center\n\n  // Calculate the starting position for the stack - anchor at top instead of center\n  const stackStartPosition = 0;\n\n  return (\n    <div style={{\n      position: 'absolute',\n      right: '100%',\n      top: '50%',\n      transform: `translate(5px, calc(-50% + ${centerOffset}px - ${(ownedProperties.length - 1) * cardOverlap / 2}px))`,\n      width: cardWidth + 'px',\n      display: 'flex',\n      alignItems: 'flex-start',\n      overflow: 'visible',\n      height: stackHeight + 'px',\n      zIndex: 1\n    }}>\n      {ownedProperties.map((property, index) => {\n        const isLastProperty = index === ownedProperties.length - 1;\n        const isExpanded = isLastProperty || expandedIndex === index;\n        \n        const basePosition = index * cardOverlap;\n        let expandedOffset = 0;\n        if (expandedIndex !== null && index > expandedIndex) {\n          expandedOffset = expandOffset;\n        }\n        const finalPosition = basePosition + expandedOffset;\n        \n        return (\n          <div\n            key={property.id}\n            onClick={() => !isLastProperty && handlePropertyClick(index)}\n            style={{\n              width: cardWidth + 'px',\n              height: cardHeight + 'px',\n              border: '2px solid #666',\n              borderRadius: '8px',\n              position: 'absolute',\n              top: finalPosition,\n              transition: 'all 0.3s ease',\n              zIndex: isExpanded ? ownedProperties.length : index,\n              display: 'flex',\n              flexDirection: 'column',\n              padding: '10px',\n              boxSizing: 'border-box',\n              backgroundColor: 'rgb(173, 216, 230)',\n              cursor: isLastProperty ? 'default' : 'pointer'\n            }}\n          >\n            <PropertyCard\n              property={property}\n              isExpanded={isExpanded}\n              isLastProperty={isLastProperty}\n              isCurrentPlayer={player.socketId === currentPlayer?.socketId}\n              socket={socket}\n              playerId={player.socketId}\n              player={player}\n            />\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nconst PropertyDisplayRight = ({ player, position }) => {\n  const { socket, player: currentPlayer } = useContext(GameContext);\n  const [expandedIndex, setExpandedIndex] = useState(null);\n  \n  // Get only this player's properties\n  const ownedProperties = tiles\n    .filter(tile => tile.type === 'property')\n    .filter(tile => player?.properties?.includes(tile.id));\n\n  const handlePropertyClick = (index) => {\n    if (index === ownedProperties.length - 1) return;\n    setExpandedIndex(expandedIndex === index ? null : index);\n  };\n\n  // Reduced dimensions (70% of original) - matching TopPropertyDisplay\n  const cardWidth = 196; // 70% of 280 (swapped)\n  const cardHeight = 147; // 70% of 210 (swapped)\n  const cardOverlap = 39; // 70% of 56\n  const expandOffset = 108; // 70% of 154\n\n  // Calculate the total height of the stack when expanded\n  const stackHeight = ownedProperties.length * cardOverlap + (expandedIndex !== null ? expandOffset : 0);\n  \n  // Position relative to board center (300px = half of board height)\n  const centerOffset = position === 'top' ? -150 : 150; // Â±150px from center\n\n  // Calculate the starting position for the stack - anchor at top instead of center\n  const stackStartPosition = 0;\n\n  return (\n    <div style={{\n      position: 'absolute',\n      left: '100%',\n      top: '50%',\n      transform: `translate(-5px, calc(-50% + ${centerOffset}px - ${(ownedProperties.length - 1) * cardOverlap / 2}px))`,\n      width: cardWidth + 'px',\n      display: 'flex',\n      alignItems: 'flex-start',\n      overflow: 'visible',\n      height: stackHeight + 'px',\n      zIndex: 1\n    }}>\n      {ownedProperties.map((property, index) => {\n        const isLastProperty = index === ownedProperties.length - 1;\n        const isExpanded = isLastProperty || expandedIndex === index;\n        \n        const basePosition = index * cardOverlap;\n        let expandedOffset = 0;\n        if (expandedIndex !== null && index > expandedIndex) {\n          expandedOffset = expandOffset;\n        }\n        const finalPosition = basePosition + expandedOffset;\n        \n        return (\n          <div\n            key={property.id}\n            onClick={() => !isLastProperty && handlePropertyClick(index)}\n            style={{\n              width: cardWidth + 'px',\n              height: cardHeight + 'px',\n              border: '2px solid #666',\n              borderRadius: '8px',\n              position: 'absolute',\n              top: finalPosition,\n              transition: 'all 0.3s ease',\n              zIndex: isExpanded ? ownedProperties.length : index,\n              display: 'flex',\n              flexDirection: 'column',\n              padding: '10px',\n              boxSizing: 'border-box',\n              backgroundColor: 'rgb(173, 216, 230)',\n              cursor: isLastProperty ? 'default' : 'pointer'\n            }}\n          >\n            <PropertyCard\n              property={property}\n              isExpanded={isExpanded}\n              isLastProperty={isLastProperty}\n              isCurrentPlayer={player.socketId === currentPlayer?.socketId}\n              socket={socket}\n              playerId={player.socketId}\n              player={player}\n            />\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nconst PropertyDisplay = () => {\n  const [expandedIndex, setExpandedIndex] = useState(null);\n  const { player, setPlayer, currentPlayerId, socket, players = [], setPlayers } = useContext(GameContext);\n  const [keyInput, setKeyInput] = useState('');\n\n  useEffect(() => {\n    const handleKeyDown = (e) => {\n      if (e.key === 'Enter') {\n        const commands = keyInput.trim().toLowerCase();\n        \n        // Process 'own#' commands\n        const ownMatches = commands.matchAll(/own(\\d+)/g);\n        const matchesArray = Array.from(ownMatches);\n        for (const match of matchesArray) {\n          const propertyId = parseInt(match[1], 10);\n          const property = tiles.find(tile => tile.id === propertyId);\n          if (property) {\n            // Emit socket event to update property ownership for all clients\n            socket.emit('updateProperty', {\n              playerId: player.socketId,\n              propertyId: propertyId,\n              action: 'add'\n            });\n          }\n        }\n        \n        // Process dice roll commands\n        if (commands.includes('testroll') || commands.includes('diceroll')) {\n          const dice1 = Math.floor(Math.random() * 6) + 1;\n          const dice2 = Math.floor(Math.random() * 6) + 1;\n        }\n        \n        setKeyInput('');\n      } else if (e.key.match(/^[0-9a-z]$/i)) {\n        setKeyInput(prev => prev + e.key);\n      }\n    };\n\n    // Handle property updates from server\n    const handlePropertyUpdate = ({ playerId, propertyId, action }) => {\n      setPlayers(prevPlayers => {\n        return prevPlayers.map(p => {\n          if (p.socketId === playerId) {\n            return {\n              ...p,\n              properties: action === 'add' \n                ? [...(p.properties || []), propertyId]\n                : (p.properties || []).filter(id => id !== propertyId)\n            };\n          }\n          return p;\n        });\n      });\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    socket.on('propertyUpdated', handlePropertyUpdate);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n      socket.off('propertyUpdated', handlePropertyUpdate);\n    };\n  }, [keyInput, currentPlayerId, setPlayer, socket, player?.socketId, setPlayers]);\n\n  // Get only current player's properties\n  const ownedProperties = tiles\n    .filter(tile => tile.type === 'property')\n    .filter(tile => player?.properties?.includes(tile.id));\n\n  const handlePropertyClick = (index) => {\n    if (index === ownedProperties.length - 1) return;\n    setExpandedIndex(expandedIndex === index ? null : index);\n  };\n\n  // Get left-side and right-side players (based on PlayerStats logic)\n  const otherPlayers = players.filter(p => p && p.socketId !== player?.socketId);\n  const leftPlayers = otherPlayers.slice(0, 2);\n  const rightPlayers = otherPlayers.slice(2, 4);\n\n  return (\n    <>\n      {/* Bottom property stack for current player */}\n      <div style={{\n        position: 'absolute',\n        top: '100%',\n        left: '50%',\n        transform: 'translateX(calc(-50% + 50px))',\n        height: '280px',\n        display: 'flex',\n        alignItems: 'flex-start',\n        overflow: 'visible',\n        marginTop: '-3px',\n        width: '800px',\n        justifyContent: 'center'\n      }}>\n        {ownedProperties.map((property, index) => {\n          const isLastProperty = index === ownedProperties.length - 1;\n          const isExpanded = isLastProperty || expandedIndex === index;\n          const basePosition = index * 56;\n          let expandedOffset = 0;\n          \n          if (expandedIndex !== null && index > expandedIndex) {\n            expandedOffset = 154;\n          }\n\n          const finalPosition = basePosition + expandedOffset;\n          \n          return (\n            <div\n              key={property.id}\n              onClick={() => !isLastProperty && handlePropertyClick(index)}\n              style={{\n                width: '210px',\n                height: '280px',\n                border: '2px solid #666',\n                borderRadius: '12px',\n                position: 'absolute',\n                left: finalPosition,\n                transition: 'all 0.3s ease',\n                zIndex: isExpanded ? ownedProperties.length : index,\n                display: 'flex',\n                flexDirection: 'column',\n                padding: '14px',\n                boxSizing: 'border-box',\n                backgroundColor: 'rgb(173, 216, 230)',\n                cursor: isLastProperty ? 'default' : 'pointer'\n              }}\n            >\n              <div style={{\n                transform: 'rotate(-90deg)',\n                transformOrigin: 'left center',\n                position: 'absolute',\n                width: '280px',\n                height: '210px',\n                top: '140px',\n                left: '105px',\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'flex-start',\n                justifyContent: 'flex-start',\n                color: '#333',\n                fontSize: '1.68rem',\n                fontWeight: 'bold',\n                padding: '14px'\n              }}>\n                <div\n                  style={{\n                    fontSize: '1.96rem',\n                    marginBottom: '14px',\n                    textAlign: 'left',\n                    whiteSpace: 'nowrap',\n                    overflow: 'hidden',\n                    textOverflow: 'ellipsis',\n                    maxWidth: '252px',\n                    width: '100%'\n                  }}>\n                  {property.name}\n                </div>\n                <div style={{\n                  fontSize: '1.4rem',\n                  opacity: 1,\n                  textAlign: 'center'\n                }}>\n                  <div>Cost: ${property.cost}</div>\n                  <div>Rent: ${property.rent}</div>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n\n      {/* Left side property stacks */}\n      {leftPlayers.map((leftPlayer, idx) => (\n        <PropertyDisplayLeft \n          key={leftPlayer.socketId} \n          player={leftPlayer}\n          position={idx === 0 ? 'top' : 'bottom'}\n        />\n      ))}\n\n      {/* Right side property stacks */}\n      {rightPlayers.map((rightPlayer, idx) => (\n        <PropertyDisplayRight\n          key={rightPlayer.socketId}\n          player={rightPlayer}\n          position={idx === 0 ? 'top' : 'bottom'}\n        />\n      ))}\n    </>\n  );\n};\n\nexport default PropertyDisplay; "],"mappings":";;;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC9D,SAASC,KAAK,QAAQ,eAAe;AACrC,SAASC,WAAW,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAErD,MAAMC,YAAY,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,UAAU;EAAEC,cAAc;EAAEC,eAAe;EAAEC,MAAM;EAAEC,QAAQ;EAAEC;AAAO,CAAC,KAAK;EAC5G,MAAMC,UAAU,GAAIC,CAAC,IAAK;IACxBA,CAAC,CAACC,eAAe,CAAC,CAAC,CAAC,CAAC;IACrB,IAAIC,MAAM,CAACC,OAAO,CAAC,iCAAiCX,QAAQ,CAACY,IAAI,SAASZ,QAAQ,CAACa,IAAI,GAAG,CAAC,EAAE;MAC3FT,MAAM,CAACU,IAAI,CAAC,gBAAgB,EAAE;QAC5BT,QAAQ,EAAEA,QAAQ;QAClBU,UAAU,EAAEf,QAAQ,CAACgB,EAAE;QACvBC,MAAM,EAAE,QAAQ;QAChBC,YAAY,EAAElB,QAAQ,CAACa;MACzB,CAAC,CAAC;IACJ;EACF,CAAC;;EAED;EACA,MAAMM,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAI,EAACb,MAAM,aAANA,MAAM,eAANA,MAAM,CAAEc,UAAU,GAAE,OAAO,CAAC;IAEjC,MAAMC,eAAe,GAAG5B,KAAK,CAAC6B,MAAM,CAACC,IAAI,IAAIjB,MAAM,CAACc,UAAU,CAACI,QAAQ,CAACD,IAAI,CAACP,EAAE,CAAC,CAAC;IACjF,MAAMS,kBAAkB,GAAGJ,eAAe,CAACC,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACG,QAAQ,KAAK1B,QAAQ,CAAC0B,QAAQ,CAAC;IAC9F,MAAMC,KAAK,GAAGF,kBAAkB,CAACG,MAAM;IAEvC,IAAI5B,QAAQ,CAAC0B,QAAQ,KAAK,MAAM,EAAE;MAChC,IAAIC,KAAK,IAAI,CAAC,EAAE,OAAO,CAAC;MACxB,IAAIA,KAAK,IAAI,CAAC,EAAE,OAAO,CAAC;MAExB,MAAME,SAAS,GAAGvB,MAAM,CAACc,UAAU,CAACI,QAAQ,CAAC,EAAE,CAAC;MAChD,MAAMM,QAAQ,GAAGxB,MAAM,CAACc,UAAU,CAACI,QAAQ,CAAC,EAAE,CAAC;MAC/C,MAAMO,SAAS,GAAGzB,MAAM,CAACc,UAAU,CAACI,QAAQ,CAAC,EAAE,CAAC;MAEhD,IAAIK,SAAS,IAAIC,QAAQ,IAAIC,SAAS,EAAE,OAAO,CAAC;MAChD,IAAIJ,KAAK,IAAI,CAAC,EAAE,OAAO,CAAC;MACxB,OAAO,CAAC;IACV,CAAC,MAAM;MACL,IAAIA,KAAK,IAAI,CAAC,EAAE,OAAO,CAAC;MACxB,IAAIA,KAAK,IAAI,CAAC,EAAE,OAAO,CAAC;MACxB,IAAIA,KAAK,IAAI,CAAC,EAAE,OAAO,CAAC;MACxB,OAAO,CAAC;IACV;EACF,CAAC;EAED,MAAMK,UAAU,GAAGb,iBAAiB,CAAC,CAAC;EAEtC,oBACEvB,OAAA;IAAKqC,KAAK,EAAE;MACVC,OAAO,EAAE,MAAM;MACfC,aAAa,EAAE,QAAQ;MACvBC,UAAU,EAAE,YAAY;MACxBC,cAAc,EAAE,YAAY;MAC5BC,KAAK,EAAE,MAAM;MACbC,QAAQ,EAAE,QAAQ;MAClBC,UAAU,EAAE,MAAM;MAClBC,MAAM,EAAE,MAAM;MACdC,QAAQ,EAAE;IACZ,CAAE;IAAAC,QAAA,gBACA/C,OAAA;MACEqC,KAAK,EAAE;QACLM,QAAQ,EAAE,QAAQ;QAClBK,YAAY,EAAE,MAAM;QACpBC,SAAS,EAAE,MAAM;QACjBC,UAAU,EAAE,QAAQ;QACpBC,QAAQ,EAAE,QAAQ;QAClBC,YAAY,EAAE,UAAU;QACxBC,QAAQ,EAAE,OAAO;QACjBC,KAAK,EAAE;MACT,CAAE;MAAAP,QAAA,EACD3C,QAAQ,CAACY;IAAI;MAAAuC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC,eACN1D,OAAA;MAAKqC,KAAK,EAAE;QACVM,QAAQ,EAAE,MAAM;QAChBgB,OAAO,EAAE,CAAC;QACVV,SAAS,EAAE,QAAQ;QACnBX,OAAO,EAAE,MAAM;QACfC,aAAa,EAAE,QAAQ;QACvBqB,GAAG,EAAE;MACP,CAAE;MAAAb,QAAA,gBACA/C,OAAA;QAAA+C,QAAA,GAAK,SAAO,EAAC3C,QAAQ,CAACa,IAAI;MAAA;QAAAsC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACjC1D,OAAA;QAAKqC,KAAK,EAAE;UACVC,OAAO,EAAE,MAAM;UACfE,UAAU,EAAE,QAAQ;UACpBoB,GAAG,EAAE,KAAK;UACVnB,cAAc,EAAE;QAClB,CAAE;QAAAM,QAAA,gBACA/C,OAAA;UAAA+C,QAAA,GAAM,SAAO,EAAC3C,QAAQ,CAACyD,IAAI;QAAA;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,EAClCtB,UAAU,GAAG,CAAC,iBACbpC,OAAA;UAAMqC,KAAK,EAAE;YACXK,KAAK,EAAE,SAAS;YAChBC,QAAQ,EAAE,OAAO;YACjBC,UAAU,EAAE;UACd,CAAE;UAAAG,QAAA,GAAC,GACA,EAACX,UAAU;QAAA;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR,CACP,EACArD,UAAU,IAAIE,eAAe,iBAC5BP,OAAA;UACE8D,OAAO,EAAEnD,UAAW;UACpB0B,KAAK,EAAE;YACL0B,eAAe,EAAE,SAAS;YAC1BrB,KAAK,EAAE,OAAO;YACdsB,MAAM,EAAE,MAAM;YACdC,YAAY,EAAE,KAAK;YACnBC,OAAO,EAAE,SAAS;YAClBC,MAAM,EAAE,SAAS;YACjBxB,QAAQ,EAAE,QAAQ;YAClBC,UAAU,EAAE,MAAM;YAClBwB,SAAS,EAAE,gBAAgB;YAC3BC,eAAe,EAAE,QAAQ;YACzBC,UAAU,EAAE,KAAK;YACjB,QAAQ,EAAE;cACRP,eAAe,EAAE;YACnB;UACF,CAAE;UAAAhB,QAAA,EACH;QAED;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CACT;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACa,EAAA,GAvHIpE,YAAY;AAyHlB,MAAMqE,mBAAmB,GAAGA,CAAC;EAAE9D,MAAM;EAAEoC;AAAS,CAAC,KAAK;EAAA2B,EAAA;EACpD,MAAM;IAAEjE,MAAM;IAAEE,MAAM,EAAEgE;EAAc,CAAC,GAAG/E,UAAU,CAACG,WAAW,CAAC;EACjE,MAAM,CAAC6E,aAAa,EAAEC,gBAAgB,CAAC,GAAGlF,QAAQ,CAAC,IAAI,CAAC;;EAExD;EACA,MAAM+B,eAAe,GAAG5B,KAAK,CAC1B6B,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACkD,IAAI,KAAK,UAAU,CAAC,CACxCnD,MAAM,CAACC,IAAI;IAAA,IAAAmD,kBAAA;IAAA,OAAIpE,MAAM,aAANA,MAAM,wBAAAoE,kBAAA,GAANpE,MAAM,CAAEc,UAAU,cAAAsD,kBAAA,uBAAlBA,kBAAA,CAAoBlD,QAAQ,CAACD,IAAI,CAACP,EAAE,CAAC;EAAA,EAAC;EAExD,MAAM2D,mBAAmB,GAAIC,KAAK,IAAK;IACrC,IAAIA,KAAK,KAAKvD,eAAe,CAACO,MAAM,GAAG,CAAC,EAAE;IAC1C4C,gBAAgB,CAACD,aAAa,KAAKK,KAAK,GAAG,IAAI,GAAGA,KAAK,CAAC;EAC1D,CAAC;;EAED;EACA,MAAMC,SAAS,GAAG,GAAG,CAAC,CAAC;EACvB,MAAMC,UAAU,GAAG,GAAG,CAAC,CAAC;EACxB,MAAMC,WAAW,GAAG,EAAE,CAAC,CAAC;EACxB,MAAMC,YAAY,GAAG,GAAG,CAAC,CAAC;;EAE1B;EACA,MAAMC,WAAW,GAAG5D,eAAe,CAACO,MAAM,GAAGmD,WAAW,IAAIR,aAAa,KAAK,IAAI,GAAGS,YAAY,GAAG,CAAC,CAAC;;EAEtG;EACA,MAAME,YAAY,GAAGxC,QAAQ,KAAK,KAAK,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;;EAEtD;EACA,MAAMyC,kBAAkB,GAAG,CAAC;EAE5B,oBACEvF,OAAA;IAAKqC,KAAK,EAAE;MACVS,QAAQ,EAAE,UAAU;MACpB0C,KAAK,EAAE,MAAM;MACbC,GAAG,EAAE,KAAK;MACVrB,SAAS,EAAE,8BAA8BkB,YAAY,QAAQ,CAAC7D,eAAe,CAACO,MAAM,GAAG,CAAC,IAAImD,WAAW,GAAG,CAAC,MAAM;MACjH7B,KAAK,EAAE2B,SAAS,GAAG,IAAI;MACvB3C,OAAO,EAAE,MAAM;MACfE,UAAU,EAAE,YAAY;MACxBW,QAAQ,EAAE,SAAS;MACnBN,MAAM,EAAEwC,WAAW,GAAG,IAAI;MAC1BK,MAAM,EAAE;IACV,CAAE;IAAA3C,QAAA,EACCtB,eAAe,CAACkE,GAAG,CAAC,CAACvF,QAAQ,EAAE4E,KAAK,KAAK;MACxC,MAAM1E,cAAc,GAAG0E,KAAK,KAAKvD,eAAe,CAACO,MAAM,GAAG,CAAC;MAC3D,MAAM3B,UAAU,GAAGC,cAAc,IAAIqE,aAAa,KAAKK,KAAK;MAE5D,MAAMY,YAAY,GAAGZ,KAAK,GAAGG,WAAW;MACxC,IAAIU,cAAc,GAAG,CAAC;MACtB,IAAIlB,aAAa,KAAK,IAAI,IAAIK,KAAK,GAAGL,aAAa,EAAE;QACnDkB,cAAc,GAAGT,YAAY;MAC/B;MACA,MAAMU,aAAa,GAAGF,YAAY,GAAGC,cAAc;MAEnD,oBACE7F,OAAA;QAEE8D,OAAO,EAAEA,CAAA,KAAM,CAACxD,cAAc,IAAIyE,mBAAmB,CAACC,KAAK,CAAE;QAC7D3C,KAAK,EAAE;UACLiB,KAAK,EAAE2B,SAAS,GAAG,IAAI;UACvBpC,MAAM,EAAEqC,UAAU,GAAG,IAAI;UACzBlB,MAAM,EAAE,gBAAgB;UACxBC,YAAY,EAAE,KAAK;UACnBnB,QAAQ,EAAE,UAAU;UACpB2C,GAAG,EAAEK,aAAa;UAClBC,UAAU,EAAE,eAAe;UAC3BL,MAAM,EAAErF,UAAU,GAAGoB,eAAe,CAACO,MAAM,GAAGgD,KAAK;UACnD1C,OAAO,EAAE,MAAM;UACfC,aAAa,EAAE,QAAQ;UACvB2B,OAAO,EAAE,MAAM;UACf8B,SAAS,EAAE,YAAY;UACvBjC,eAAe,EAAE,oBAAoB;UACrCI,MAAM,EAAE7D,cAAc,GAAG,SAAS,GAAG;QACvC,CAAE;QAAAyC,QAAA,eAEF/C,OAAA,CAACG,YAAY;UACXC,QAAQ,EAAEA,QAAS;UACnBC,UAAU,EAAEA,UAAW;UACvBC,cAAc,EAAEA,cAAe;UAC/BC,eAAe,EAAEG,MAAM,CAACuF,QAAQ,MAAKvB,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAEuB,QAAQ,CAAC;UAC7DzF,MAAM,EAAEA,MAAO;UACfC,QAAQ,EAAEC,MAAM,CAACuF,QAAS;UAC1BvF,MAAM,EAAEA;QAAO;UAAA6C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChB;MAAC,GA3BGtD,QAAQ,CAACgB,EAAE;QAAAmC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OA4Bb,CAAC;IAEV,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACe,EAAA,CAxFID,mBAAmB;AAAA0B,GAAA,GAAnB1B,mBAAmB;AA0FzB,MAAM2B,oBAAoB,GAAGA,CAAC;EAAEzF,MAAM;EAAEoC;AAAS,CAAC,KAAK;EAAAsD,GAAA;EACrD,MAAM;IAAE5F,MAAM;IAAEE,MAAM,EAAEgE;EAAc,CAAC,GAAG/E,UAAU,CAACG,WAAW,CAAC;EACjE,MAAM,CAAC6E,aAAa,EAAEC,gBAAgB,CAAC,GAAGlF,QAAQ,CAAC,IAAI,CAAC;;EAExD;EACA,MAAM+B,eAAe,GAAG5B,KAAK,CAC1B6B,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACkD,IAAI,KAAK,UAAU,CAAC,CACxCnD,MAAM,CAACC,IAAI;IAAA,IAAA0E,mBAAA;IAAA,OAAI3F,MAAM,aAANA,MAAM,wBAAA2F,mBAAA,GAAN3F,MAAM,CAAEc,UAAU,cAAA6E,mBAAA,uBAAlBA,mBAAA,CAAoBzE,QAAQ,CAACD,IAAI,CAACP,EAAE,CAAC;EAAA,EAAC;EAExD,MAAM2D,mBAAmB,GAAIC,KAAK,IAAK;IACrC,IAAIA,KAAK,KAAKvD,eAAe,CAACO,MAAM,GAAG,CAAC,EAAE;IAC1C4C,gBAAgB,CAACD,aAAa,KAAKK,KAAK,GAAG,IAAI,GAAGA,KAAK,CAAC;EAC1D,CAAC;;EAED;EACA,MAAMC,SAAS,GAAG,GAAG,CAAC,CAAC;EACvB,MAAMC,UAAU,GAAG,GAAG,CAAC,CAAC;EACxB,MAAMC,WAAW,GAAG,EAAE,CAAC,CAAC;EACxB,MAAMC,YAAY,GAAG,GAAG,CAAC,CAAC;;EAE1B;EACA,MAAMC,WAAW,GAAG5D,eAAe,CAACO,MAAM,GAAGmD,WAAW,IAAIR,aAAa,KAAK,IAAI,GAAGS,YAAY,GAAG,CAAC,CAAC;;EAEtG;EACA,MAAME,YAAY,GAAGxC,QAAQ,KAAK,KAAK,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;;EAEtD;EACA,MAAMyC,kBAAkB,GAAG,CAAC;EAE5B,oBACEvF,OAAA;IAAKqC,KAAK,EAAE;MACVS,QAAQ,EAAE,UAAU;MACpBwD,IAAI,EAAE,MAAM;MACZb,GAAG,EAAE,KAAK;MACVrB,SAAS,EAAE,+BAA+BkB,YAAY,QAAQ,CAAC7D,eAAe,CAACO,MAAM,GAAG,CAAC,IAAImD,WAAW,GAAG,CAAC,MAAM;MAClH7B,KAAK,EAAE2B,SAAS,GAAG,IAAI;MACvB3C,OAAO,EAAE,MAAM;MACfE,UAAU,EAAE,YAAY;MACxBW,QAAQ,EAAE,SAAS;MACnBN,MAAM,EAAEwC,WAAW,GAAG,IAAI;MAC1BK,MAAM,EAAE;IACV,CAAE;IAAA3C,QAAA,EACCtB,eAAe,CAACkE,GAAG,CAAC,CAACvF,QAAQ,EAAE4E,KAAK,KAAK;MACxC,MAAM1E,cAAc,GAAG0E,KAAK,KAAKvD,eAAe,CAACO,MAAM,GAAG,CAAC;MAC3D,MAAM3B,UAAU,GAAGC,cAAc,IAAIqE,aAAa,KAAKK,KAAK;MAE5D,MAAMY,YAAY,GAAGZ,KAAK,GAAGG,WAAW;MACxC,IAAIU,cAAc,GAAG,CAAC;MACtB,IAAIlB,aAAa,KAAK,IAAI,IAAIK,KAAK,GAAGL,aAAa,EAAE;QACnDkB,cAAc,GAAGT,YAAY;MAC/B;MACA,MAAMU,aAAa,GAAGF,YAAY,GAAGC,cAAc;MAEnD,oBACE7F,OAAA;QAEE8D,OAAO,EAAEA,CAAA,KAAM,CAACxD,cAAc,IAAIyE,mBAAmB,CAACC,KAAK,CAAE;QAC7D3C,KAAK,EAAE;UACLiB,KAAK,EAAE2B,SAAS,GAAG,IAAI;UACvBpC,MAAM,EAAEqC,UAAU,GAAG,IAAI;UACzBlB,MAAM,EAAE,gBAAgB;UACxBC,YAAY,EAAE,KAAK;UACnBnB,QAAQ,EAAE,UAAU;UACpB2C,GAAG,EAAEK,aAAa;UAClBC,UAAU,EAAE,eAAe;UAC3BL,MAAM,EAAErF,UAAU,GAAGoB,eAAe,CAACO,MAAM,GAAGgD,KAAK;UACnD1C,OAAO,EAAE,MAAM;UACfC,aAAa,EAAE,QAAQ;UACvB2B,OAAO,EAAE,MAAM;UACf8B,SAAS,EAAE,YAAY;UACvBjC,eAAe,EAAE,oBAAoB;UACrCI,MAAM,EAAE7D,cAAc,GAAG,SAAS,GAAG;QACvC,CAAE;QAAAyC,QAAA,eAEF/C,OAAA,CAACG,YAAY;UACXC,QAAQ,EAAEA,QAAS;UACnBC,UAAU,EAAEA,UAAW;UACvBC,cAAc,EAAEA,cAAe;UAC/BC,eAAe,EAAEG,MAAM,CAACuF,QAAQ,MAAKvB,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAEuB,QAAQ,CAAC;UAC7DzF,MAAM,EAAEA,MAAO;UACfC,QAAQ,EAAEC,MAAM,CAACuF,QAAS;UAC1BvF,MAAM,EAAEA;QAAO;UAAA6C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChB;MAAC,GA3BGtD,QAAQ,CAACgB,EAAE;QAAAmC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OA4Bb,CAAC;IAEV,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC0C,GAAA,CAxFID,oBAAoB;AAAAI,GAAA,GAApBJ,oBAAoB;AA0F1B,MAAMK,eAAe,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC5B,MAAM,CAAC9B,aAAa,EAAEC,gBAAgB,CAAC,GAAGlF,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM;IAAEgB,MAAM;IAAEgG,SAAS;IAAEC,eAAe;IAAEnG,MAAM;IAAEoG,OAAO,GAAG,EAAE;IAAEC;EAAW,CAAC,GAAGlH,UAAU,CAACG,WAAW,CAAC;EACxG,MAAM,CAACgH,QAAQ,EAAEC,WAAW,CAAC,GAAGrH,QAAQ,CAAC,EAAE,CAAC;EAE5CE,SAAS,CAAC,MAAM;IACd,MAAMoH,aAAa,GAAIpG,CAAC,IAAK;MAC3B,IAAIA,CAAC,CAACqG,GAAG,KAAK,OAAO,EAAE;QACrB,MAAMC,QAAQ,GAAGJ,QAAQ,CAACK,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;;QAE9C;QACA,MAAMC,UAAU,GAAGH,QAAQ,CAACI,QAAQ,CAAC,WAAW,CAAC;QACjD,MAAMC,YAAY,GAAGC,KAAK,CAACC,IAAI,CAACJ,UAAU,CAAC;QAC3C,KAAK,MAAMK,KAAK,IAAIH,YAAY,EAAE;UAChC,MAAMpG,UAAU,GAAGwG,QAAQ,CAACD,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;UACzC,MAAMtH,QAAQ,GAAGP,KAAK,CAAC+H,IAAI,CAACjG,IAAI,IAAIA,IAAI,CAACP,EAAE,KAAKD,UAAU,CAAC;UAC3D,IAAIf,QAAQ,EAAE;YACZ;YACAI,MAAM,CAACU,IAAI,CAAC,gBAAgB,EAAE;cAC5BT,QAAQ,EAAEC,MAAM,CAACuF,QAAQ;cACzB9E,UAAU,EAAEA,UAAU;cACtBE,MAAM,EAAE;YACV,CAAC,CAAC;UACJ;QACF;;QAEA;QACA,IAAI6F,QAAQ,CAACtF,QAAQ,CAAC,UAAU,CAAC,IAAIsF,QAAQ,CAACtF,QAAQ,CAAC,UAAU,CAAC,EAAE;UAClE,MAAMiG,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;UAC/C,MAAMC,KAAK,GAAGH,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;QACjD;QAEAjB,WAAW,CAAC,EAAE,CAAC;MACjB,CAAC,MAAM,IAAInG,CAAC,CAACqG,GAAG,CAACS,KAAK,CAAC,aAAa,CAAC,EAAE;QACrCX,WAAW,CAACmB,IAAI,IAAIA,IAAI,GAAGtH,CAAC,CAACqG,GAAG,CAAC;MACnC;IACF,CAAC;;IAED;IACA,MAAMkB,oBAAoB,GAAGA,CAAC;MAAE1H,QAAQ;MAAEU,UAAU;MAAEE;IAAO,CAAC,KAAK;MACjEwF,UAAU,CAACuB,WAAW,IAAI;QACxB,OAAOA,WAAW,CAACzC,GAAG,CAAC0C,CAAC,IAAI;UAC1B,IAAIA,CAAC,CAACpC,QAAQ,KAAKxF,QAAQ,EAAE;YAC3B,OAAO;cACL,GAAG4H,CAAC;cACJ7G,UAAU,EAAEH,MAAM,KAAK,KAAK,GACxB,CAAC,IAAIgH,CAAC,CAAC7G,UAAU,IAAI,EAAE,CAAC,EAAEL,UAAU,CAAC,GACrC,CAACkH,CAAC,CAAC7G,UAAU,IAAI,EAAE,EAAEE,MAAM,CAACN,EAAE,IAAIA,EAAE,KAAKD,UAAU;YACzD,CAAC;UACH;UACA,OAAOkH,CAAC;QACV,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC;IAEDvH,MAAM,CAACwH,gBAAgB,CAAC,SAAS,EAAEtB,aAAa,CAAC;IACjDxG,MAAM,CAAC+H,EAAE,CAAC,iBAAiB,EAAEJ,oBAAoB,CAAC;IAElD,OAAO,MAAM;MACXrH,MAAM,CAAC0H,mBAAmB,CAAC,SAAS,EAAExB,aAAa,CAAC;MACpDxG,MAAM,CAACiI,GAAG,CAAC,iBAAiB,EAAEN,oBAAoB,CAAC;IACrD,CAAC;EACH,CAAC,EAAE,CAACrB,QAAQ,EAAEH,eAAe,EAAED,SAAS,EAAElG,MAAM,EAAEE,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEuF,QAAQ,EAAEY,UAAU,CAAC,CAAC;;EAEhF;EACA,MAAMpF,eAAe,GAAG5B,KAAK,CAC1B6B,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACkD,IAAI,KAAK,UAAU,CAAC,CACxCnD,MAAM,CAACC,IAAI;IAAA,IAAA+G,mBAAA;IAAA,OAAIhI,MAAM,aAANA,MAAM,wBAAAgI,mBAAA,GAANhI,MAAM,CAAEc,UAAU,cAAAkH,mBAAA,uBAAlBA,mBAAA,CAAoB9G,QAAQ,CAACD,IAAI,CAACP,EAAE,CAAC;EAAA,EAAC;EAExD,MAAM2D,mBAAmB,GAAIC,KAAK,IAAK;IACrC,IAAIA,KAAK,KAAKvD,eAAe,CAACO,MAAM,GAAG,CAAC,EAAE;IAC1C4C,gBAAgB,CAACD,aAAa,KAAKK,KAAK,GAAG,IAAI,GAAGA,KAAK,CAAC;EAC1D,CAAC;;EAED;EACA,MAAM2D,YAAY,GAAG/B,OAAO,CAAClF,MAAM,CAAC2G,CAAC,IAAIA,CAAC,IAAIA,CAAC,CAACpC,QAAQ,MAAKvF,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEuF,QAAQ,EAAC;EAC9E,MAAM2C,WAAW,GAAGD,YAAY,CAACE,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;EAC5C,MAAMC,YAAY,GAAGH,YAAY,CAACE,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;EAE7C,oBACE7I,OAAA,CAAAE,SAAA;IAAA6C,QAAA,gBAEE/C,OAAA;MAAKqC,KAAK,EAAE;QACVS,QAAQ,EAAE,UAAU;QACpB2C,GAAG,EAAE,MAAM;QACXa,IAAI,EAAE,KAAK;QACXlC,SAAS,EAAE,+BAA+B;QAC1CvB,MAAM,EAAE,OAAO;QACfP,OAAO,EAAE,MAAM;QACfE,UAAU,EAAE,YAAY;QACxBW,QAAQ,EAAE,SAAS;QACnB4F,SAAS,EAAE,MAAM;QACjBzF,KAAK,EAAE,OAAO;QACdb,cAAc,EAAE;MAClB,CAAE;MAAAM,QAAA,EACCtB,eAAe,CAACkE,GAAG,CAAC,CAACvF,QAAQ,EAAE4E,KAAK,KAAK;QACxC,MAAM1E,cAAc,GAAG0E,KAAK,KAAKvD,eAAe,CAACO,MAAM,GAAG,CAAC;QAC3D,MAAM3B,UAAU,GAAGC,cAAc,IAAIqE,aAAa,KAAKK,KAAK;QAC5D,MAAMY,YAAY,GAAGZ,KAAK,GAAG,EAAE;QAC/B,IAAIa,cAAc,GAAG,CAAC;QAEtB,IAAIlB,aAAa,KAAK,IAAI,IAAIK,KAAK,GAAGL,aAAa,EAAE;UACnDkB,cAAc,GAAG,GAAG;QACtB;QAEA,MAAMC,aAAa,GAAGF,YAAY,GAAGC,cAAc;QAEnD,oBACE7F,OAAA;UAEE8D,OAAO,EAAEA,CAAA,KAAM,CAACxD,cAAc,IAAIyE,mBAAmB,CAACC,KAAK,CAAE;UAC7D3C,KAAK,EAAE;YACLiB,KAAK,EAAE,OAAO;YACdT,MAAM,EAAE,OAAO;YACfmB,MAAM,EAAE,gBAAgB;YACxBC,YAAY,EAAE,MAAM;YACpBnB,QAAQ,EAAE,UAAU;YACpBwD,IAAI,EAAER,aAAa;YACnBC,UAAU,EAAE,eAAe;YAC3BL,MAAM,EAAErF,UAAU,GAAGoB,eAAe,CAACO,MAAM,GAAGgD,KAAK;YACnD1C,OAAO,EAAE,MAAM;YACfC,aAAa,EAAE,QAAQ;YACvB2B,OAAO,EAAE,MAAM;YACf8B,SAAS,EAAE,YAAY;YACvBjC,eAAe,EAAE,oBAAoB;YACrCI,MAAM,EAAE7D,cAAc,GAAG,SAAS,GAAG;UACvC,CAAE;UAAAyC,QAAA,eAEF/C,OAAA;YAAKqC,KAAK,EAAE;cACV+B,SAAS,EAAE,gBAAgB;cAC3BC,eAAe,EAAE,aAAa;cAC9BvB,QAAQ,EAAE,UAAU;cACpBQ,KAAK,EAAE,OAAO;cACdT,MAAM,EAAE,OAAO;cACf4C,GAAG,EAAE,OAAO;cACZa,IAAI,EAAE,OAAO;cACbhE,OAAO,EAAE,MAAM;cACfC,aAAa,EAAE,QAAQ;cACvBC,UAAU,EAAE,YAAY;cACxBC,cAAc,EAAE,YAAY;cAC5BC,KAAK,EAAE,MAAM;cACbC,QAAQ,EAAE,SAAS;cACnBC,UAAU,EAAE,MAAM;cAClBsB,OAAO,EAAE;YACX,CAAE;YAAAnB,QAAA,gBACA/C,OAAA;cACEqC,KAAK,EAAE;gBACLM,QAAQ,EAAE,SAAS;gBACnBK,YAAY,EAAE,MAAM;gBACpBC,SAAS,EAAE,MAAM;gBACjBC,UAAU,EAAE,QAAQ;gBACpBC,QAAQ,EAAE,QAAQ;gBAClBC,YAAY,EAAE,UAAU;gBACxBC,QAAQ,EAAE,OAAO;gBACjBC,KAAK,EAAE;cACT,CAAE;cAAAP,QAAA,EACD3C,QAAQ,CAACY;YAAI;cAAAuC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACX,CAAC,eACN1D,OAAA;cAAKqC,KAAK,EAAE;gBACVM,QAAQ,EAAE,QAAQ;gBAClBgB,OAAO,EAAE,CAAC;gBACVV,SAAS,EAAE;cACb,CAAE;cAAAF,QAAA,gBACA/C,OAAA;gBAAA+C,QAAA,GAAK,SAAO,EAAC3C,QAAQ,CAACa,IAAI;cAAA;gBAAAsC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eACjC1D,OAAA;gBAAA+C,QAAA,GAAK,SAAO,EAAC3C,QAAQ,CAACyD,IAAI;cAAA;gBAAAN,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC9B,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QAAC,GAzDDtD,QAAQ,CAACgB,EAAE;UAAAmC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OA0Db,CAAC;MAEV,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,EAGLkF,WAAW,CAACjD,GAAG,CAAC,CAACqD,UAAU,EAAEC,GAAG,kBAC/BjJ,OAAA,CAACwE,mBAAmB;MAElB9D,MAAM,EAAEsI,UAAW;MACnBlG,QAAQ,EAAEmG,GAAG,KAAK,CAAC,GAAG,KAAK,GAAG;IAAS,GAFlCD,UAAU,CAAC/C,QAAQ;MAAA1C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGzB,CACF,CAAC,EAGDoF,YAAY,CAACnD,GAAG,CAAC,CAACuD,WAAW,EAAED,GAAG,kBACjCjJ,OAAA,CAACmG,oBAAoB;MAEnBzF,MAAM,EAAEwI,WAAY;MACpBpG,QAAQ,EAAEmG,GAAG,KAAK,CAAC,GAAG,KAAK,GAAG;IAAS,GAFlCC,WAAW,CAACjD,QAAQ;MAAA1C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAG1B,CACF,CAAC;EAAA,eACF,CAAC;AAEP,CAAC;AAAC+C,GAAA,CA/LID,eAAe;AAAA2C,GAAA,GAAf3C,eAAe;AAiMrB,eAAeA,eAAe;AAAC,IAAAjC,EAAA,EAAA2B,GAAA,EAAAK,GAAA,EAAA4C,GAAA;AAAAC,YAAA,CAAA7E,EAAA;AAAA6E,YAAA,CAAAlD,GAAA;AAAAkD,YAAA,CAAA7C,GAAA;AAAA6C,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}