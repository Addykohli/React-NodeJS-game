{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\addhy\\\\Desktop\\\\Business_web\\\\client\\\\src\\\\components\\\\Board.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useRef, useState, useLayoutEffect } from 'react';\nimport { GameContext } from '../context/GameContext';\nimport boardImage from '../assets/board.png';\nimport { tiles } from '../data/tiles';\nimport './Board.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Board = () => {\n  _s();\n  const {\n    players\n  } = useContext(GameContext);\n  const containerRef = useRef(null);\n  const imgRef = useRef(null);\n  const [naturalSize, setNaturalSize] = useState({\n    w: 0,\n    h: 0\n  });\n  const [containerSize, setContainerSize] = useState({\n    w: 0,\n    h: 0\n  });\n\n  // When the board image loads, capture its natural size\n  const onImageLoad = () => {\n    if (!imgRef.current || !containerRef.current) return;\n    setNaturalSize({\n      w: imgRef.current.naturalWidth,\n      h: imgRef.current.naturalHeight\n    });\n    const rect = containerRef.current.getBoundingClientRect();\n    setContainerSize({\n      w: rect.width,\n      h: rect.height\n    });\n  };\n\n  // Update containerSize on window resize\n  useLayoutEffect(() => {\n    const handleResize = () => {\n      if (!containerRef.current) return;\n      const rect = containerRef.current.getBoundingClientRect();\n      setContainerSize({\n        w: rect.width,\n        h: rect.height\n      });\n    };\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n  const scaleX = containerSize.w / (naturalSize.w || 1);\n  const scaleY = containerSize.h / (naturalSize.h || 1);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board-container\",\n    ref: containerRef,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      ref: imgRef,\n      src: boardImage,\n      alt: \"Monopoly board\",\n      className: \"board-image\",\n      onLoad: onImageLoad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), players.map((p, i) => {\n      if (!p.piece) return null;\n      const tile = tiles.find(t => t.id === p.tileId) || {\n        position: {\n          x: 40,\n          y: 40\n        }\n      };\n      const x = tile.position.x * scaleX;\n      const y = tile.position.y * scaleY;\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        src: require(`../assets/pieces/${p.piece}.png`),\n        alt: p.name,\n        title: p.name,\n        className: \"board-piece\",\n        style: {\n          top: y + i * 12,\n          left: x + i * 12\n        }\n      }, p.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(Board, \"AQOjV2kr1fFVBBftwyPwgWbVxYc=\");\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useContext","useRef","useState","useLayoutEffect","GameContext","boardImage","tiles","jsxDEV","_jsxDEV","Board","_s","players","containerRef","imgRef","naturalSize","setNaturalSize","w","h","containerSize","setContainerSize","onImageLoad","current","naturalWidth","naturalHeight","rect","getBoundingClientRect","width","height","handleResize","window","addEventListener","removeEventListener","scaleX","scaleY","className","ref","children","src","alt","onLoad","fileName","_jsxFileName","lineNumber","columnNumber","map","p","i","piece","tile","find","t","id","tileId","position","x","y","require","name","title","style","top","left","_c","$RefreshReg$"],"sources":["C:/Users/addhy/Desktop/Business_web/client/src/components/Board.js"],"sourcesContent":["import React, { useContext, useRef, useState, useLayoutEffect } from 'react';\nimport { GameContext } from '../context/GameContext';\nimport boardImage from '../assets/board.png';\nimport { tiles } from '../data/tiles';\nimport './Board.css';\n\nconst Board = () => {\n  const { players } = useContext(GameContext);\n  const containerRef = useRef(null);\n  const imgRef = useRef(null);\n\n  const [naturalSize, setNaturalSize] = useState({ w: 0, h: 0 });\n  const [containerSize, setContainerSize] = useState({ w: 0, h: 0 });\n\n  // When the board image loads, capture its natural size\n  const onImageLoad = () => {\n    if (!imgRef.current || !containerRef.current) return;\n    setNaturalSize({\n      w: imgRef.current.naturalWidth,\n      h: imgRef.current.naturalHeight\n    });\n    const rect = containerRef.current.getBoundingClientRect();\n    setContainerSize({ w: rect.width, h: rect.height });\n  };\n\n  // Update containerSize on window resize\n  useLayoutEffect(() => {\n    const handleResize = () => {\n      if (!containerRef.current) return;\n      const rect = containerRef.current.getBoundingClientRect();\n      setContainerSize({ w: rect.width, h: rect.height });\n    };\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  const scaleX = containerSize.w / (naturalSize.w || 1);\n  const scaleY = containerSize.h / (naturalSize.h || 1);\n\n  return (\n    <div className=\"board-container\" ref={containerRef}>\n      <img\n        ref={imgRef}\n        src={boardImage}\n        alt=\"Monopoly board\"\n        className=\"board-image\"\n        onLoad={onImageLoad}\n      />\n\n      {players.map((p, i) => {\n        if (!p.piece) return null;\n        const tile = tiles.find((t) => t.id === p.tileId) || { position: { x: 40, y: 40 } };\n        const x = tile.position.x * scaleX;\n        const y = tile.position.y * scaleY;\n\n        return (\n          <img\n            key={p.name}\n            src={require(`../assets/pieces/${p.piece}.png`)}\n            alt={p.name}\n            title={p.name}\n            className=\"board-piece\"\n            style={{\n              top:  y + i * 12,\n              left: x + i * 12\n            }}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Board;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}