{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\addhy\\\\Desktop\\\\Business_web\\\\client\\\\src\\\\components\\\\DiceRoller.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport { GameContext } from '../context/GameContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DiceRoller() {\n  _s();\n  const {\n    player,\n    currentPlayerId,\n    socket,\n    diceRoll,\n    movementDone\n  } = useContext(GameContext);\n\n  // Only show to the active player\n  if (!player || player.socketId !== currentPlayerId) return null;\n\n  // Roll the dice\n  const handleRoll = () => {\n    socket.emit('rollDice');\n    // clear any previous state\n    // diceRoll will be set by GameContext → socket.on('diceResult')\n  };\n\n  // After movement, finish turn\n  const handleDone = () => {\n    socket.emit('endTurn');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'absolute',\n      top: '12%',\n      left: '50%',\n      transform: 'translateX(-50%)',\n      background: '#fff',\n      border: '2px solid #333',\n      borderRadius: '12px',\n      padding: '1rem',\n      boxShadow: '0 4px 10px rgba(0,0,0,0.2)',\n      zIndex: 1000,\n      textAlign: 'center'\n    },\n    children: [!diceRoll && !movementDone && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRoll,\n      children: \"Roll Dice\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), diceRoll && !movementDone && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        gap: '10px',\n        justifyContent: 'center',\n        margin: '0.5rem 0'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: `/dice/dice${diceRoll.die1}.png`,\n        alt: `Die ${diceRoll.die1}`,\n        width: 50,\n        style: {}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `/dice/dice${diceRoll.die2}.png`,\n        alt: `Die ${diceRoll.die2}`,\n        width: 50,\n        style: {}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), movementDone && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDone,\n      children: \"Done\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(DiceRoller, \"6BXeqm7SDtd+Z2lFna/VPmmWx4o=\");\n_c = DiceRoller;\nvar _c;\n$RefreshReg$(_c, \"DiceRoller\");","map":{"version":3,"names":["React","useContext","GameContext","jsxDEV","_jsxDEV","DiceRoller","_s","player","currentPlayerId","socket","diceRoll","movementDone","socketId","handleRoll","emit","handleDone","style","position","top","left","transform","background","border","borderRadius","padding","boxShadow","zIndex","textAlign","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","display","gap","justifyContent","margin","src","die1","alt","width","die2","_c","$RefreshReg$"],"sources":["C:/Users/addhy/Desktop/Business_web/client/src/components/DiceRoller.js"],"sourcesContent":["import React, { useContext } from 'react';\r\nimport { GameContext } from '../context/GameContext';\r\n\r\nexport default function DiceRoller() {\r\n  const {\r\n    player,\r\n    currentPlayerId,\r\n    socket,\r\n    diceRoll,\r\n    movementDone\r\n  } = useContext(GameContext);\r\n\r\n  // Only show to the active player\r\n  if (!player || player.socketId !== currentPlayerId) return null;\r\n\r\n  // Roll the dice\r\n  const handleRoll = () => {\r\n    socket.emit('rollDice');\r\n    // clear any previous state\r\n    // diceRoll will be set by GameContext → socket.on('diceResult')\r\n  };\r\n\r\n  // After movement, finish turn\r\n  const handleDone = () => {\r\n    socket.emit('endTurn');\r\n  };\r\n\r\n  return (\r\n    <div style={{\r\n      position: 'absolute',\r\n      top: '12%',\r\n      left: '50%',\r\n      transform: 'translateX(-50%)',\r\n      background: '#fff',\r\n      border: '2px solid #333',\r\n      borderRadius: '12px',\r\n      padding: '1rem',\r\n      boxShadow: '0 4px 10px rgba(0,0,0,0.2)',\r\n      zIndex: 1000,\r\n      textAlign: 'center'\r\n    }}>\r\n      {/*\r\n        1) No roll yet: show Roll button.\r\n        2) diceRoll exists & movement not done: show the two dice images.\r\n        3) movementDone true: show Done button.\r\n      */}\r\n      {!diceRoll && !movementDone && (\r\n        <button onClick={handleRoll}>Roll Dice</button>\r\n      )}\r\n\r\n      {diceRoll && !movementDone && (\r\n        <div style={{ display: 'flex', gap: '10px', justifyContent: 'center', margin: '0.5rem 0' }}>\r\n          <img\r\n            src={`/dice/dice${diceRoll.die1}.png`}\r\n            alt={`Die ${diceRoll.die1}`}\r\n            width={50}\r\n            style={{}}\r\n          />\r\n          <img\r\n            src={`/dice/dice${diceRoll.die2}.png`}\r\n            alt={`Die ${diceRoll.die2}`}\r\n            width={50}\r\n            style={{}}\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      {movementDone && (\r\n        <button onClick={handleDone}>Done</button>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,WAAW,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,eAAe,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACnC,MAAM;IACJC,MAAM;IACNC,eAAe;IACfC,MAAM;IACNC,QAAQ;IACRC;EACF,CAAC,GAAGV,UAAU,CAACC,WAAW,CAAC;;EAE3B;EACA,IAAI,CAACK,MAAM,IAAIA,MAAM,CAACK,QAAQ,KAAKJ,eAAe,EAAE,OAAO,IAAI;;EAE/D;EACA,MAAMK,UAAU,GAAGA,CAAA,KAAM;IACvBJ,MAAM,CAACK,IAAI,CAAC,UAAU,CAAC;IACvB;IACA;EACF,CAAC;;EAED;EACA,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACvBN,MAAM,CAACK,IAAI,CAAC,SAAS,CAAC;EACxB,CAAC;EAED,oBACEV,OAAA;IAAKY,KAAK,EAAE;MACVC,QAAQ,EAAE,UAAU;MACpBC,GAAG,EAAE,KAAK;MACVC,IAAI,EAAE,KAAK;MACXC,SAAS,EAAE,kBAAkB;MAC7BC,UAAU,EAAE,MAAM;MAClBC,MAAM,EAAE,gBAAgB;MACxBC,YAAY,EAAE,MAAM;MACpBC,OAAO,EAAE,MAAM;MACfC,SAAS,EAAE,4BAA4B;MACvCC,MAAM,EAAE,IAAI;MACZC,SAAS,EAAE;IACb,CAAE;IAAAC,QAAA,GAMC,CAAClB,QAAQ,IAAI,CAACC,YAAY,iBACzBP,OAAA;MAAQyB,OAAO,EAAEhB,UAAW;MAAAe,QAAA,EAAC;IAAS;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAC/C,EAEAvB,QAAQ,IAAI,CAACC,YAAY,iBACxBP,OAAA;MAAKY,KAAK,EAAE;QAAEkB,OAAO,EAAE,MAAM;QAAEC,GAAG,EAAE,MAAM;QAAEC,cAAc,EAAE,QAAQ;QAAEC,MAAM,EAAE;MAAW,CAAE;MAAAT,QAAA,gBACzFxB,OAAA;QACEkC,GAAG,EAAE,aAAa5B,QAAQ,CAAC6B,IAAI,MAAO;QACtCC,GAAG,EAAE,OAAO9B,QAAQ,CAAC6B,IAAI,EAAG;QAC5BE,KAAK,EAAE,EAAG;QACVzB,KAAK,EAAE,CAAC;MAAE;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CAAC,eACF7B,OAAA;QACEkC,GAAG,EAAE,aAAa5B,QAAQ,CAACgC,IAAI,MAAO;QACtCF,GAAG,EAAE,OAAO9B,QAAQ,CAACgC,IAAI,EAAG;QAC5BD,KAAK,EAAE,EAAG;QACVzB,KAAK,EAAE,CAAC;MAAE;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN,EAEAtB,YAAY,iBACXP,OAAA;MAAQyB,OAAO,EAAEd,UAAW;MAAAa,QAAA,EAAC;IAAI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAC1C;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC3B,EAAA,CArEuBD,UAAU;AAAAsC,EAAA,GAAVtC,UAAU;AAAA,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}