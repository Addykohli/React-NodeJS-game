{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\addhy\\\\Desktop\\\\Business_web - Copy (2)\\\\client\\\\src\\\\components\\\\TopPropertyDisplay.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport { tiles } from '../data/tiles';\nimport { GameContext } from '../context/GameContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TopPropertyDisplay = () => {\n  _s();\n  const [expandedIndex, setExpandedIndex] = useState(null);\n  const {\n    players,\n    player: currentPlayer\n  } = useContext(GameContext);\n\n  // Get all players except the current player\n  const otherPlayers = players.filter(p => p.socketId !== (currentPlayer === null || currentPlayer === void 0 ? void 0 : currentPlayer.socketId));\n\n  // Get positions based on number of players (matching PlayerStats logic)\n  const getPositions = numPlayers => {\n    switch (numPlayers) {\n      case 3:\n        return [{\n          left: '50%'\n        }];\n      case 4:\n        return [{\n          left: '30%'\n        }, {\n          left: '70%'\n        }];\n      case 5:\n        return [{\n          left: '50%'\n        }];\n      case 6:\n        return [{\n          left: '30%'\n        }, {\n          left: '70%'\n        }];\n      case 7:\n        return [{\n          left: '15%'\n        }, {\n          left: '50%'\n        }, {\n          left: '85%'\n        }];\n      default:\n        return [];\n    }\n  };\n\n  // Get only the players that should appear at the top\n  const getTopPlayers = (players, totalPlayers) => {\n    switch (totalPlayers) {\n      case 3:\n        return players.slice(2, 3);\n      case 4:\n        return players.slice(2, 4);\n      case 5:\n        return players.slice(4, 5);\n      case 6:\n        return players.slice(4, 6);\n      case 7:\n        return players.slice(4, 7);\n      default:\n        return [];\n    }\n  };\n  const topPlayers = getTopPlayers(otherPlayers, otherPlayers.length);\n  const positions = getPositions(otherPlayers.length);\n\n  // Reduced dimensions (70% of original)\n  const cardWidth = 147; // 70% of 210\n  const cardHeight = 196; // 70% of 280\n  const cardOverlap = 39; // 70% of 56\n  const expandOffset = 108; // 70% of 154\n  const stackWidth = cardWidth + cardOverlap * 4; // Width for each player's stack\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'absolute',\n      top: '-190px',\n      // Position relative to the board's top, moved 5px down from -200px\n      left: '50%',\n      transform: 'translateX(-50%)',\n      height: cardHeight + 'px',\n      display: 'flex',\n      alignItems: 'flex-start',\n      overflow: 'visible',\n      width: '1000px',\n      justifyContent: 'space-around',\n      zIndex: 1\n    },\n    children: topPlayers.map((player, playerIndex) => {\n      // Get player's properties\n      const ownedProperties = tiles.filter(tile => tile.type === 'property').filter(tile => {\n        var _player$properties;\n        return player === null || player === void 0 ? void 0 : (_player$properties = player.properties) === null || _player$properties === void 0 ? void 0 : _player$properties.includes(tile.id);\n      });\n      const position = positions[playerIndex];\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          left: position.left,\n          transform: 'translateX(-50%)',\n          width: stackWidth + 'px',\n          height: '100%',\n          display: 'flex',\n          alignItems: 'flex-start'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'absolute',\n            top: '100%',\n            left: '50%',\n            transform: 'translateX(-50%)',\n            backgroundColor: 'rgba(0, 0, 0, 0.7)',\n            color: '#fff',\n            padding: '4px 8px',\n            borderRadius: '4px',\n            whiteSpace: 'nowrap',\n            fontSize: '0.9rem',\n            fontWeight: 'bold',\n            zIndex: 4,\n            marginTop: '4px'\n          },\n          children: player.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), ownedProperties.map((property, index) => {\n          const isLastProperty = index === ownedProperties.length - 1;\n          const isExpanded = isLastProperty || expandedIndex === index;\n\n          // Calculate base position (never changes)\n          const basePosition = index * cardOverlap;\n\n          // Calculate additional offset based on expanded state\n          let expandedOffset = 0;\n          if (expandedIndex !== null) {\n            // If there's an expanded card\n            if (index > expandedIndex) {\n              expandedOffset = expandOffset;\n            }\n          }\n\n          // Calculate final position\n          const finalPosition = basePosition + expandedOffset;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => !isLastProperty && setExpandedIndex(expandedIndex === index ? null : index),\n            style: {\n              width: cardWidth + 'px',\n              height: cardHeight + 'px',\n              border: '2px solid #666',\n              borderRadius: '8px',\n              position: 'absolute',\n              left: finalPosition,\n              transition: 'all 0.3s ease',\n              zIndex: isExpanded ? ownedProperties.length : index,\n              display: 'flex',\n              flexDirection: 'column',\n              padding: '10px',\n              boxSizing: 'border-box',\n              backgroundColor: 'rgb(173, 216, 230)',\n              cursor: isLastProperty ? 'default' : 'pointer'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                transform: 'rotate(-90deg)',\n                transformOrigin: 'left center',\n                position: 'absolute',\n                width: cardHeight + 'px',\n                height: cardWidth + 'px',\n                top: cardHeight / 2 + 'px',\n                left: cardWidth / 2 + 'px',\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'flex-start',\n                justifyContent: 'flex-start',\n                color: '#333',\n                fontSize: '1.2rem',\n                fontWeight: 'bold',\n                padding: '10px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: '1.4rem',\n                  marginBottom: '10px',\n                  textAlign: 'left',\n                  whiteSpace: 'nowrap',\n                  overflow: 'hidden',\n                  textOverflow: 'ellipsis',\n                  maxWidth: '176px',\n                  width: '100%'\n                },\n                children: property.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: '1rem',\n                  opacity: isExpanded ? 1 : 0,\n                  transition: 'opacity 0.3s ease',\n                  textAlign: 'left'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"Cost: $\", property.cost]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"Rent: $\", property.rent]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 19\n            }, this)\n          }, property.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 17\n          }, this);\n        })]\n      }, player.socketId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(TopPropertyDisplay, \"RBQYeiI0crfGKrby8hWkcUJVjAE=\");\n_c = TopPropertyDisplay;\nexport default TopPropertyDisplay;\nvar _c;\n$RefreshReg$(_c, \"TopPropertyDisplay\");","map":{"version":3,"names":["React","useState","useContext","tiles","GameContext","jsxDEV","_jsxDEV","TopPropertyDisplay","_s","expandedIndex","setExpandedIndex","players","player","currentPlayer","otherPlayers","filter","p","socketId","getPositions","numPlayers","left","getTopPlayers","totalPlayers","slice","topPlayers","length","positions","cardWidth","cardHeight","cardOverlap","expandOffset","stackWidth","style","position","top","transform","height","display","alignItems","overflow","width","justifyContent","zIndex","children","map","playerIndex","ownedProperties","tile","type","_player$properties","properties","includes","id","backgroundColor","color","padding","borderRadius","whiteSpace","fontSize","fontWeight","marginTop","name","fileName","_jsxFileName","lineNumber","columnNumber","property","index","isLastProperty","isExpanded","basePosition","expandedOffset","finalPosition","onClick","border","transition","flexDirection","boxSizing","cursor","transformOrigin","marginBottom","textAlign","textOverflow","maxWidth","opacity","cost","rent","_c","$RefreshReg$"],"sources":["C:/Users/addhy/Desktop/Business_web - Copy (2)/client/src/components/TopPropertyDisplay.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\nimport { tiles } from '../data/tiles';\nimport { GameContext } from '../context/GameContext';\n\nconst TopPropertyDisplay = () => {\n  const [expandedIndex, setExpandedIndex] = useState(null);\n  const { players, player: currentPlayer } = useContext(GameContext);\n\n  // Get all players except the current player\n  const otherPlayers = players.filter(p => p.socketId !== currentPlayer?.socketId);\n  \n  // Get positions based on number of players (matching PlayerStats logic)\n  const getPositions = (numPlayers) => {\n    switch(numPlayers) {\n      case 3: return [{ left: '50%' }];\n      case 4: return [{ left: '30%' }, { left: '70%' }];\n      case 5: return [{ left: '50%' }];\n      case 6: return [{ left: '30%' }, { left: '70%' }];\n      case 7: return [{ left: '15%' }, { left: '50%' }, { left: '85%' }];\n      default: return [];\n    }\n  };\n\n  // Get only the players that should appear at the top\n  const getTopPlayers = (players, totalPlayers) => {\n    switch(totalPlayers) {\n      case 3: return players.slice(2, 3);\n      case 4: return players.slice(2, 4);\n      case 5: return players.slice(4, 5);\n      case 6: return players.slice(4, 6);\n      case 7: return players.slice(4, 7);\n      default: return [];\n    }\n  };\n\n  const topPlayers = getTopPlayers(otherPlayers, otherPlayers.length);\n  const positions = getPositions(otherPlayers.length);\n\n  // Reduced dimensions (70% of original)\n  const cardWidth = 147; // 70% of 210\n  const cardHeight = 196; // 70% of 280\n  const cardOverlap = 39; // 70% of 56\n  const expandOffset = 108; // 70% of 154\n  const stackWidth = cardWidth + (cardOverlap * 4); // Width for each player's stack\n\n  return (\n    <div style={{\n      position: 'absolute',\n      top: '-190px', // Position relative to the board's top, moved 5px down from -200px\n      left: '50%',\n      transform: 'translateX(-50%)',\n      height: cardHeight + 'px',\n      display: 'flex',\n      alignItems: 'flex-start',\n      overflow: 'visible',\n      width: '1000px',\n      justifyContent: 'space-around',\n      zIndex: 1\n    }}>\n      {topPlayers.map((player, playerIndex) => {\n        // Get player's properties\n        const ownedProperties = tiles\n          .filter(tile => tile.type === 'property')\n          .filter(tile => player?.properties?.includes(tile.id));\n\n        const position = positions[playerIndex];\n\n        return (\n          <div key={player.socketId} style={{\n            position: 'absolute',\n            left: position.left,\n            transform: 'translateX(-50%)',\n            width: stackWidth + 'px',\n            height: '100%',\n            display: 'flex',\n            alignItems: 'flex-start'\n          }}>\n            {/* Player name label */}\n            <div style={{\n              position: 'absolute',\n              top: '100%',\n              left: '50%',\n              transform: 'translateX(-50%)',\n              backgroundColor: 'rgba(0, 0, 0, 0.7)',\n              color: '#fff',\n              padding: '4px 8px',\n              borderRadius: '4px',\n              whiteSpace: 'nowrap',\n              fontSize: '0.9rem',\n              fontWeight: 'bold',\n              zIndex: 4,\n              marginTop: '4px'\n            }}>\n              {player.name}\n            </div>\n\n            {ownedProperties.map((property, index) => {\n              const isLastProperty = index === ownedProperties.length - 1;\n              const isExpanded = isLastProperty || expandedIndex === index;\n              \n              // Calculate base position (never changes)\n              const basePosition = index * cardOverlap;\n              \n              // Calculate additional offset based on expanded state\n              let expandedOffset = 0;\n              \n              if (expandedIndex !== null) {\n                // If there's an expanded card\n                if (index > expandedIndex) {\n                  expandedOffset = expandOffset;\n                }\n              }\n\n              // Calculate final position\n              const finalPosition = basePosition + expandedOffset;\n              \n              return (\n                <div\n                  key={property.id}\n                  onClick={() => !isLastProperty && setExpandedIndex(expandedIndex === index ? null : index)}\n                  style={{\n                    width: cardWidth + 'px',\n                    height: cardHeight + 'px',\n                    border: '2px solid #666',\n                    borderRadius: '8px',\n                    position: 'absolute',\n                    left: finalPosition,\n                    transition: 'all 0.3s ease',\n                    zIndex: isExpanded ? ownedProperties.length : index,\n                    display: 'flex',\n                    flexDirection: 'column',\n                    padding: '10px',\n                    boxSizing: 'border-box',\n                    backgroundColor: 'rgb(173, 216, 230)',\n                    cursor: isLastProperty ? 'default' : 'pointer'\n                  }}\n                >\n                  <div style={{\n                    transform: 'rotate(-90deg)',\n                    transformOrigin: 'left center',\n                    position: 'absolute',\n                    width: cardHeight + 'px',\n                    height: cardWidth + 'px',\n                    top: cardHeight / 2 + 'px',\n                    left: cardWidth / 2 + 'px',\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'flex-start',\n                    justifyContent: 'flex-start',\n                    color: '#333',\n                    fontSize: '1.2rem',\n                    fontWeight: 'bold',\n                    padding: '10px'\n                  }}>\n                    <div style={{\n                      fontSize: '1.4rem',\n                      marginBottom: '10px',\n                      textAlign: 'left',\n                      whiteSpace: 'nowrap',\n                      overflow: 'hidden',\n                      textOverflow: 'ellipsis',\n                      maxWidth: '176px',\n                      width: '100%'\n                    }}>\n                      {property.name}\n                    </div>\n                    <div style={{\n                      fontSize: '1rem',\n                      opacity: isExpanded ? 1 : 0,\n                      transition: 'opacity 0.3s ease',\n                      textAlign: 'left'\n                    }}>\n                      <div>Cost: ${property.cost}</div>\n                      <div>Rent: ${property.rent}</div>\n                    </div>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default TopPropertyDisplay; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}