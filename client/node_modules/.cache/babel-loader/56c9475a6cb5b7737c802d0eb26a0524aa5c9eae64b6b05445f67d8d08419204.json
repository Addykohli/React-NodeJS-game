{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\addhy\\\\Desktop\\\\Business_web - Copy (2)\\\\client\\\\src\\\\context\\\\GameContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport socket from '../socket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GameContext = /*#__PURE__*/createContext();\nexport function GameProvider({\n  children\n}) {\n  _s();\n  const [player, setPlayer] = useState(null);\n  const [players, setPlayers] = useState([]);\n  const [currentPlayerId, setCurrentPlayerId] = useState(null);\n  const [sessionId, setSessionId] = useState(null);\n  const [gameState, setGameState] = useState('lobby');\n\n  // dice + movement flags\n  const [diceRoll, setDiceRoll] = useState(null);\n  const [movementDone, setMovementDone] = useState(false);\n\n  // buy/rent UI\n  const [insufficientFunds, setInsufficientFunds] = useState(false);\n  const [rentNotification, setRentNotification] = useState(null);\n  useEffect(() => {\n    // LOBBY UPDATE\n    socket.on('lobbyUpdate', updated => {\n      setPlayers(updated);\n      const me = updated.find(p => p.socketId === socket.id);\n      if (me) setPlayer(me);\n    });\n\n    // GAME START\n    socket.on('gameStart', ({\n      players: ps,\n      sessionId: sid,\n      currentPlayerId: cid\n    }) => {\n      setPlayers(ps);\n      setSessionId(sid);\n      setGameState('playing');\n      setCurrentPlayerId(cid);\n      setDiceRoll(null);\n      setMovementDone(false);\n      setInsufficientFunds(false);\n      setRentNotification(null);\n    });\n\n    // TURN ENDED\n    socket.on('turnEnded', ({\n      nextPlayerId\n    }) => {\n      setCurrentPlayerId(nextPlayerId);\n      setDiceRoll(null);\n      setMovementDone(false);\n      setInsufficientFunds(false);\n      setRentNotification(null);\n    });\n\n    // DICE RESULT\n    socket.on('diceResult', ({\n      playerId,\n      die1,\n      die2,\n      total\n    }) => {\n      setDiceRoll({\n        playerId,\n        die1,\n        die2,\n        total\n      });\n    });\n\n    // TILE MOVED\n    socket.on('playerMoved', ({\n      playerId,\n      tileId\n    }) => {\n      setPlayers(prev => prev.map(p => p.socketId === playerId ? {\n        ...p,\n        tileId\n      } : p));\n    });\n\n    // MOVEMENT DONE\n    socket.on('movementDone', () => {\n      setMovementDone(true);\n    });\n\n    // INSUFFICIENT FUNDS\n    socket.on('insufficientFunds', () => {\n      setInsufficientFunds(true);\n    });\n\n    // RENT PAID EVENT\n    socket.on('rentPaid', rentData => {\n      console.log('[GameContext] Rent paid:', rentData);\n      setRentNotification(rentData);\n      // Auto-clear notification after 5 seconds\n      setTimeout(() => setRentNotification(null), 5000);\n    });\n\n    // PLAYERS UPDATED (after rent payment)\n    socket.on('playersUpdated', updatedPlayers => {\n      console.log('[GameContext] Players updated:', updatedPlayers);\n      setPlayers(updatedPlayers);\n      const me = updatedPlayers.find(p => p.socketId === socket.id);\n      if (me) setPlayer(me);\n    });\n    return () => {\n      socket.off('lobbyUpdate');\n      socket.off('gameStart');\n      socket.off('turnEnded');\n      socket.off('diceResult');\n      socket.off('playerMoved');\n      socket.off('movementDone');\n      socket.off('insufficientFunds');\n      socket.off('rentPaid');\n      socket.off('playersUpdated');\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(GameContext.Provider, {\n    value: {\n      player,\n      setPlayer,\n      players,\n      setPlayers,\n      currentPlayerId,\n      setCurrentPlayerId,\n      sessionId,\n      setSessionId,\n      socket,\n      gameState,\n      setGameState,\n      diceRoll,\n      setDiceRoll,\n      movementDone,\n      setMovementDone,\n      insufficientFunds,\n      setInsufficientFunds,\n      rentNotification,\n      setRentNotification\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n_s(GameProvider, \"dCucSDYAuraBTNFwqYM7qwoYW88=\");\n_c = GameProvider;\nvar _c;\n$RefreshReg$(_c, \"GameProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","socket","jsxDEV","_jsxDEV","GameContext","GameProvider","children","_s","player","setPlayer","players","setPlayers","currentPlayerId","setCurrentPlayerId","sessionId","setSessionId","gameState","setGameState","diceRoll","setDiceRoll","movementDone","setMovementDone","insufficientFunds","setInsufficientFunds","rentNotification","setRentNotification","on","updated","me","find","p","socketId","id","ps","sid","cid","nextPlayerId","playerId","die1","die2","total","tileId","prev","map","rentData","console","log","setTimeout","updatedPlayers","off","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/addhy/Desktop/Business_web - Copy (2)/client/src/context/GameContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nimport socket from '../socket';\r\n\r\nexport const GameContext = createContext();\r\n\r\nexport function GameProvider({ children }) {\r\n  const [player, setPlayer]               = useState(null);\r\n  const [players, setPlayers]             = useState([]);\r\n  const [currentPlayerId, setCurrentPlayerId] = useState(null);\r\n  const [sessionId, setSessionId]         = useState(null);\r\n  const [gameState, setGameState]         = useState('lobby');\r\n\r\n  // dice + movement flags\r\n  const [diceRoll, setDiceRoll]           = useState(null);\r\n  const [movementDone, setMovementDone]   = useState(false);\r\n\r\n  // buy/rent UI\r\n  const [insufficientFunds, setInsufficientFunds] = useState(false);\r\n  const [rentNotification, setRentNotification] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // LOBBY UPDATE\r\n    socket.on('lobbyUpdate', updated => {\r\n      setPlayers(updated);\r\n      const me = updated.find(p => p.socketId === socket.id);\r\n      if (me) setPlayer(me);\r\n    });\r\n\r\n    // GAME START\r\n    socket.on('gameStart', ({ players: ps, sessionId: sid, currentPlayerId: cid }) => {\r\n      setPlayers(ps);\r\n      setSessionId(sid);\r\n      setGameState('playing');\r\n      setCurrentPlayerId(cid);\r\n      setDiceRoll(null);\r\n      setMovementDone(false);\r\n      setInsufficientFunds(false);\r\n      setRentNotification(null);\r\n    });\r\n\r\n    // TURN ENDED\r\n    socket.on('turnEnded', ({ nextPlayerId }) => {\r\n      setCurrentPlayerId(nextPlayerId);\r\n      setDiceRoll(null);\r\n      setMovementDone(false);\r\n      setInsufficientFunds(false);\r\n      setRentNotification(null);\r\n    });\r\n\r\n    // DICE RESULT\r\n    socket.on('diceResult', ({ playerId, die1, die2, total }) => {\r\n      setDiceRoll({ playerId, die1, die2, total });\r\n    });\r\n\r\n    // TILE MOVED\r\n    socket.on('playerMoved', ({ playerId, tileId }) => {\r\n      setPlayers(prev =>\r\n        prev.map(p => p.socketId === playerId ? { ...p, tileId } : p)\r\n      );\r\n    });\r\n\r\n    // MOVEMENT DONE\r\n    socket.on('movementDone', () => {\r\n      setMovementDone(true);\r\n    });\r\n\r\n    // INSUFFICIENT FUNDS\r\n    socket.on('insufficientFunds', () => {\r\n      setInsufficientFunds(true);\r\n    });\r\n\r\n    // RENT PAID EVENT\r\n    socket.on('rentPaid', (rentData) => {\r\n      console.log('[GameContext] Rent paid:', rentData);\r\n      setRentNotification(rentData);\r\n      // Auto-clear notification after 5 seconds\r\n      setTimeout(() => setRentNotification(null), 5000);\r\n    });\r\n\r\n    // PLAYERS UPDATED (after rent payment)\r\n    socket.on('playersUpdated', (updatedPlayers) => {\r\n      console.log('[GameContext] Players updated:', updatedPlayers);\r\n      setPlayers(updatedPlayers);\r\n      const me = updatedPlayers.find(p => p.socketId === socket.id);\r\n      if (me) setPlayer(me);\r\n    });\r\n\r\n    return () => {\r\n      socket.off('lobbyUpdate');\r\n      socket.off('gameStart');\r\n      socket.off('turnEnded');\r\n      socket.off('diceResult');\r\n      socket.off('playerMoved');\r\n      socket.off('movementDone');\r\n      socket.off('insufficientFunds');\r\n      socket.off('rentPaid');\r\n      socket.off('playersUpdated');\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <GameContext.Provider\r\n      value={{\r\n        player,\r\n        setPlayer,\r\n        players,\r\n        setPlayers,\r\n        currentPlayerId,\r\n        setCurrentPlayerId,\r\n        sessionId,\r\n        setSessionId,\r\n        socket,\r\n        gameState,\r\n        setGameState,\r\n        diceRoll,\r\n        setDiceRoll,\r\n        movementDone,\r\n        setMovementDone,\r\n        insufficientFunds,\r\n        setInsufficientFunds,\r\n        rentNotification,\r\n        setRentNotification,\r\n      }}\r\n    >\r\n      {children}\r\n    </GameContext.Provider>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}