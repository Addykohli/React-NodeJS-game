{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\addhy\\\\Desktop\\\\Business_web - Copy (2)\\\\client\\\\src\\\\components\\\\TopPropertyDisplay.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport { tiles } from '../data/tiles';\nimport { GameContext } from '../context/GameContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TopPropertyDisplay = () => {\n  _s();\n  const [expandedIndex, setExpandedIndex] = useState(null);\n  const {\n    players,\n    player: currentPlayer\n  } = useContext(GameContext);\n\n  // Get all players except the current player\n  const otherPlayers = players.filter(p => p.socketId !== (currentPlayer === null || currentPlayer === void 0 ? void 0 : currentPlayer.socketId));\n\n  // Take the first half of other players (these will appear above the board)\n  const topPlayers = otherPlayers.slice(0, Math.floor(otherPlayers.length / 2));\n\n  // Calculate width for each player's property stack\n  const stackWidth = 800 / Math.max(1, topPlayers.length); // 800px is total width\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'absolute',\n      bottom: '100%',\n      left: '50%',\n      transform: 'translateX(-50%)',\n      height: '280px',\n      display: 'flex',\n      alignItems: 'flex-end',\n      overflow: 'visible',\n      marginBottom: '-3px',\n      width: '800px',\n      justifyContent: 'space-around'\n    },\n    children: topPlayers.map((player, playerIndex) => {\n      // Get player's properties\n      const ownedProperties = tiles.filter(tile => tile.type === 'property').filter(tile => {\n        var _player$properties;\n        return player === null || player === void 0 ? void 0 : (_player$properties = player.properties) === null || _player$properties === void 0 ? void 0 : _player$properties.includes(tile.id);\n      });\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: `${stackWidth}px`,\n          height: '100%',\n          display: 'flex',\n          alignItems: 'flex-end',\n          position: 'relative'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'absolute',\n            bottom: '100%',\n            left: '50%',\n            transform: 'translateX(-50%)',\n            backgroundColor: 'rgba(0, 0, 0, 0.7)',\n            color: '#fff',\n            padding: '4px 8px',\n            borderRadius: '4px',\n            marginBottom: '8px',\n            whiteSpace: 'nowrap',\n            fontSize: '1.2rem',\n            fontWeight: 'bold',\n            zIndex: 100\n          },\n          children: player.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), ownedProperties.map((property, index) => {\n          const isLastProperty = index === ownedProperties.length - 1;\n          const isExpanded = isLastProperty || expandedIndex === index;\n\n          // Calculate base position (never changes)\n          const basePosition = index * 56;\n\n          // Calculate additional offset based on expanded state\n          let expandedOffset = 0;\n          if (expandedIndex !== null) {\n            // If there's an expanded card\n            if (index > expandedIndex) {\n              // Cards after the expanded one move right by the full width of a card (210px) minus the base overlap (56px)\n              expandedOffset = 154;\n            }\n          }\n\n          // Calculate final position\n          const finalPosition = basePosition + expandedOffset;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => !isLastProperty && setExpandedIndex(expandedIndex === index ? null : index),\n            style: {\n              width: '210px',\n              height: '280px',\n              border: '2px solid #666',\n              borderRadius: '12px',\n              position: 'absolute',\n              left: finalPosition,\n              transition: 'all 0.3s ease',\n              zIndex: isExpanded ? ownedProperties.length : index,\n              display: 'flex',\n              flexDirection: 'column',\n              padding: '14px',\n              boxSizing: 'border-box',\n              backgroundColor: 'rgb(173, 216, 230)',\n              cursor: isLastProperty ? 'default' : 'pointer',\n              transform: 'rotate(180deg)' // Flip cards upside down for top display\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                transform: 'rotate(90deg)',\n                // Adjust text rotation for upside-down cards\n                transformOrigin: 'left center',\n                position: 'absolute',\n                width: '280px',\n                height: '210px',\n                top: '140px',\n                left: '105px',\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'flex-start',\n                justifyContent: 'flex-start',\n                color: '#333',\n                fontSize: '1.68rem',\n                fontWeight: 'bold',\n                padding: '14px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: '1.96rem',\n                  marginBottom: '14px',\n                  textAlign: 'left',\n                  whiteSpace: 'nowrap',\n                  overflow: 'hidden',\n                  textOverflow: 'ellipsis',\n                  maxWidth: '252px',\n                  width: '100%'\n                },\n                children: property.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: '1.4rem',\n                  opacity: isExpanded ? 1 : 0,\n                  transition: 'opacity 0.3s ease',\n                  textAlign: 'center'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"Cost: $\", property.cost]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"Rent: $\", property.rent]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 19\n            }, this)\n          }, property.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }, this);\n        })]\n      }, player.socketId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(TopPropertyDisplay, \"RBQYeiI0crfGKrby8hWkcUJVjAE=\");\n_c = TopPropertyDisplay;\nexport default TopPropertyDisplay;\nvar _c;\n$RefreshReg$(_c, \"TopPropertyDisplay\");","map":{"version":3,"names":["React","useState","useContext","tiles","GameContext","jsxDEV","_jsxDEV","TopPropertyDisplay","_s","expandedIndex","setExpandedIndex","players","player","currentPlayer","otherPlayers","filter","p","socketId","topPlayers","slice","Math","floor","length","stackWidth","max","style","position","bottom","left","transform","height","display","alignItems","overflow","marginBottom","width","justifyContent","children","map","playerIndex","ownedProperties","tile","type","_player$properties","properties","includes","id","backgroundColor","color","padding","borderRadius","whiteSpace","fontSize","fontWeight","zIndex","name","fileName","_jsxFileName","lineNumber","columnNumber","property","index","isLastProperty","isExpanded","basePosition","expandedOffset","finalPosition","onClick","border","transition","flexDirection","boxSizing","cursor","transformOrigin","top","textAlign","textOverflow","maxWidth","opacity","cost","rent","_c","$RefreshReg$"],"sources":["C:/Users/addhy/Desktop/Business_web - Copy (2)/client/src/components/TopPropertyDisplay.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport { tiles } from '../data/tiles';\r\nimport { GameContext } from '../context/GameContext';\r\n\r\nconst TopPropertyDisplay = () => {\r\n  const [expandedIndex, setExpandedIndex] = useState(null);\r\n  const { players, player: currentPlayer } = useContext(GameContext);\r\n\r\n  // Get all players except the current player\r\n  const otherPlayers = players.filter(p => p.socketId !== currentPlayer?.socketId);\r\n  \r\n  // Take the first half of other players (these will appear above the board)\r\n  const topPlayers = otherPlayers.slice(0, Math.floor(otherPlayers.length / 2));\r\n\r\n  // Calculate width for each player's property stack\r\n  const stackWidth = 800 / Math.max(1, topPlayers.length); // 800px is total width\r\n\r\n  return (\r\n    <div style={{\r\n      position: 'absolute',\r\n      bottom: '100%',\r\n      left: '50%',\r\n      transform: 'translateX(-50%)',\r\n      height: '280px',\r\n      display: 'flex',\r\n      alignItems: 'flex-end',\r\n      overflow: 'visible',\r\n      marginBottom: '-3px',\r\n      width: '800px',\r\n      justifyContent: 'space-around'\r\n    }}>\r\n      {topPlayers.map((player, playerIndex) => {\r\n        // Get player's properties\r\n        const ownedProperties = tiles\r\n          .filter(tile => tile.type === 'property')\r\n          .filter(tile => player?.properties?.includes(tile.id));\r\n\r\n        return (\r\n          <div key={player.socketId} style={{\r\n            width: `${stackWidth}px`,\r\n            height: '100%',\r\n            display: 'flex',\r\n            alignItems: 'flex-end',\r\n            position: 'relative'\r\n          }}>\r\n            {/* Player name label */}\r\n            <div style={{\r\n              position: 'absolute',\r\n              bottom: '100%',\r\n              left: '50%',\r\n              transform: 'translateX(-50%)',\r\n              backgroundColor: 'rgba(0, 0, 0, 0.7)',\r\n              color: '#fff',\r\n              padding: '4px 8px',\r\n              borderRadius: '4px',\r\n              marginBottom: '8px',\r\n              whiteSpace: 'nowrap',\r\n              fontSize: '1.2rem',\r\n              fontWeight: 'bold',\r\n              zIndex: 100\r\n            }}>\r\n              {player.name}\r\n            </div>\r\n\r\n            {ownedProperties.map((property, index) => {\r\n              const isLastProperty = index === ownedProperties.length - 1;\r\n              const isExpanded = isLastProperty || expandedIndex === index;\r\n              \r\n              // Calculate base position (never changes)\r\n              const basePosition = index * 56;\r\n              \r\n              // Calculate additional offset based on expanded state\r\n              let expandedOffset = 0;\r\n              \r\n              if (expandedIndex !== null) {\r\n                // If there's an expanded card\r\n                if (index > expandedIndex) {\r\n                  // Cards after the expanded one move right by the full width of a card (210px) minus the base overlap (56px)\r\n                  expandedOffset = 154;\r\n                }\r\n              }\r\n\r\n              // Calculate final position\r\n              const finalPosition = basePosition + expandedOffset;\r\n              \r\n              return (\r\n                <div\r\n                  key={property.id}\r\n                  onClick={() => !isLastProperty && setExpandedIndex(expandedIndex === index ? null : index)}\r\n                  style={{\r\n                    width: '210px',\r\n                    height: '280px',\r\n                    border: '2px solid #666',\r\n                    borderRadius: '12px',\r\n                    position: 'absolute',\r\n                    left: finalPosition,\r\n                    transition: 'all 0.3s ease',\r\n                    zIndex: isExpanded ? ownedProperties.length : index,\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    padding: '14px',\r\n                    boxSizing: 'border-box',\r\n                    backgroundColor: 'rgb(173, 216, 230)',\r\n                    cursor: isLastProperty ? 'default' : 'pointer',\r\n                    transform: 'rotate(180deg)' // Flip cards upside down for top display\r\n                  }}\r\n                >\r\n                  <div style={{\r\n                    transform: 'rotate(90deg)', // Adjust text rotation for upside-down cards\r\n                    transformOrigin: 'left center',\r\n                    position: 'absolute',\r\n                    width: '280px',\r\n                    height: '210px',\r\n                    top: '140px',\r\n                    left: '105px',\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    alignItems: 'flex-start',\r\n                    justifyContent: 'flex-start',\r\n                    color: '#333',\r\n                    fontSize: '1.68rem',\r\n                    fontWeight: 'bold',\r\n                    padding: '14px'\r\n                  }}>\r\n                    <div style={{\r\n                      fontSize: '1.96rem',\r\n                      marginBottom: '14px',\r\n                      textAlign: 'left',\r\n                      whiteSpace: 'nowrap',\r\n                      overflow: 'hidden',\r\n                      textOverflow: 'ellipsis',\r\n                      maxWidth: '252px',\r\n                      width: '100%'\r\n                    }}>\r\n                      {property.name}\r\n                    </div>\r\n                    <div style={{\r\n                      fontSize: '1.4rem',\r\n                      opacity: isExpanded ? 1 : 0,\r\n                      transition: 'opacity 0.3s ease',\r\n                      textAlign: 'center'\r\n                    }}>\r\n                      <div>Cost: ${property.cost}</div>\r\n                      <div>Rent: ${property.rent}</div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopPropertyDisplay; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}