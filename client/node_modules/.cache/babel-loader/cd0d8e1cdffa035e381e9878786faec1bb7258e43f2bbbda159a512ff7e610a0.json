{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\addhy\\\\Desktop\\\\Business_web\\\\client\\\\src\\\\context\\\\GameContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport socket from '../socket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GameContext = /*#__PURE__*/createContext();\nexport function GameProvider({\n  children\n}) {\n  _s();\n  const [player, setPlayer] = useState(null);\n  const [players, setPlayers] = useState([]);\n  const [currentPlayerId, setCurrentPlayerId] = useState(null);\n  const [sessionId, setSessionId] = useState(null);\n  const [gameState, setGameState] = useState('lobby');\n  useEffect(() => {\n    socket.on('lobbyUpdate', newPlayers => {\n      setPlayers(newPlayers);\n      console.log(\"[GameContext] Received lobbyUpdate:\", newPlayers);\n    });\n    socket.on('gameStart', ({\n      players: ps,\n      sessionId: sid,\n      currentPlayerId\n    }) => {\n      setPlayers(ps);\n      setSessionId(sid);\n      setGameState('playing');\n      setCurrentPlayerId(currentPlayerId); // USE THE VALUE FROM SERVER!\n      console.log(\"[GameContext] gameStart - setCurrentPlayerId:\", currentPlayerId);\n    });\n    socket.on('turnEnded', ({\n      nextPlayerId\n    }) => {\n      setCurrentPlayerId(nextPlayerId);\n      console.log(\"[GameContext] turnEnded - setCurrentPlayerId:\", nextPlayerId);\n    });\n    socket.on('playerMoved', ({\n      playerId,\n      tileId\n    }) => {\n      setPlayers(prev => prev.map(p => p.socketId === playerId ? {\n        ...p,\n        tileId\n      } : p));\n    });\n    return () => {\n      socket.off('lobbyUpdate');\n      socket.off('gameStart');\n      socket.off('turnEnded');\n      socket.off('playerMoved');\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(GameContext.Provider, {\n    value: {\n      player,\n      setPlayer,\n      players,\n      setPlayers,\n      currentPlayerId,\n      setCurrentPlayerId,\n      sessionId,\n      setSessionId,\n      socket,\n      gameState,\n      setGameState\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(GameProvider, \"5Sax7kgSwsvgMQJHrEiN+e3KynA=\");\n_c = GameProvider;\nvar _c;\n$RefreshReg$(_c, \"GameProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","socket","jsxDEV","_jsxDEV","GameContext","GameProvider","children","_s","player","setPlayer","players","setPlayers","currentPlayerId","setCurrentPlayerId","sessionId","setSessionId","gameState","setGameState","on","newPlayers","console","log","ps","sid","nextPlayerId","playerId","tileId","prev","map","p","socketId","off","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/addhy/Desktop/Business_web/client/src/context/GameContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nimport socket from '../socket';\r\n\r\nexport const GameContext = createContext();\r\n\r\nexport function GameProvider({ children }) {\r\n  const [player, setPlayer] = useState(null);\r\n  const [players, setPlayers] = useState([]);\r\n  const [currentPlayerId, setCurrentPlayerId] = useState(null);\r\n  const [sessionId, setSessionId] = useState(null);\r\n  const [gameState, setGameState] = useState('lobby');\r\n\r\n  useEffect(() => {\r\n    socket.on('lobbyUpdate', (newPlayers) => {\r\n      setPlayers(newPlayers);\r\n      console.log(\"[GameContext] Received lobbyUpdate:\", newPlayers);\r\n    });\r\n\r\n    socket.on('gameStart', ({ players: ps, sessionId: sid, currentPlayerId }) => {\r\n      setPlayers(ps);\r\n      setSessionId(sid);\r\n      setGameState('playing');\r\n      setCurrentPlayerId(currentPlayerId); // USE THE VALUE FROM SERVER!\r\n      console.log(\"[GameContext] gameStart - setCurrentPlayerId:\", currentPlayerId);\r\n    });\r\n\r\n    socket.on('turnEnded', ({ nextPlayerId }) => {\r\n      setCurrentPlayerId(nextPlayerId);\r\n      console.log(\"[GameContext] turnEnded - setCurrentPlayerId:\", nextPlayerId);\r\n    });\r\n\r\n    socket.on('playerMoved', ({ playerId, tileId }) => {\r\n      setPlayers((prev) =>\r\n        prev.map((p) =>\r\n          p.socketId === playerId ? { ...p, tileId } : p\r\n        )\r\n      );\r\n    });\r\n\r\n    return () => {\r\n      socket.off('lobbyUpdate');\r\n      socket.off('gameStart');\r\n      socket.off('turnEnded');\r\n      socket.off('playerMoved');\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <GameContext.Provider\r\n      value={{\r\n        player,\r\n        setPlayer,\r\n        players,\r\n        setPlayers,\r\n        currentPlayerId,\r\n        setCurrentPlayerId,\r\n        sessionId,\r\n        setSessionId,\r\n        socket,\r\n        gameState,\r\n        setGameState,\r\n      }}\r\n    >\r\n      {children}\r\n    </GameContext.Provider>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,OAAOC,MAAM,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,OAAO,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAE1C,OAAO,SAASO,YAAYA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACzC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACa,eAAe,EAAEC,kBAAkB,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACiB,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,OAAO,CAAC;EAEnDC,SAAS,CAAC,MAAM;IACdC,MAAM,CAACiB,EAAE,CAAC,aAAa,EAAGC,UAAU,IAAK;MACvCR,UAAU,CAACQ,UAAU,CAAC;MACtBC,OAAO,CAACC,GAAG,CAAC,qCAAqC,EAAEF,UAAU,CAAC;IAChE,CAAC,CAAC;IAEFlB,MAAM,CAACiB,EAAE,CAAC,WAAW,EAAE,CAAC;MAAER,OAAO,EAAEY,EAAE;MAAER,SAAS,EAAES,GAAG;MAAEX;IAAgB,CAAC,KAAK;MAC3ED,UAAU,CAACW,EAAE,CAAC;MACdP,YAAY,CAACQ,GAAG,CAAC;MACjBN,YAAY,CAAC,SAAS,CAAC;MACvBJ,kBAAkB,CAACD,eAAe,CAAC,CAAC,CAAC;MACrCQ,OAAO,CAACC,GAAG,CAAC,+CAA+C,EAAET,eAAe,CAAC;IAC/E,CAAC,CAAC;IAEFX,MAAM,CAACiB,EAAE,CAAC,WAAW,EAAE,CAAC;MAAEM;IAAa,CAAC,KAAK;MAC3CX,kBAAkB,CAACW,YAAY,CAAC;MAChCJ,OAAO,CAACC,GAAG,CAAC,+CAA+C,EAAEG,YAAY,CAAC;IAC5E,CAAC,CAAC;IAEFvB,MAAM,CAACiB,EAAE,CAAC,aAAa,EAAE,CAAC;MAAEO,QAAQ;MAAEC;IAAO,CAAC,KAAK;MACjDf,UAAU,CAAEgB,IAAI,IACdA,IAAI,CAACC,GAAG,CAAEC,CAAC,IACTA,CAAC,CAACC,QAAQ,KAAKL,QAAQ,GAAG;QAAE,GAAGI,CAAC;QAAEH;MAAO,CAAC,GAAGG,CAC/C,CACF,CAAC;IACH,CAAC,CAAC;IAEF,OAAO,MAAM;MACX5B,MAAM,CAAC8B,GAAG,CAAC,aAAa,CAAC;MACzB9B,MAAM,CAAC8B,GAAG,CAAC,WAAW,CAAC;MACvB9B,MAAM,CAAC8B,GAAG,CAAC,WAAW,CAAC;MACvB9B,MAAM,CAAC8B,GAAG,CAAC,aAAa,CAAC;IAC3B,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE5B,OAAA,CAACC,WAAW,CAAC4B,QAAQ;IACnBC,KAAK,EAAE;MACLzB,MAAM;MACNC,SAAS;MACTC,OAAO;MACPC,UAAU;MACVC,eAAe;MACfC,kBAAkB;MAClBC,SAAS;MACTC,YAAY;MACZd,MAAM;MACNe,SAAS;MACTC;IACF,CAAE;IAAAX,QAAA,EAEDA;EAAQ;IAAA4B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B;AAAC9B,EAAA,CA7DeF,YAAY;AAAAiC,EAAA,GAAZjC,YAAY;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}