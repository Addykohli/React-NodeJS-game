{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useContext } from 'react';\nimport { GameContext } from '../context/GameContext';\nimport { tiles } from '../data/tiles';\nconst GameController = () => {\n  _s();\n  const {\n    players,\n    setPlayers,\n    currentPlayerIndex,\n    originalCount,\n    setOriginalCount,\n    isMoving,\n    setIsMoving,\n    diceRoll,\n    setDiceRoll\n  } = useContext(GameContext);\n  useEffect(() => {\n    if (!isMoving || originalCount <= 0) return;\n    const initialTotal = originalCount;\n    let remaining = originalCount;\n    const moveStep = async () => {\n      console.log(`[GameController] Starting move: ${initialTotal} steps for ${players[currentPlayerIndex].name}`);\n      const updated = [...players];\n      const me = updated[currentPlayerIndex];\n      while (remaining > 0) {\n        await new Promise(res => setTimeout(res, 500));\n        const currentId = me.tileId || 1;\n        const tile = tiles.find(t => t.id === currentId);\n        const prev = me.prevTile;\n\n        // filter by same `from`\n        const candidates = (tile.next || []).filter(n => n.from === prev);\n        let choice = null;\n        if (initialTotal === 7) {\n          // if any == automatic\n          choice = candidates.find(n => n.roll === 'any');\n          if (!choice && candidates.length > 1) {\n            // prompt between the two\n            const promptText = candidates.map(n => n.to).join(', ');\n            const pickFirst = window.confirm(`[GameController] Roll=7, choose path to: ${promptText}\\nOK → ${candidates[0].to}`);\n            choice = pickFirst ? candidates[0] : candidates[1];\n          }\n        } else if (initialTotal < 7) {\n          choice = candidates.find(n => n.roll === 'below' || n.roll === 'any');\n        } else {\n          choice = candidates.find(n => n.roll === 'above' || n.roll === 'any');\n        }\n        if (!choice) {\n          console.warn(`[GameController] No valid path from tile ${currentId} with total=${initialTotal}`);\n          break;\n        }\n\n        // perform the step\n        me.prevTile = currentId;\n        me.tileId = choice.to;\n        remaining--;\n        console.log(`[GameController] Moved to tile ${me.tileId}, ${remaining} steps left`);\n        setPlayers([...updated]);\n      }\n      console.log(`[GameController] Move complete for ${players[currentPlayerIndex].name}`);\n      // clear movement state\n      setIsMoving(false);\n      setOriginalCount(0);\n      setDiceRoll(null);\n    };\n    moveStep();\n  }, [isMoving]);\n  return null;\n};\n_s(GameController, \"RI9OsKeNou7N/Rte5B0hnfy/Wao=\");\n_c = GameController;\nexport default GameController;\nvar _c;\n$RefreshReg$(_c, \"GameController\");","map":{"version":3,"names":["useEffect","useContext","GameContext","tiles","GameController","_s","players","setPlayers","currentPlayerIndex","originalCount","setOriginalCount","isMoving","setIsMoving","diceRoll","setDiceRoll","initialTotal","remaining","moveStep","console","log","name","updated","me","Promise","res","setTimeout","currentId","tileId","tile","find","t","id","prev","prevTile","candidates","next","filter","n","from","choice","roll","length","promptText","map","to","join","pickFirst","window","confirm","warn","_c","$RefreshReg$"],"sources":["C:/Users/addhy/Desktop/Business_web/client/src/components/GameController.js"],"sourcesContent":["import { useEffect, useContext } from 'react';\r\nimport { GameContext } from '../context/GameContext';\r\nimport { tiles } from '../data/tiles';\r\n\r\nconst GameController = () => {\r\n  const {\r\n    players, setPlayers,\r\n    currentPlayerIndex,\r\n    originalCount, setOriginalCount,\r\n    isMoving, setIsMoving,\r\n    diceRoll, setDiceRoll\r\n  } = useContext(GameContext);\r\n\r\n  useEffect(() => {\r\n    if (!isMoving || originalCount <= 0) return;\r\n\r\n    const initialTotal = originalCount;\r\n    let remaining = originalCount;\r\n\r\n    const moveStep = async () => {\r\n      console.log(\r\n        `[GameController] Starting move: ${initialTotal} steps for ${players[currentPlayerIndex].name}`\r\n      );\r\n\r\n      const updated = [...players];\r\n      const me = updated[currentPlayerIndex];\r\n\r\n      while (remaining > 0) {\r\n        await new Promise(res => setTimeout(res, 500));\r\n\r\n        const currentId = me.tileId || 1;\r\n        const tile = tiles.find(t => t.id === currentId);\r\n        const prev = me.prevTile;\r\n\r\n        // filter by same `from`\r\n        const candidates = (tile.next || []).filter(n => n.from === prev);\r\n\r\n        let choice = null;\r\n\r\n        if (initialTotal === 7) {\r\n          // if any == automatic\r\n          choice = candidates.find(n => n.roll === 'any');\r\n          if (!choice && candidates.length > 1) {\r\n            // prompt between the two\r\n            const promptText = candidates.map(n => n.to).join(', ');\r\n            const pickFirst = window.confirm(\r\n              `[GameController] Roll=7, choose path to: ${promptText}\\nOK → ${candidates[0].to}`\r\n            );\r\n            choice = pickFirst ? candidates[0] : candidates[1];\r\n          }\r\n        } else if (initialTotal < 7) {\r\n          choice = candidates.find(n => n.roll === 'below' || n.roll === 'any');\r\n        } else {\r\n          choice = candidates.find(n => n.roll === 'above' || n.roll === 'any');\r\n        }\r\n\r\n        if (!choice) {\r\n          console.warn(\r\n            `[GameController] No valid path from tile ${currentId} with total=${initialTotal}`\r\n          );\r\n          break;\r\n        }\r\n\r\n        // perform the step\r\n        me.prevTile = currentId;\r\n        me.tileId = choice.to;\r\n        remaining--;\r\n        console.log(\r\n          `[GameController] Moved to tile ${me.tileId}, ${remaining} steps left`\r\n        );\r\n        setPlayers([...updated]);\r\n      }\r\n\r\n      console.log(\r\n        `[GameController] Move complete for ${players[currentPlayerIndex].name}`\r\n      );\r\n      // clear movement state\r\n      setIsMoving(false);\r\n      setOriginalCount(0);\r\n      setDiceRoll(null);\r\n    };\r\n\r\n    moveStep();\r\n  }, [isMoving]);\r\n\r\n  return null;\r\n};\r\n\r\nexport default GameController;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}