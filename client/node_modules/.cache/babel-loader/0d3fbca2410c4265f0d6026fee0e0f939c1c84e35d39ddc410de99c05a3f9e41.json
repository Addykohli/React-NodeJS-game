{"ast":null,"code":"var _s = $RefreshSig$();\n// src/components/GameController.js\nimport { useEffect, useContext } from 'react';\nimport { GameContext } from '../context/GameContext';\nimport { tiles } from '../data/tiles';\nconst GameController = () => {\n  _s();\n  const {\n    players,\n    setPlayers,\n    currentPlayerIndex,\n    setCurrentPlayerIndex,\n    originalCount,\n    setOriginalCount,\n    isMoving,\n    setIsMoving,\n    setDiceRoll,\n    pendingPaths,\n    choosePath\n  } = useContext(GameContext);\n  useEffect(() => {\n    if (!isMoving || originalCount <= 0) {\n      console.log('[GameController] Skipping move:', {\n        isMoving,\n        originalCount\n      });\n      return;\n    }\n    const initialTotal = originalCount;\n    let remaining = originalCount;\n    console.group(`[GameController] Begin move for ${players[currentPlayerIndex].name}`);\n    console.log('  initialTotal:', initialTotal);\n    const moveStep = async () => {\n      const updated = [...players];\n      const me = updated[currentPlayerIndex];\n      while (remaining > 0) {\n        console.log(`\\n[GameController] --- Step ${initialTotal - remaining + 1} of ${initialTotal} ---`);\n        console.log('  Current tileId:', me.tileId || 1);\n        console.log('  Prev tile:', me.prevTile);\n        const tileId = me.tileId || 1;\n        const tile = tiles.find(t => t.id === tileId);\n        console.log('  Tile data:', tile);\n        const allNext = tile.next || [];\n        console.log('  All next candidates:', allNext);\n        const fromMatches = allNext.filter(n => n.from === me.prevTile);\n        console.log('  After from===prev filter:', fromMatches);\n        let choice = null;\n        if (initialTotal === 7 && fromMatches.length > 1) {\n          console.log('  Total == 7 branching logic');\n          const choices = fromMatches.map(n => {\n            const dest = tiles.find(t => t.id === n.to);\n            return {\n              to: n.to,\n              name: dest.name\n            };\n          });\n          choosePath(choices);\n          choice = await new Promise(res => {\n            const iv = setInterval(() => {\n              if (pendingPaths && pendingPaths.chosen != null) {\n                clearInterval(iv);\n                const picked = fromMatches.find(n => n.to === pendingPaths.chosen);\n                res(picked);\n              }\n            }, 100);\n          });\n        } else if (initialTotal < 7) {\n          console.log('  Total < 7 logic');\n          choice = fromMatches.find(n => n.roll === 'below' || n.roll === 'any');\n        } else if (initialTotal > 7) {\n          console.log('  Total > 7 logic');\n          choice = fromMatches.find(n => n.roll === 'above' || n.roll === 'any');\n        } else {\n          choice = fromMatches[0];\n        }\n        console.log('  Chosen candidate:', choice);\n        if (!choice) {\n          console.warn(`[GameController] No valid path from tile ${tileId} with total=${initialTotal}`);\n          break;\n        }\n        me.prevTile = tileId;\n        me.tileId = choice.to;\n        remaining--;\n        console.log(`  → Moved to tile ${me.tileId}, ${remaining} steps left`);\n        setPlayers([...updated]);\n        await new Promise(r => setTimeout(r, 500));\n      }\n      console.log(`[GameController] Move complete for ${players[currentPlayerIndex].name}`);\n      console.groupEnd();\n      setIsMoving(false);\n      setOriginalCount(0);\n      setDiceRoll(null);\n      setCurrentPlayerIndex(i => (i + 1) % players.length);\n    };\n    moveStep();\n  }, [isMoving, originalCount, players, currentPlayerIndex, pendingPaths, choosePath, setPlayers, setCurrentPlayerIndex, setOriginalCount, setIsMoving, setDiceRoll]);\n  return null;\n};\n_s(GameController, \"eJN+r3IvOQ/lFxrFa55rqEdYK1w=\");\n_c = GameController;\nexport default GameController;\nvar _c;\n$RefreshReg$(_c, \"GameController\");","map":{"version":3,"names":["useEffect","useContext","GameContext","tiles","GameController","_s","players","setPlayers","currentPlayerIndex","setCurrentPlayerIndex","originalCount","setOriginalCount","isMoving","setIsMoving","setDiceRoll","pendingPaths","choosePath","console","log","initialTotal","remaining","group","name","moveStep","updated","me","tileId","prevTile","tile","find","t","id","allNext","next","fromMatches","filter","n","from","choice","length","choices","map","dest","to","Promise","res","iv","setInterval","chosen","clearInterval","picked","roll","warn","r","setTimeout","groupEnd","i","_c","$RefreshReg$"],"sources":["C:/Users/addhy/Desktop/Business_web/client/src/components/GameController.js"],"sourcesContent":["// src/components/GameController.js\r\nimport { useEffect, useContext } from 'react';\r\nimport { GameContext } from '../context/GameContext';\r\nimport { tiles } from '../data/tiles';\r\n\r\nconst GameController = () => {\r\n  const {\r\n    players, setPlayers,\r\n    currentPlayerIndex, setCurrentPlayerIndex,\r\n    originalCount, setOriginalCount,\r\n    isMoving, setIsMoving,\r\n    setDiceRoll,\r\n    pendingPaths, choosePath\r\n  } = useContext(GameContext);\r\n\r\n  useEffect(() => {\r\n    if (!isMoving || originalCount <= 0) {\r\n      console.log('[GameController] Skipping move:', { isMoving, originalCount });\r\n      return;\r\n    }\r\n\r\n    const initialTotal = originalCount;\r\n    let remaining = originalCount;\r\n    console.group(`[GameController] Begin move for ${players[currentPlayerIndex].name}`);\r\n    console.log('  initialTotal:', initialTotal);\r\n\r\n    const moveStep = async () => {\r\n      const updated = [...players];\r\n      const me = updated[currentPlayerIndex];\r\n\r\n      while (remaining > 0) {\r\n        console.log(\r\n          `\\n[GameController] --- Step ${initialTotal - remaining + 1} of ${initialTotal} ---`\r\n        );\r\n        console.log('  Current tileId:', me.tileId || 1);\r\n        console.log('  Prev tile:', me.prevTile);\r\n\r\n        const tileId = me.tileId || 1;\r\n        const tile = tiles.find(t => t.id === tileId);\r\n        console.log('  Tile data:', tile);\r\n\r\n        const allNext = tile.next || [];\r\n        console.log('  All next candidates:', allNext);\r\n\r\n        const fromMatches = allNext.filter(n => n.from === me.prevTile);\r\n        console.log('  After from===prev filter:', fromMatches);\r\n\r\n        let choice = null;\r\n        if (initialTotal === 7 && fromMatches.length > 1) {\r\n          console.log('  Total == 7 branching logic');\r\n          const choices = fromMatches.map(n => {\r\n            const dest = tiles.find(t => t.id === n.to);\r\n            return { to: n.to, name: dest.name };\r\n          });\r\n          choosePath(choices);\r\n\r\n          choice = await new Promise(res => {\r\n            const iv = setInterval(() => {\r\n              if (pendingPaths && pendingPaths.chosen != null) {\r\n                clearInterval(iv);\r\n                const picked = fromMatches.find(n => n.to === pendingPaths.chosen);\r\n                res(picked);\r\n              }\r\n            }, 100);\r\n          });\r\n        } else if (initialTotal < 7) {\r\n          console.log('  Total < 7 logic');\r\n          choice = fromMatches.find(n => n.roll === 'below' || n.roll === 'any');\r\n        } else if (initialTotal > 7) {\r\n          console.log('  Total > 7 logic');\r\n          choice = fromMatches.find(n => n.roll === 'above' || n.roll === 'any');\r\n        } else {\r\n          choice = fromMatches[0];\r\n        }\r\n\r\n        console.log('  Chosen candidate:', choice);\r\n\r\n        if (!choice) {\r\n          console.warn(\r\n            `[GameController] No valid path from tile ${tileId} with total=${initialTotal}`\r\n          );\r\n          break;\r\n        }\r\n\r\n        me.prevTile = tileId;\r\n        me.tileId = choice.to;\r\n        remaining--;\r\n        console.log(`  → Moved to tile ${me.tileId}, ${remaining} steps left`);\r\n        setPlayers([...updated]);\r\n\r\n        await new Promise(r => setTimeout(r, 500));\r\n      }\r\n\r\n      console.log(\r\n        `[GameController] Move complete for ${players[currentPlayerIndex].name}`\r\n      );\r\n      console.groupEnd();\r\n\r\n      setIsMoving(false);\r\n      setOriginalCount(0);\r\n      setDiceRoll(null);\r\n      setCurrentPlayerIndex(i => (i + 1) % players.length);\r\n    };\r\n\r\n    moveStep();\r\n  }, [\r\n    isMoving,\r\n    originalCount,\r\n    players,\r\n    currentPlayerIndex,\r\n    pendingPaths,\r\n    choosePath,\r\n    setPlayers,\r\n    setCurrentPlayerIndex,\r\n    setOriginalCount,\r\n    setIsMoving,\r\n    setDiceRoll\r\n  ]);\r\n\r\n  return null;\r\n};\r\n\r\nexport default GameController;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}