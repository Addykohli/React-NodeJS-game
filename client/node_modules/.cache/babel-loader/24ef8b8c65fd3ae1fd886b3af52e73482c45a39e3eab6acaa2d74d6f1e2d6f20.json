{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\addhy\\\\Desktop\\\\Business_web - Copy (2)\\\\client\\\\src\\\\components\\\\PropertyDisplay.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext, useEffect } from 'react';\nimport { tiles } from '../data/tiles';\nimport { GameContext } from '../context/GameContext';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PropertyDisplay = () => {\n  _s();\n  const [expandedIndexes, setExpandedIndexes] = useState({});\n  const {\n    gameState,\n    currentPlayerId,\n    player\n  } = useContext(GameContext);\n  console.log('Current GameState:', gameState);\n  console.log('Current Player:', player);\n  console.log('Current Player ID:', currentPlayerId);\n\n  // Get properties for a specific player\n  const getPlayerProperties = playerId => {\n    var _gameState$players;\n    console.log(`Getting properties for player ${playerId}`);\n    if (playerId === currentPlayerId) {\n      console.log('Current player properties:', player === null || player === void 0 ? void 0 : player.properties);\n      return tiles.filter(tile => tile.type === 'property').filter(tile => {\n        var _player$properties;\n        return player === null || player === void 0 ? void 0 : (_player$properties = player.properties) === null || _player$properties === void 0 ? void 0 : _player$properties.includes(tile.id);\n      });\n    }\n    const targetPlayer = gameState === null || gameState === void 0 ? void 0 : (_gameState$players = gameState.players) === null || _gameState$players === void 0 ? void 0 : _gameState$players[playerId];\n    console.log('Target player data:', targetPlayer);\n    const properties = tiles.filter(tile => tile.type === 'property').filter(tile => {\n      var _targetPlayer$propert;\n      return targetPlayer === null || targetPlayer === void 0 ? void 0 : (_targetPlayer$propert = targetPlayer.properties) === null || _targetPlayer$propert === void 0 ? void 0 : _targetPlayer$propert.includes(tile.id);\n    });\n    console.log('Found properties:', properties);\n    return properties;\n  };\n\n  // Get the IDs of players on the left side of the board\n  const getLeftSidePlayers = () => {\n    if (!(gameState !== null && gameState !== void 0 && gameState.players)) {\n      console.log('No players in gameState');\n      return [];\n    }\n    const leftPlayers = Object.keys(gameState.players).filter(playerId => {\n      const position = gameState.players[playerId].position;\n      return position === 'left-top' || position === 'left-bottom';\n    });\n    console.log('Left side players:', leftPlayers);\n    return leftPlayers;\n  };\n  const handlePropertyClick = (playerId, index) => {\n    const playerProperties = getPlayerProperties(playerId);\n    if (index === playerProperties.length - 1) return;\n    setExpandedIndexes(prev => ({\n      ...prev,\n      [playerId]: prev[playerId] === index ? null : index\n    }));\n  };\n  const renderPropertyStack = (position, playerId) => {\n    console.log(`Rendering stack for position: ${position}, playerId: ${playerId}`);\n    const isLeftSide = position === 'left';\n    const playerProperties = isLeftSide ? getPlayerProperties(playerId) : getPlayerProperties(currentPlayerId);\n    console.log('Properties for this stack:', playerProperties);\n    if (!playerProperties || playerProperties.length === 0) {\n      console.log('No properties found for this stack');\n      return null;\n    }\n    const containerStyle = {\n      position: 'absolute',\n      display: 'flex',\n      alignItems: 'flex-start',\n      overflow: 'visible',\n      zIndex: 1,\n      ...(isLeftSide ? {\n        flexDirection: 'column',\n        right: '-10px',\n        height: '800px',\n        top: playerId === getLeftSidePlayers()[0] ? '0%' : '50%',\n        bottom: playerId === getLeftSidePlayers()[0] ? '50%' : '0%',\n        justifyContent: 'center'\n      } : {\n        top: '100%',\n        left: '50%',\n        transform: 'translateX(calc(-50% + 50px))',\n        height: '280px',\n        marginTop: '-3px',\n        width: '800px',\n        justifyContent: 'center'\n      })\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: containerStyle,\n      children: playerProperties.map((property, index) => {\n        const isLastProperty = index === playerProperties.length - 1;\n        const isExpanded = isLastProperty || expandedIndexes[playerId] === index;\n        const basePosition = isLeftSide ? index * 42 : index * 56;\n        let expandedOffset = 0;\n        if (expandedIndexes[playerId] !== null && expandedIndexes[playerId] !== undefined) {\n          if (index > expandedIndexes[playerId]) {\n            expandedOffset = isLeftSide ? 154 : 154;\n          }\n        }\n        const finalPosition = basePosition + expandedOffset;\n        const cardStyle = {\n          width: '210px',\n          height: '280px',\n          border: '2px solid #666',\n          borderRadius: '12px',\n          position: 'absolute',\n          transition: 'all 0.3s ease',\n          zIndex: isExpanded ? playerProperties.length : index,\n          display: 'flex',\n          flexDirection: 'column',\n          padding: '14px',\n          boxSizing: 'border-box',\n          backgroundColor: 'rgb(173, 216, 230)',\n          cursor: isLastProperty ? 'default' : 'pointer',\n          ...(isLeftSide ? {\n            top: finalPosition,\n            transform: 'rotate(90deg)',\n            transformOrigin: 'top left'\n          } : {\n            left: finalPosition\n          })\n        };\n        const textContainerStyle = {\n          transform: 'rotate(-90deg)',\n          transformOrigin: 'left center',\n          position: 'absolute',\n          width: '280px',\n          height: '210px',\n          ...(isLeftSide ? {\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'flex-start',\n            justifyContent: 'flex-start',\n            padding: '14px'\n          } : {\n            top: '140px',\n            left: '105px',\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'flex-start',\n            justifyContent: 'flex-start',\n            padding: '14px'\n          })\n        };\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => !isLastProperty && handlePropertyClick(playerId, index),\n          style: cardStyle,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: textContainerStyle,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: '1.96rem',\n                marginBottom: '14px',\n                textAlign: 'left',\n                whiteSpace: 'nowrap',\n                overflow: 'hidden',\n                textOverflow: 'ellipsis',\n                maxWidth: '252px',\n                width: '100%',\n                color: '#333'\n              },\n              children: property.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: '1.4rem',\n                opacity: 1,\n                textAlign: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Cost: $\", property.cost]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Rent: $\", property.rent]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this)\n        }, property.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this);\n      })\n    }, `${position}-${playerId}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Add useEffect to log when component updates\n  useEffect(() => {\n    console.log('PropertyDisplay component updated');\n    console.log('Current expandedIndexes:', expandedIndexes);\n  });\n  const leftPlayers = getLeftSidePlayers();\n  console.log('Rendering property stacks for left players:', leftPlayers);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [renderPropertyStack('top', currentPlayerId), leftPlayers.map(playerId => renderPropertyStack('left', playerId))]\n  }, void 0, true);\n};\n_s(PropertyDisplay, \"clNenVyJkZY2hVuNYaigMB+3sJY=\");\n_c = PropertyDisplay;\nexport default PropertyDisplay;\nvar _c;\n$RefreshReg$(_c, \"PropertyDisplay\");","map":{"version":3,"names":["React","useState","useContext","useEffect","tiles","GameContext","jsxDEV","_jsxDEV","Fragment","_Fragment","PropertyDisplay","_s","expandedIndexes","setExpandedIndexes","gameState","currentPlayerId","player","console","log","getPlayerProperties","playerId","_gameState$players","properties","filter","tile","type","_player$properties","includes","id","targetPlayer","players","_targetPlayer$propert","getLeftSidePlayers","leftPlayers","Object","keys","position","handlePropertyClick","index","playerProperties","length","prev","renderPropertyStack","isLeftSide","containerStyle","display","alignItems","overflow","zIndex","flexDirection","right","height","top","bottom","justifyContent","left","transform","marginTop","width","style","children","map","property","isLastProperty","isExpanded","basePosition","expandedOffset","undefined","finalPosition","cardStyle","border","borderRadius","transition","padding","boxSizing","backgroundColor","cursor","transformOrigin","textContainerStyle","onClick","fontSize","marginBottom","textAlign","whiteSpace","textOverflow","maxWidth","color","name","fileName","_jsxFileName","lineNumber","columnNumber","opacity","cost","rent","_c","$RefreshReg$"],"sources":["C:/Users/addhy/Desktop/Business_web - Copy (2)/client/src/components/PropertyDisplay.js"],"sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport { tiles } from '../data/tiles';\nimport { GameContext } from '../context/GameContext';\n\nconst PropertyDisplay = () => {\n  const [expandedIndexes, setExpandedIndexes] = useState({});\n  const { gameState, currentPlayerId, player } = useContext(GameContext);\n\n  console.log('Current GameState:', gameState);\n  console.log('Current Player:', player);\n  console.log('Current Player ID:', currentPlayerId);\n\n  // Get properties for a specific player\n  const getPlayerProperties = (playerId) => {\n    console.log(`Getting properties for player ${playerId}`);\n    if (playerId === currentPlayerId) {\n      console.log('Current player properties:', player?.properties);\n      return tiles\n        .filter(tile => tile.type === 'property')\n        .filter(tile => player?.properties?.includes(tile.id));\n    }\n    \n    const targetPlayer = gameState?.players?.[playerId];\n    console.log('Target player data:', targetPlayer);\n    const properties = tiles\n      .filter(tile => tile.type === 'property')\n      .filter(tile => targetPlayer?.properties?.includes(tile.id));\n    console.log('Found properties:', properties);\n    return properties;\n  };\n\n  // Get the IDs of players on the left side of the board\n  const getLeftSidePlayers = () => {\n    if (!gameState?.players) {\n      console.log('No players in gameState');\n      return [];\n    }\n    const leftPlayers = Object.keys(gameState.players).filter(playerId => {\n      const position = gameState.players[playerId].position;\n      return position === 'left-top' || position === 'left-bottom';\n    });\n    console.log('Left side players:', leftPlayers);\n    return leftPlayers;\n  };\n\n  const handlePropertyClick = (playerId, index) => {\n    const playerProperties = getPlayerProperties(playerId);\n    if (index === playerProperties.length - 1) return;\n\n    setExpandedIndexes(prev => ({\n      ...prev,\n      [playerId]: prev[playerId] === index ? null : index\n    }));\n  };\n\n  const renderPropertyStack = (position, playerId) => {\n    console.log(`Rendering stack for position: ${position}, playerId: ${playerId}`);\n    const isLeftSide = position === 'left';\n    const playerProperties = isLeftSide ? \n      getPlayerProperties(playerId) :\n      getPlayerProperties(currentPlayerId);\n\n    console.log('Properties for this stack:', playerProperties);\n\n    if (!playerProperties || playerProperties.length === 0) {\n      console.log('No properties found for this stack');\n      return null;\n    }\n\n    const containerStyle = {\n      position: 'absolute',\n      display: 'flex',\n      alignItems: 'flex-start',\n      overflow: 'visible',\n      zIndex: 1,\n      ...(isLeftSide ? {\n        flexDirection: 'column',\n        right: '-10px',\n        height: '800px',\n        top: playerId === getLeftSidePlayers()[0] ? '0%' : '50%',\n        bottom: playerId === getLeftSidePlayers()[0] ? '50%' : '0%',\n        justifyContent: 'center'\n      } : {\n        top: '100%',\n        left: '50%',\n        transform: 'translateX(calc(-50% + 50px))',\n        height: '280px',\n        marginTop: '-3px',\n        width: '800px',\n        justifyContent: 'center'\n      })\n    };\n\n    return (\n      <div key={`${position}-${playerId}`} style={containerStyle}>\n        {playerProperties.map((property, index) => {\n          const isLastProperty = index === playerProperties.length - 1;\n          const isExpanded = isLastProperty || expandedIndexes[playerId] === index;\n          \n          const basePosition = isLeftSide ? \n            index * 42 :\n            index * 56;\n          \n          let expandedOffset = 0;\n          if (expandedIndexes[playerId] !== null && expandedIndexes[playerId] !== undefined) {\n            if (index > expandedIndexes[playerId]) {\n              expandedOffset = isLeftSide ? 154 : 154;\n            }\n          }\n\n          const finalPosition = basePosition + expandedOffset;\n          \n          const cardStyle = {\n            width: '210px',\n            height: '280px',\n            border: '2px solid #666',\n            borderRadius: '12px',\n            position: 'absolute',\n            transition: 'all 0.3s ease',\n            zIndex: isExpanded ? playerProperties.length : index,\n            display: 'flex',\n            flexDirection: 'column',\n            padding: '14px',\n            boxSizing: 'border-box',\n            backgroundColor: 'rgb(173, 216, 230)',\n            cursor: isLastProperty ? 'default' : 'pointer',\n            ...(isLeftSide ? {\n              top: finalPosition,\n              transform: 'rotate(90deg)',\n              transformOrigin: 'top left'\n            } : {\n              left: finalPosition\n            })\n          };\n\n          const textContainerStyle = {\n            transform: 'rotate(-90deg)',\n            transformOrigin: 'left center',\n            position: 'absolute',\n            width: '280px',\n            height: '210px',\n            ...(isLeftSide ? {\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'flex-start',\n              justifyContent: 'flex-start',\n              padding: '14px'\n            } : {\n              top: '140px',\n              left: '105px',\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'flex-start',\n              justifyContent: 'flex-start',\n              padding: '14px'\n            })\n          };\n\n          return (\n            <div\n              key={property.id}\n              onClick={() => !isLastProperty && handlePropertyClick(playerId, index)}\n              style={cardStyle}\n            >\n              <div style={textContainerStyle}>\n                <div style={{\n                  fontSize: '1.96rem',\n                  marginBottom: '14px',\n                  textAlign: 'left',\n                  whiteSpace: 'nowrap',\n                  overflow: 'hidden',\n                  textOverflow: 'ellipsis',\n                  maxWidth: '252px',\n                  width: '100%',\n                  color: '#333'\n                }}>\n                  {property.name}\n                </div>\n                <div style={{\n                  fontSize: '1.4rem',\n                  opacity: 1,\n                  textAlign: 'center'\n                }}>\n                  <div>Cost: ${property.cost}</div>\n                  <div>Rent: ${property.rent}</div>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    );\n  };\n\n  // Add useEffect to log when component updates\n  useEffect(() => {\n    console.log('PropertyDisplay component updated');\n    console.log('Current expandedIndexes:', expandedIndexes);\n  });\n\n  const leftPlayers = getLeftSidePlayers();\n  console.log('Rendering property stacks for left players:', leftPlayers);\n\n  return (\n    <>\n      {/* Top stack - current player's properties */}\n      {renderPropertyStack('top', currentPlayerId)}\n      \n      {/* Left side stacks - properties for players on the left */}\n      {leftPlayers.map(playerId => \n        renderPropertyStack('left', playerId)\n      )}\n    </>\n  );\n};\n\nexport default PropertyDisplay; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}