{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\addhy\\\\Desktop\\\\Business_web\\\\client\\\\src\\\\context\\\\GameContext.js\",\n  _s = $RefreshSig$();\n// client/src/context/GameContext.js\nimport React, { createContext, useState, useEffect } from 'react';\nimport socket from '../socket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GameContext = /*#__PURE__*/createContext();\nexport function GameProvider({\n  children\n}) {\n  _s();\n  const [players, setPlayers] = useState([]);\n  const [currentPlayerId, setCurrentPlayerId] = useState(null);\n  const [sessionId, setSessionId] = useState(null);\n  useEffect(() => {\n    socket.on('lobbyUpdate', newPlayers => {\n      setPlayers(newPlayers);\n    });\n    socket.on('gameStart', ({\n      players: ps,\n      sessionId: sid\n    }) => {\n      var _ps$;\n      setPlayers(ps);\n      setSessionId(sid);\n      // Optionally set the first currentPlayerId here\n      setCurrentPlayerId(((_ps$ = ps[0]) === null || _ps$ === void 0 ? void 0 : _ps$.id) || null);\n    });\n    socket.on('turnEnded', ({\n      nextPlayerId\n    }) => {\n      setCurrentPlayerId(nextPlayerId);\n    });\n    socket.on('diceResult', ({\n      playerId,\n      die1,\n      die2,\n      total\n    }) => {\n      // you can stash last roll if you want…\n    });\n    socket.on('playerMoved', ({\n      playerId,\n      tileId\n    }) => {\n      setPlayers(prev => prev.map(p => p.id === playerId ? {\n        ...p,\n        tileId\n      } : p));\n    });\n    return () => {\n      socket.off('lobbyUpdate');\n      socket.off('gameStart');\n      socket.off('turnEnded');\n      socket.off('diceResult');\n      socket.off('playerMoved');\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(GameContext.Provider, {\n    value: {\n      players,\n      setPlayers,\n      currentPlayerId,\n      setCurrentPlayerId,\n      sessionId,\n      setSessionId,\n      socket\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(GameProvider, \"3KCE8SEJHwk3cS3LY/VQIFwuyOA=\");\n_c = GameProvider;\nvar _c;\n$RefreshReg$(_c, \"GameProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","socket","jsxDEV","_jsxDEV","GameContext","GameProvider","children","_s","players","setPlayers","currentPlayerId","setCurrentPlayerId","sessionId","setSessionId","on","newPlayers","ps","sid","_ps$","id","nextPlayerId","playerId","die1","die2","total","tileId","prev","map","p","off","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/addhy/Desktop/Business_web/client/src/context/GameContext.js"],"sourcesContent":["// client/src/context/GameContext.js\r\nimport React, { createContext, useState, useEffect } from 'react';\r\nimport socket from '../socket';\r\n\r\nexport const GameContext = createContext();\r\n\r\nexport function GameProvider({ children }) {\r\n  const [players, setPlayers] = useState([]);\r\n  const [currentPlayerId, setCurrentPlayerId] = useState(null);\r\n  const [sessionId, setSessionId] = useState(null);\r\n\r\n  useEffect(() => {\r\n    socket.on('lobbyUpdate', (newPlayers) => {\r\n      setPlayers(newPlayers);\r\n    });\r\n\r\n    socket.on('gameStart', ({ players: ps, sessionId: sid }) => {\r\n      setPlayers(ps);\r\n      setSessionId(sid);\r\n      // Optionally set the first currentPlayerId here\r\n      setCurrentPlayerId(ps[0]?.id || null);\r\n    });\r\n\r\n    socket.on('turnEnded', ({ nextPlayerId }) => {\r\n      setCurrentPlayerId(nextPlayerId);\r\n    });\r\n\r\n    socket.on('diceResult', ({ playerId, die1, die2, total }) => {\r\n      // you can stash last roll if you want…\r\n    });\r\n\r\n    socket.on('playerMoved', ({ playerId, tileId }) => {\r\n      setPlayers((prev) =>\r\n        prev.map((p) =>\r\n          p.id === playerId ? { ...p, tileId } : p\r\n        )\r\n      );\r\n    });\r\n\r\n    return () => {\r\n      socket.off('lobbyUpdate');\r\n      socket.off('gameStart');\r\n      socket.off('turnEnded');\r\n      socket.off('diceResult');\r\n      socket.off('playerMoved');\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <GameContext.Provider\r\n      value={{\r\n        players,\r\n        setPlayers,\r\n        currentPlayerId,\r\n        setCurrentPlayerId,\r\n        sessionId,\r\n        setSessionId,\r\n        socket\r\n      }}\r\n    >\r\n      {children}\r\n    </GameContext.Provider>\r\n  );\r\n}\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,OAAOC,MAAM,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,OAAO,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAE1C,OAAO,SAASO,YAAYA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACzC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACW,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACdC,MAAM,CAACa,EAAE,CAAC,aAAa,EAAGC,UAAU,IAAK;MACvCN,UAAU,CAACM,UAAU,CAAC;IACxB,CAAC,CAAC;IAEFd,MAAM,CAACa,EAAE,CAAC,WAAW,EAAE,CAAC;MAAEN,OAAO,EAAEQ,EAAE;MAAEJ,SAAS,EAAEK;IAAI,CAAC,KAAK;MAAA,IAAAC,IAAA;MAC1DT,UAAU,CAACO,EAAE,CAAC;MACdH,YAAY,CAACI,GAAG,CAAC;MACjB;MACAN,kBAAkB,CAAC,EAAAO,IAAA,GAAAF,EAAE,CAAC,CAAC,CAAC,cAAAE,IAAA,uBAALA,IAAA,CAAOC,EAAE,KAAI,IAAI,CAAC;IACvC,CAAC,CAAC;IAEFlB,MAAM,CAACa,EAAE,CAAC,WAAW,EAAE,CAAC;MAAEM;IAAa,CAAC,KAAK;MAC3CT,kBAAkB,CAACS,YAAY,CAAC;IAClC,CAAC,CAAC;IAEFnB,MAAM,CAACa,EAAE,CAAC,YAAY,EAAE,CAAC;MAAEO,QAAQ;MAAEC,IAAI;MAAEC,IAAI;MAAEC;IAAM,CAAC,KAAK;MAC3D;IAAA,CACD,CAAC;IAEFvB,MAAM,CAACa,EAAE,CAAC,aAAa,EAAE,CAAC;MAAEO,QAAQ;MAAEI;IAAO,CAAC,KAAK;MACjDhB,UAAU,CAAEiB,IAAI,IACdA,IAAI,CAACC,GAAG,CAAEC,CAAC,IACTA,CAAC,CAACT,EAAE,KAAKE,QAAQ,GAAG;QAAE,GAAGO,CAAC;QAAEH;MAAO,CAAC,GAAGG,CACzC,CACF,CAAC;IACH,CAAC,CAAC;IAEF,OAAO,MAAM;MACX3B,MAAM,CAAC4B,GAAG,CAAC,aAAa,CAAC;MACzB5B,MAAM,CAAC4B,GAAG,CAAC,WAAW,CAAC;MACvB5B,MAAM,CAAC4B,GAAG,CAAC,WAAW,CAAC;MACvB5B,MAAM,CAAC4B,GAAG,CAAC,YAAY,CAAC;MACxB5B,MAAM,CAAC4B,GAAG,CAAC,aAAa,CAAC;IAC3B,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE1B,OAAA,CAACC,WAAW,CAAC0B,QAAQ;IACnBC,KAAK,EAAE;MACLvB,OAAO;MACPC,UAAU;MACVC,eAAe;MACfC,kBAAkB;MAClBC,SAAS;MACTC,YAAY;MACZZ;IACF,CAAE;IAAAK,QAAA,EAEDA;EAAQ;IAAA0B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B;AAAC5B,EAAA,CAzDeF,YAAY;AAAA+B,EAAA,GAAZ/B,YAAY;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}