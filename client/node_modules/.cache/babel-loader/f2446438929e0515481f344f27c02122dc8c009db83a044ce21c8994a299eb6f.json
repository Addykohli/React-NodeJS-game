{"ast":null,"code":"var _s = $RefreshSig$();\n// src/components/GameController.js\nimport { useContext, useEffect } from 'react';\nimport { GameContext } from '../context/GameContext';\nimport { tiles } from '../data/tiles';\nconst GameController = () => {\n  _s();\n  const {\n    players,\n    setPlayers,\n    currentPlayerIndex,\n    originalCount,\n    isMoving,\n    setOriginalCount,\n    setIsMoving\n  } = useContext(GameContext);\n  useEffect(() => {\n    if (!isMoving || originalCount <= 0) return;\n    const moveLoop = async () => {\n      let steps = originalCount;\n      const updated = [...players];\n      const me = updated[currentPlayerIndex];\n      while (steps > 0) {\n        var _current$next, _choice;\n        const current = tiles.find(t => t.id === me.tileId);\n        if (!current || !((_current$next = current.next) !== null && _current$next !== void 0 && _current$next.length)) break;\n        let opts = current.next.filter(o => o.from !== me.prevTile);\n        if (!opts.length) opts = current.next;\n        let choice;\n        if (opts.length === 1 || originalCount === 7) {\n          choice = opts[0];\n        } else {\n          const rollType = originalCount < 7 ? 'below' : 'above';\n          choice = opts.find(o => o.roll === rollType) || opts[0];\n        }\n        if (!((_choice = choice) !== null && _choice !== void 0 && _choice.to)) break;\n        me.prevTile = me.tileId;\n        me.tileId = choice.to;\n        setPlayers([...updated]);\n\n        // eslint-disable-next-line no-await-in-loop\n        await new Promise(r => setTimeout(r, 400));\n        steps--;\n      }\n      setOriginalCount(0);\n      setIsMoving(false);\n    };\n    moveLoop();\n  }, [isMoving, originalCount, players, currentPlayerIndex, setPlayers, setOriginalCount, setIsMoving]);\n  return null;\n};\n_s(GameController, \"GJ398X102JJw69VzjndjUtUcLrI=\");\n_c = GameController;\nexport default GameController;\nvar _c;\n$RefreshReg$(_c, \"GameController\");","map":{"version":3,"names":["useContext","useEffect","GameContext","tiles","GameController","_s","players","setPlayers","currentPlayerIndex","originalCount","isMoving","setOriginalCount","setIsMoving","moveLoop","steps","updated","me","_current$next","_choice","current","find","t","id","tileId","next","length","opts","filter","o","from","prevTile","choice","rollType","roll","to","Promise","r","setTimeout","_c","$RefreshReg$"],"sources":["C:/Users/addhy/Desktop/Business_web/client/src/components/GameController.js"],"sourcesContent":["// src/components/GameController.js\r\nimport { useContext, useEffect } from 'react';\r\nimport { GameContext } from '../context/GameContext';\r\nimport { tiles } from '../data/tiles';\r\n\r\nconst GameController = () => {\r\n  const {\r\n    players,\r\n    setPlayers,\r\n    currentPlayerIndex,\r\n    originalCount,\r\n    isMoving,\r\n    setOriginalCount,\r\n    setIsMoving\r\n  } = useContext(GameContext);\r\n\r\n  useEffect(() => {\r\n    if (!isMoving || originalCount <= 0) return;\r\n\r\n    const moveLoop = async () => {\r\n      let steps = originalCount;\r\n      const updated = [...players];\r\n      const me = updated[currentPlayerIndex];\r\n\r\n      while (steps > 0) {\r\n        const current = tiles.find(t => t.id === me.tileId);\r\n        if (!current || !current.next?.length) break;\r\n\r\n        let opts = current.next.filter(o => o.from !== me.prevTile);\r\n        if (!opts.length) opts = current.next;\r\n\r\n        let choice;\r\n        if (opts.length === 1 || originalCount === 7) {\r\n          choice = opts[0];\r\n        } else {\r\n          const rollType = originalCount < 7 ? 'below' : 'above';\r\n          choice = opts.find(o => o.roll === rollType) || opts[0];\r\n        }\r\n        if (!choice?.to) break;\r\n\r\n        me.prevTile = me.tileId;\r\n        me.tileId = choice.to;\r\n        setPlayers([...updated]);\r\n\r\n        // eslint-disable-next-line no-await-in-loop\r\n        await new Promise(r => setTimeout(r, 400));\r\n        steps--;\r\n      }\r\n\r\n      setOriginalCount(0);\r\n      setIsMoving(false);\r\n    };\r\n\r\n    moveLoop();\r\n  }, [\r\n    isMoving,\r\n    originalCount,\r\n    players,\r\n    currentPlayerIndex,\r\n    setPlayers,\r\n    setOriginalCount,\r\n    setIsMoving\r\n  ]);\r\n\r\n  return null;\r\n};\r\n\r\nexport default GameController;\r\n"],"mappings":";AAAA;AACA,SAASA,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC7C,SAASC,WAAW,QAAQ,wBAAwB;AACpD,SAASC,KAAK,QAAQ,eAAe;AAErC,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM;IACJC,OAAO;IACPC,UAAU;IACVC,kBAAkB;IAClBC,aAAa;IACbC,QAAQ;IACRC,gBAAgB;IAChBC;EACF,CAAC,GAAGZ,UAAU,CAACE,WAAW,CAAC;EAE3BD,SAAS,CAAC,MAAM;IACd,IAAI,CAACS,QAAQ,IAAID,aAAa,IAAI,CAAC,EAAE;IAErC,MAAMI,QAAQ,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAIC,KAAK,GAAGL,aAAa;MACzB,MAAMM,OAAO,GAAG,CAAC,GAAGT,OAAO,CAAC;MAC5B,MAAMU,EAAE,GAAGD,OAAO,CAACP,kBAAkB,CAAC;MAEtC,OAAOM,KAAK,GAAG,CAAC,EAAE;QAAA,IAAAG,aAAA,EAAAC,OAAA;QAChB,MAAMC,OAAO,GAAGhB,KAAK,CAACiB,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKN,EAAE,CAACO,MAAM,CAAC;QACnD,IAAI,CAACJ,OAAO,IAAI,GAAAF,aAAA,GAACE,OAAO,CAACK,IAAI,cAAAP,aAAA,eAAZA,aAAA,CAAcQ,MAAM,GAAE;QAEvC,IAAIC,IAAI,GAAGP,OAAO,CAACK,IAAI,CAACG,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,KAAKb,EAAE,CAACc,QAAQ,CAAC;QAC3D,IAAI,CAACJ,IAAI,CAACD,MAAM,EAAEC,IAAI,GAAGP,OAAO,CAACK,IAAI;QAErC,IAAIO,MAAM;QACV,IAAIL,IAAI,CAACD,MAAM,KAAK,CAAC,IAAIhB,aAAa,KAAK,CAAC,EAAE;UAC5CsB,MAAM,GAAGL,IAAI,CAAC,CAAC,CAAC;QAClB,CAAC,MAAM;UACL,MAAMM,QAAQ,GAAGvB,aAAa,GAAG,CAAC,GAAG,OAAO,GAAG,OAAO;UACtDsB,MAAM,GAAGL,IAAI,CAACN,IAAI,CAACQ,CAAC,IAAIA,CAAC,CAACK,IAAI,KAAKD,QAAQ,CAAC,IAAIN,IAAI,CAAC,CAAC,CAAC;QACzD;QACA,IAAI,GAAAR,OAAA,GAACa,MAAM,cAAAb,OAAA,eAANA,OAAA,CAAQgB,EAAE,GAAE;QAEjBlB,EAAE,CAACc,QAAQ,GAAGd,EAAE,CAACO,MAAM;QACvBP,EAAE,CAACO,MAAM,GAAGQ,MAAM,CAACG,EAAE;QACrB3B,UAAU,CAAC,CAAC,GAAGQ,OAAO,CAAC,CAAC;;QAExB;QACA,MAAM,IAAIoB,OAAO,CAACC,CAAC,IAAIC,UAAU,CAACD,CAAC,EAAE,GAAG,CAAC,CAAC;QAC1CtB,KAAK,EAAE;MACT;MAEAH,gBAAgB,CAAC,CAAC,CAAC;MACnBC,WAAW,CAAC,KAAK,CAAC;IACpB,CAAC;IAEDC,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,CACDH,QAAQ,EACRD,aAAa,EACbH,OAAO,EACPE,kBAAkB,EAClBD,UAAU,EACVI,gBAAgB,EAChBC,WAAW,CACZ,CAAC;EAEF,OAAO,IAAI;AACb,CAAC;AAACP,EAAA,CA5DID,cAAc;AAAAkC,EAAA,GAAdlC,cAAc;AA8DpB,eAAeA,cAAc;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}