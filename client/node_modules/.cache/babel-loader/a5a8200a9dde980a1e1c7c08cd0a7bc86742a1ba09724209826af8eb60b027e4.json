{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\addhy\\\\Desktop\\\\Business_web - Copy (2)\\\\client\\\\src\\\\components\\\\TopPropertyDisplay.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport { tiles } from '../data/tiles';\nimport { GameContext } from '../context/GameContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TopPropertyDisplay = () => {\n  _s();\n  const [expandedIndex, setExpandedIndex] = useState(null);\n  const {\n    players\n  } = useContext(GameContext);\n\n  // Get players that appear above the board (first half of other players)\n  const topPlayers = players.slice(0, Math.floor((players.length - 1) / 2));\n\n  // Calculate width for each player's property stack\n  const stackWidth = 800 / Math.max(1, topPlayers.length); // 800px is total width\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'absolute',\n      top: '-190px',\n      // Position relative to the board's top\n      left: '50%',\n      transform: 'translateX(-50%)',\n      height: '280px',\n      display: 'flex',\n      alignItems: 'flex-start',\n      overflow: 'visible',\n      width: '800px',\n      justifyContent: 'space-around',\n      zIndex: 3 // Changed from 0 to 3 to appear above both outerBoard (1) and main board (2)\n    },\n    children: topPlayers.map((player, playerIndex) => {\n      // Get player's properties\n      const ownedProperties = tiles.filter(tile => tile.type === 'property').filter(tile => {\n        var _player$properties;\n        return player === null || player === void 0 ? void 0 : (_player$properties = player.properties) === null || _player$properties === void 0 ? void 0 : _player$properties.includes(tile.id);\n      });\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: `${stackWidth}px`,\n          height: '100%',\n          display: 'flex',\n          alignItems: 'flex-end',\n          position: 'relative'\n        },\n        children: ownedProperties.map((property, index) => {\n          const isLastProperty = index === ownedProperties.length - 1;\n          const isExpanded = isLastProperty || expandedIndex === index;\n\n          // Calculate base position (never changes)\n          const basePosition = index * 56;\n\n          // Calculate additional offset based on expanded state\n          let expandedOffset = 0;\n          if (expandedIndex !== null) {\n            // If there's an expanded card\n            if (index > expandedIndex) {\n              // Cards after the expanded one move right by the full width of a card (210px) minus the base overlap (56px)\n              expandedOffset = 154;\n            }\n          }\n\n          // Calculate final position\n          const finalPosition = basePosition + expandedOffset;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => !isLastProperty && setExpandedIndex(expandedIndex === index ? null : index),\n            style: {\n              width: '210px',\n              height: '280px',\n              border: '2px solid #666',\n              borderRadius: '12px',\n              position: 'absolute',\n              left: finalPosition,\n              transition: 'all 0.3s ease',\n              zIndex: isExpanded ? ownedProperties.length : index,\n              display: 'flex',\n              flexDirection: 'column',\n              padding: '14px',\n              boxSizing: 'border-box',\n              backgroundColor: 'rgb(173, 216, 230)',\n              cursor: isLastProperty ? 'default' : 'pointer',\n              transform: 'rotate(180deg)' // Flip cards upside down for top display\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                transform: 'rotate(90deg)',\n                // Adjust text rotation for upside-down cards\n                transformOrigin: 'left center',\n                position: 'absolute',\n                width: '280px',\n                height: '210px',\n                top: '140px',\n                left: '105px',\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'flex-start',\n                justifyContent: 'flex-start',\n                color: '#333',\n                fontSize: '1.68rem',\n                fontWeight: 'bold',\n                padding: '14px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: '1.96rem',\n                  marginBottom: '14px',\n                  textAlign: 'left',\n                  whiteSpace: 'nowrap',\n                  overflow: 'hidden',\n                  textOverflow: 'ellipsis',\n                  maxWidth: '252px',\n                  width: '100%'\n                },\n                children: property.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: '1.4rem',\n                  opacity: isExpanded ? 1 : 0,\n                  transition: 'opacity 0.3s ease',\n                  textAlign: 'center'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"Cost: $\", property.cost]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"Rent: $\", property.rent]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 19\n            }, this)\n          }, property.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this);\n        })\n      }, player.socketId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(TopPropertyDisplay, \"Wf+neq6Woj3Mm5BHZVOcRiEUD8Q=\");\n_c = TopPropertyDisplay;\nexport default TopPropertyDisplay;\nvar _c;\n$RefreshReg$(_c, \"TopPropertyDisplay\");","map":{"version":3,"names":["React","useState","useContext","tiles","GameContext","jsxDEV","_jsxDEV","TopPropertyDisplay","_s","expandedIndex","setExpandedIndex","players","topPlayers","slice","Math","floor","length","stackWidth","max","style","position","top","left","transform","height","display","alignItems","overflow","width","justifyContent","zIndex","children","map","player","playerIndex","ownedProperties","filter","tile","type","_player$properties","properties","includes","id","property","index","isLastProperty","isExpanded","basePosition","expandedOffset","finalPosition","onClick","border","borderRadius","transition","flexDirection","padding","boxSizing","backgroundColor","cursor","transformOrigin","color","fontSize","fontWeight","marginBottom","textAlign","whiteSpace","textOverflow","maxWidth","name","fileName","_jsxFileName","lineNumber","columnNumber","opacity","cost","rent","socketId","_c","$RefreshReg$"],"sources":["C:/Users/addhy/Desktop/Business_web - Copy (2)/client/src/components/TopPropertyDisplay.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport { tiles } from '../data/tiles';\r\nimport { GameContext } from '../context/GameContext';\r\n\r\nconst TopPropertyDisplay = () => {\r\n  const [expandedIndex, setExpandedIndex] = useState(null);\r\n  const { players } = useContext(GameContext);\r\n\r\n  // Get players that appear above the board (first half of other players)\r\n  const topPlayers = players.slice(0, Math.floor((players.length - 1) / 2));\r\n\r\n  // Calculate width for each player's property stack\r\n  const stackWidth = 800 / Math.max(1, topPlayers.length); // 800px is total width\r\n\r\n  return (\r\n    <div style={{\r\n      position: 'absolute',\r\n      top: '-190px', // Position relative to the board's top\r\n      left: '50%',\r\n      transform: 'translateX(-50%)',\r\n      height: '280px',\r\n      display: 'flex',\r\n      alignItems: 'flex-start',\r\n      overflow: 'visible',\r\n      width: '800px',\r\n      justifyContent: 'space-around',\r\n      zIndex: 3 // Changed from 0 to 3 to appear above both outerBoard (1) and main board (2)\r\n    }}>\r\n      {topPlayers.map((player, playerIndex) => {\r\n        // Get player's properties\r\n        const ownedProperties = tiles\r\n          .filter(tile => tile.type === 'property')\r\n          .filter(tile => player?.properties?.includes(tile.id));\r\n\r\n        return (\r\n          <div key={player.socketId} style={{\r\n            width: `${stackWidth}px`,\r\n            height: '100%',\r\n            display: 'flex',\r\n            alignItems: 'flex-end',\r\n            position: 'relative'\r\n          }}>\r\n            {ownedProperties.map((property, index) => {\r\n              const isLastProperty = index === ownedProperties.length - 1;\r\n              const isExpanded = isLastProperty || expandedIndex === index;\r\n              \r\n              // Calculate base position (never changes)\r\n              const basePosition = index * 56;\r\n              \r\n              // Calculate additional offset based on expanded state\r\n              let expandedOffset = 0;\r\n              \r\n              if (expandedIndex !== null) {\r\n                // If there's an expanded card\r\n                if (index > expandedIndex) {\r\n                  // Cards after the expanded one move right by the full width of a card (210px) minus the base overlap (56px)\r\n                  expandedOffset = 154;\r\n                }\r\n              }\r\n\r\n              // Calculate final position\r\n              const finalPosition = basePosition + expandedOffset;\r\n              \r\n              return (\r\n                <div\r\n                  key={property.id}\r\n                  onClick={() => !isLastProperty && setExpandedIndex(expandedIndex === index ? null : index)}\r\n                  style={{\r\n                    width: '210px',\r\n                    height: '280px',\r\n                    border: '2px solid #666',\r\n                    borderRadius: '12px',\r\n                    position: 'absolute',\r\n                    left: finalPosition,\r\n                    transition: 'all 0.3s ease',\r\n                    zIndex: isExpanded ? ownedProperties.length : index,\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    padding: '14px',\r\n                    boxSizing: 'border-box',\r\n                    backgroundColor: 'rgb(173, 216, 230)',\r\n                    cursor: isLastProperty ? 'default' : 'pointer',\r\n                    transform: 'rotate(180deg)' // Flip cards upside down for top display\r\n                  }}\r\n                >\r\n                  <div style={{\r\n                    transform: 'rotate(90deg)', // Adjust text rotation for upside-down cards\r\n                    transformOrigin: 'left center',\r\n                    position: 'absolute',\r\n                    width: '280px',\r\n                    height: '210px',\r\n                    top: '140px',\r\n                    left: '105px',\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    alignItems: 'flex-start',\r\n                    justifyContent: 'flex-start',\r\n                    color: '#333',\r\n                    fontSize: '1.68rem',\r\n                    fontWeight: 'bold',\r\n                    padding: '14px'\r\n                  }}>\r\n                    <div style={{\r\n                      fontSize: '1.96rem',\r\n                      marginBottom: '14px',\r\n                      textAlign: 'left',\r\n                      whiteSpace: 'nowrap',\r\n                      overflow: 'hidden',\r\n                      textOverflow: 'ellipsis',\r\n                      maxWidth: '252px',\r\n                      width: '100%'\r\n                    }}>\r\n                      {property.name}\r\n                    </div>\r\n                    <div style={{\r\n                      fontSize: '1.4rem',\r\n                      opacity: isExpanded ? 1 : 0,\r\n                      transition: 'opacity 0.3s ease',\r\n                      textAlign: 'center'\r\n                    }}>\r\n                      <div>Cost: ${property.cost}</div>\r\n                      <div>Rent: ${property.rent}</div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopPropertyDisplay; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}