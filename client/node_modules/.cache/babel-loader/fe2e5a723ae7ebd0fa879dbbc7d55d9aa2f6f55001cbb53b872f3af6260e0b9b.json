{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\addhy\\\\Desktop\\\\Business_web\\\\client\\\\src\\\\components\\\\DiceRoller.js\",\n  _s = $RefreshSig$();\n// src/components/DiceRoller.js\nimport React, { useContext } from 'react';\nimport { GameContext } from '../context/GameContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DiceRoller = () => {\n  _s();\n  var _players$currentPlaye;\n  const {\n    player,\n    players,\n    currentPlayerIndex,\n    diceRoll,\n    setOriginalCount,\n    setDiceRoll\n  } = useContext(GameContext);\n\n  // Only render on your turn, and only before you've rolled\n  if (!player || ((_players$currentPlaye = players[currentPlayerIndex]) === null || _players$currentPlaye === void 0 ? void 0 : _players$currentPlaye.name) !== player.name || diceRoll) {\n    return null;\n  }\n  const rollDice = () => {\n    const d1 = Math.ceil(Math.random() * 6);\n    const d2 = Math.ceil(Math.random() * 6);\n    const total = d1 + d2;\n    console.log(`[DiceRoller] ${player.name} rolled ${d1} + ${d2} = ${total}`);\n    setOriginalCount(total);\n    setDiceRoll([d1, d2]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'absolute',\n      top: '10%',\n      left: '50%',\n      transform: 'translateX(-50%)',\n      background: '#fff',\n      border: '2px solid #333',\n      borderRadius: '12px',\n      padding: '1rem',\n      boxShadow: '0 4px 10px rgba(0,0,0,0.2)',\n      zIndex: 1000,\n      textAlign: 'center'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: rollDice,\n      children: \"Roll Dice\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(DiceRoller, \"ATmZI2xGxKykKa5eup3e7sFYRO0=\");\n_c = DiceRoller;\nexport default DiceRoller;\nvar _c;\n$RefreshReg$(_c, \"DiceRoller\");","map":{"version":3,"names":["React","useContext","GameContext","jsxDEV","_jsxDEV","DiceRoller","_s","_players$currentPlaye","player","players","currentPlayerIndex","diceRoll","setOriginalCount","setDiceRoll","name","rollDice","d1","Math","ceil","random","d2","total","console","log","style","position","top","left","transform","background","border","borderRadius","padding","boxShadow","zIndex","textAlign","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/addhy/Desktop/Business_web/client/src/components/DiceRoller.js"],"sourcesContent":["// src/components/DiceRoller.js\nimport React, { useContext } from 'react';\nimport { GameContext } from '../context/GameContext';\n\nconst DiceRoller = () => {\n  const {\n    player,\n    players,\n    currentPlayerIndex,\n    diceRoll,\n    setOriginalCount,\n    setDiceRoll,\n  } = useContext(GameContext);\n\n  // Only render on your turn, and only before you've rolled\n  if (\n    !player ||\n    players[currentPlayerIndex]?.name !== player.name ||\n    diceRoll\n  ) {\n    return null;\n  }\n\n  const rollDice = () => {\n    const d1 = Math.ceil(Math.random() * 6);\n    const d2 = Math.ceil(Math.random() * 6);\n    const total = d1 + d2;\n\n    console.log(`[DiceRoller] ${player.name} rolled ${d1} + ${d2} = ${total}`);\n    setOriginalCount(total);\n    setDiceRoll([d1, d2]);\n  };\n\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        top: '10%',\n        left: '50%',\n        transform: 'translateX(-50%)',\n        background: '#fff',\n        border: '2px solid #333',\n        borderRadius: '12px',\n        padding: '1rem',\n        boxShadow: '0 4px 10px rgba(0,0,0,0.2)',\n        zIndex: 1000,\n        textAlign: 'center',\n      }}\n    >\n      <button onClick={rollDice}>Roll Dice</button>\n    </div>\n  );\n};\n\nexport default DiceRoller;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,WAAW,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,qBAAA;EACvB,MAAM;IACJC,MAAM;IACNC,OAAO;IACPC,kBAAkB;IAClBC,QAAQ;IACRC,gBAAgB;IAChBC;EACF,CAAC,GAAGZ,UAAU,CAACC,WAAW,CAAC;;EAE3B;EACA,IACE,CAACM,MAAM,IACP,EAAAD,qBAAA,GAAAE,OAAO,CAACC,kBAAkB,CAAC,cAAAH,qBAAA,uBAA3BA,qBAAA,CAA6BO,IAAI,MAAKN,MAAM,CAACM,IAAI,IACjDH,QAAQ,EACR;IACA,OAAO,IAAI;EACb;EAEA,MAAMI,QAAQ,GAAGA,CAAA,KAAM;IACrB,MAAMC,EAAE,GAAGC,IAAI,CAACC,IAAI,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC;IACvC,MAAMC,EAAE,GAAGH,IAAI,CAACC,IAAI,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC;IACvC,MAAME,KAAK,GAAGL,EAAE,GAAGI,EAAE;IAErBE,OAAO,CAACC,GAAG,CAAC,gBAAgBf,MAAM,CAACM,IAAI,WAAWE,EAAE,MAAMI,EAAE,MAAMC,KAAK,EAAE,CAAC;IAC1ET,gBAAgB,CAACS,KAAK,CAAC;IACvBR,WAAW,CAAC,CAACG,EAAE,EAAEI,EAAE,CAAC,CAAC;EACvB,CAAC;EAED,oBACEhB,OAAA;IACEoB,KAAK,EAAE;MACLC,QAAQ,EAAE,UAAU;MACpBC,GAAG,EAAE,KAAK;MACVC,IAAI,EAAE,KAAK;MACXC,SAAS,EAAE,kBAAkB;MAC7BC,UAAU,EAAE,MAAM;MAClBC,MAAM,EAAE,gBAAgB;MACxBC,YAAY,EAAE,MAAM;MACpBC,OAAO,EAAE,MAAM;MACfC,SAAS,EAAE,4BAA4B;MACvCC,MAAM,EAAE,IAAI;MACZC,SAAS,EAAE;IACb,CAAE;IAAAC,QAAA,eAEFhC,OAAA;MAAQiC,OAAO,EAAEtB,QAAS;MAAAqB,QAAA,EAAC;IAAS;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1C,CAAC;AAEV,CAAC;AAACnC,EAAA,CAhDID,UAAU;AAAAqC,EAAA,GAAVrC,UAAU;AAkDhB,eAAeA,UAAU;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}