{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\addhy\\\\Desktop\\\\Business_web - Copy (2)\\\\client\\\\src\\\\components\\\\GameScreen.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useContext, useState, useEffect } from 'react';\nimport bgImage from '../assets/bg.png';\nimport Dicebox from '../assets/diceBoard.png';\nimport startIcon from '../assets/start.png';\nimport hotelIcon from '../assets/hotel.png';\nimport casinoIcon from '../assets/casino.png';\nimport roadIcon from '../assets/road.png';\nimport Board from './Board';\nimport DiceRoller from './DiceRoller';\nimport Dashboard from './Dashboard';\nimport PlayerStats from './PlayerStats';\nimport RoadCash from './RoadCash';\nimport RPSTieResolver from './RPSTieResolver';\nimport { GameContext } from '../context/GameContext';\nimport { tiles } from '../data/tiles';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CasinoBetting = ({\n  isMyTurn,\n  currentMoney,\n  socket,\n  player,\n  onCasinoPlayed\n}) => {\n  _s();\n  const [betAmount, setBetAmount] = useState(1000);\n  const [selectedBet, setSelectedBet] = useState(null);\n  const [showResult, setShowResult] = useState(null);\n  const [diceResult, setDiceResult] = useState(null);\n  const [isActive, setIsActive] = useState(true);\n  const handleAmountChange = delta => {\n    const newAmount = Math.max(1000, Math.min(currentMoney, betAmount + delta));\n    setBetAmount(newAmount);\n  };\n  const handleBetSelect = bet => {\n    setSelectedBet(bet);\n  };\n  const handleRoll = () => {\n    if (selectedBet && betAmount >= 1000 && betAmount <= currentMoney) {\n      socket.emit('casinoRoll', {\n        betAmount,\n        betType: selectedBet\n      });\n    }\n  };\n  useEffect(() => {\n    const handleCasinoResult = ({\n      playerId,\n      dice,\n      amount,\n      won,\n      playerMoney\n    }) => {\n      if (playerId === player.socketId) {\n        setDiceResult(dice);\n        setShowResult({\n          won,\n          amount\n        });\n        setIsActive(false);\n        onCasinoPlayed();\n      }\n    };\n    socket.on('casinoResult', handleCasinoResult);\n    return () => socket.off('casinoResult', handleCasinoResult);\n  }, [socket, player.socketId, onCasinoPlayed]);\n\n  // If not active (after result), show nothing\n  if (!isActive) {\n    if (showResult && diceResult) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n          height: '100%',\n          gap: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            gap: '10px',\n            justifyContent: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `/dice/dice${diceResult[0]}.png`,\n            alt: `Die ${diceResult[0]}`,\n            width: 125,\n            height: 125\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `/dice/dice${diceResult[1]}.png`,\n            alt: `Die ${diceResult[1]}`,\n            width: 125,\n            height: 125\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: showResult.won ? '#4CAF50' : '#f44336',\n            fontWeight: 'bold',\n            fontSize: '1.2em'\n          },\n          children: showResult.won ? `You won $${showResult.amount}!` : `You lost $${showResult.amount}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this);\n    }\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: '100%',\n      gap: '15px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        gap: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAmountChange(-1000),\n        disabled: !isMyTurn || betAmount <= 1000,\n        style: {\n          padding: '8px 12px',\n          fontSize: '1.2em',\n          cursor: isMyTurn ? 'pointer' : 'not-allowed'\n        },\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '8px 16px',\n          border: '1px solid #ccc',\n          borderRadius: '4px',\n          minWidth: '100px',\n          textAlign: 'center'\n        },\n        children: [\"$\", betAmount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAmountChange(1000),\n        disabled: !isMyTurn || betAmount >= currentMoney,\n        style: {\n          padding: '8px 12px',\n          fontSize: '1.2em',\n          cursor: isMyTurn ? 'pointer' : 'not-allowed'\n        },\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        gap: '10px'\n      },\n      children: ['above', '7', 'below'].map(bet => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleBetSelect(bet),\n        disabled: !isMyTurn,\n        style: {\n          padding: '8px 16px',\n          backgroundColor: selectedBet === bet ? '#4CAF50' : '#fff',\n          color: selectedBet === bet ? '#fff' : '#000',\n          border: '1px solid #666',\n          borderRadius: '4px',\n          cursor: isMyTurn ? 'pointer' : 'not-allowed',\n          textTransform: 'capitalize'\n        },\n        children: bet\n      }, bet, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRoll,\n      disabled: !isMyTurn || !selectedBet || betAmount < 1000 || betAmount > currentMoney,\n      style: {\n        padding: '8px 24px',\n        backgroundColor: '#2196F3',\n        color: '#fff',\n        border: 'none',\n        borderRadius: '4px',\n        marginTop: '10px',\n        cursor: isMyTurn && selectedBet ? 'pointer' : 'not-allowed',\n        opacity: isMyTurn && selectedBet ? 1 : 0.7\n      },\n      children: \"Roll\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s(CasinoBetting, \"1erwuWbl18mQT2wIK6glrgWb/ks=\");\n_c = CasinoBetting;\nexport default function GameScreen() {\n  _s2();\n  const {\n    player,\n    players,\n    setPlayer,\n    setPlayers,\n    currentPlayerId,\n    socket,\n    movementDone\n  } = useContext(GameContext);\n  const isMyTurn = (player === null || player === void 0 ? void 0 : player.socketId) === currentPlayerId;\n  const [error, setError] = useState(null);\n  const [testRollInput, setTestRollInput] = useState('');\n  const [testRollMode, setTestRollMode] = useState(false);\n  const [inCasino, setInCasino] = useState(false);\n  const [hasCasinoPlayed, setHasCasinoPlayed] = useState(false);\n  const [hasChosenCorner, setHasChosenCorner] = useState(false);\n  const [rpsGame, setRpsGame] = useState(null);\n  const [rpsChoice, setRpsChoice] = useState(null);\n  const [rpsResult, setRpsResult] = useState(null);\n  const [rpsTieAmount, setRpsTieAmount] = useState(null);\n  const [activeSidePanel, setActiveSidePanel] = useState(null);\n  const [borrowAmount, setBorrowAmount] = useState(1000);\n  const [payoffAmount, setPayoffAmount] = useState(1000);\n\n  // Add socket event listener for borrow response\n  useEffect(() => {\n    if (!socket) return;\n    const handleBorrowResponse = ({\n      success,\n      error\n    }) => {\n      if (!success && error) {\n        setError(error);\n        setTimeout(() => setError(null), 5000);\n      }\n    };\n    socket.on('borrowResponse', handleBorrowResponse);\n    return () => {\n      socket.off('borrowResponse', handleBorrowResponse);\n    };\n  }, [socket]);\n\n  // Define panel configurations\n  const panelConfigs = {\n    info: {\n      color: '#4CAF50',\n      // Green\n      title: 'Game Info',\n      icon: 'ðŸ“‹'\n    },\n    bank: {\n      color: '#2196F3',\n      // Blue\n      title: 'Bank',\n      icon: 'ðŸ’°'\n    },\n    chat: {\n      color: '#9C27B0',\n      // Purple\n      title: 'Chat',\n      icon: 'ðŸ’¬'\n    },\n    trade: {\n      color: '#FF9800',\n      // Orange\n      title: 'Trade',\n      icon: 'ðŸ”„'\n    }\n  };\n\n  // Determine metadata for the current tile\n  const tileMeta = tiles.find(t => t.id === (player === null || player === void 0 ? void 0 : player.tileId));\n\n  // Reset hasChosenCorner when turn ends or tile changes\n  useEffect(() => {\n    var _tileMeta$name;\n    if (!isMyTurn || !(tileMeta !== null && tileMeta !== void 0 && (_tileMeta$name = tileMeta.name) !== null && _tileMeta$name !== void 0 && _tileMeta$name.toLowerCase().includes('choose corner'))) {\n      setHasChosenCorner(false);\n    }\n  }, [isMyTurn, tileMeta]);\n\n  // Add keyboard listener for test rolls\n  useEffect(() => {\n    const handleKeyPress = e => {\n      if (!isMyTurn) return;\n\n      // Build up the test roll input\n      if (e.key === 'Enter' && testRollInput.startsWith('testroll')) {\n        const rollNumber = parseInt(testRollInput.slice(8));\n        if (!isNaN(rollNumber) && rollNumber >= 2 && rollNumber <= 12) {\n          socket.emit('rollDice', {\n            testRoll: rollNumber\n          });\n          setTestRollInput('');\n          setTestRollMode(false);\n        }\n      } else if (e.key === 'Backspace') {\n        setTestRollInput(prev => prev.slice(0, -1));\n      } else if (e.key.length === 1) {\n        // Regular character\n        setTestRollInput(prev => prev + e.key);\n      }\n    };\n    window.addEventListener('keydown', handleKeyPress);\n    return () => window.removeEventListener('keydown', handleKeyPress);\n  }, [isMyTurn, testRollInput, socket]);\n\n  // Show current test roll input if active\n  useEffect(() => {\n    if (testRollInput.startsWith('testroll')) {\n      setTestRollMode(true);\n    } else if (testRollInput.length === 0) {\n      setTestRollMode(false);\n    }\n  }, [testRollInput]);\n\n  // Debug logging to trace condition\n  useEffect(() => {\n    console.log('[GameScreen] Debug:', {\n      isMyTurn,\n      movementDone,\n      tileMeta,\n      \"player.tileId\": player === null || player === void 0 ? void 0 : player.tileId,\n      \"tileMeta.type\": tileMeta === null || tileMeta === void 0 ? void 0 : tileMeta.type,\n      \"tileMeta.cost\": tileMeta === null || tileMeta === void 0 ? void 0 : tileMeta.cost,\n      \"player.money\": player === null || player === void 0 ? void 0 : player.money,\n      testRollMode,\n      testRollInput\n    });\n  }, [isMyTurn, movementDone, tileMeta, player, testRollMode, testRollInput]);\n\n  // Listen for purchase events\n  useEffect(() => {\n    socket.on('purchaseSuccess', ({\n      socketId,\n      money,\n      properties\n    }) => {\n      console.log('[GameScreen] purchaseSuccess', {\n        socketId,\n        money,\n        properties\n      });\n      const updated = players.map(p => p.socketId === socketId ? {\n        ...p,\n        money,\n        properties\n      } : p);\n      setPlayers(updated);\n      if (player.socketId === socketId) {\n        setPlayer({\n          ...player,\n          money,\n          properties\n        });\n      }\n      setError(null);\n    });\n\n    // Add player disconnect handler\n    socket.on('playerDisconnected', ({\n      playerName,\n      temporary\n    }) => {\n      if (temporary) {\n        setError(`${playerName} temporarily disconnected. They can rejoin with the same name.`);\n        setTimeout(() => setError(null), 5000);\n      }\n    });\n\n    // Add property update handler\n    socket.on('propertyUpdated', ({\n      playerId,\n      propertyId,\n      action,\n      newMoney\n    }) => {\n      console.log('[GameScreen] propertyUpdated', {\n        playerId,\n        propertyId,\n        action,\n        newMoney\n      });\n\n      // Update players' properties and money\n      setPlayers(prevPlayers => {\n        return prevPlayers.map(p => {\n          if (p.socketId === playerId) {\n            return {\n              ...p,\n              properties: action === 'add' ? [...(p.properties || []), propertyId] : (p.properties || []).filter(id => id !== propertyId),\n              money: newMoney // Update the player's money\n            };\n          }\n          return p;\n        });\n      });\n\n      // Update current player if they're involved\n      if (player.socketId === playerId) {\n        setPlayer(prev => ({\n          ...prev,\n          properties: action === 'add' ? [...(prev.properties || []), propertyId] : (prev.properties || []).filter(id => id !== propertyId),\n          money: newMoney // Update the current player's money\n        }));\n\n        // Show message when selling property\n        if (action === 'remove') {\n          const property = tiles.find(t => t.id === propertyId);\n          setError(`You sold ${property.name} for $${property.cost}`);\n          setTimeout(() => setError(null), 5000);\n        }\n      }\n    });\n\n    // Add start bonus handler\n    socket.on('startBonus', ({\n      playerSocketId,\n      newMoney,\n      amount,\n      reason\n    }) => {\n      console.log('[GameScreen] startBonus', {\n        playerSocketId,\n        newMoney,\n        amount,\n        reason\n      });\n\n      // Update players' money\n      const updated = players.map(p => p.socketId === playerSocketId ? {\n        ...p,\n        money: newMoney\n      } : p);\n      setPlayers(updated);\n\n      // Update current player's money if they got the bonus\n      if (player.socketId === playerSocketId) {\n        setPlayer({\n          ...player,\n          money: newMoney\n        });\n        setError(`You received $${amount} for ${reason} Start!`);\n        // Clear bonus message after 5 seconds\n        setTimeout(() => setError(null), 5000);\n      }\n    });\n\n    // Add playerMoved event handler\n    socket.on('playerMoved', ({\n      playerId,\n      tileId\n    }) => {\n      console.log('[GameScreen] playerMoved', {\n        playerId,\n        tileId\n      });\n      if (playerId === (player === null || player === void 0 ? void 0 : player.socketId)) {\n        setPlayer(prev => ({\n          ...prev,\n          tileId\n        }));\n      }\n      setPlayers(prev => prev.map(p => p.socketId === playerId ? {\n        ...p,\n        tileId\n      } : p));\n      // Clear any previous messages when a player moves\n      setError(null);\n    });\n    socket.on('purchaseFailed', ({\n      reason\n    }) => {\n      console.log('[GameScreen] purchaseFailed', reason);\n      if (reason === 'insufficientFunds') {\n        setError(\"You don't have enough money.\");\n      } else if (reason === 'alreadyOwned') {\n        setError('You already own this property.');\n      } else {\n        setError('Cannot buy this property.');\n      }\n      // Clear error message after 5 seconds\n      setTimeout(() => setError(null), 5000);\n    });\n\n    // Add rent payment handler\n    socket.on('rentPaid', ({\n      payerSocketId,\n      payerMoney,\n      ownerSocketId,\n      ownerMoney,\n      amount,\n      baseRent,\n      multiplier,\n      propertyName\n    }) => {\n      var _players$find, _players$find2;\n      console.log('[GameScreen] rentPaid', {\n        payerSocketId,\n        ownerSocketId,\n        amount\n      });\n\n      // Update players' money\n      const updated = players.map(p => {\n        if (p.socketId === payerSocketId) return {\n          ...p,\n          money: payerMoney\n        };\n        if (p.socketId === ownerSocketId) return {\n          ...p,\n          money: ownerMoney\n        };\n        return p;\n      });\n      setPlayers(updated);\n\n      // Show rent payment notification with stylized multiplier\n      setError(/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: '4px',\n          justifyContent: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: `${(_players$find = players.find(p => p.socketId === payerSocketId)) === null || _players$find === void 0 ? void 0 : _players$find.name} paid rent to ${(_players$find2 = players.find(p => p.socketId === ownerSocketId)) === null || _players$find2 === void 0 ? void 0 : _players$find2.name} for ${propertyName} - $${baseRent.toLocaleString()}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 11\n        }, this), multiplier > 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: '#FFA500',\n            fontSize: '1.3em',\n            fontWeight: 'bold',\n            marginLeft: '4px'\n          },\n          children: `X${multiplier}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 9\n      }, this));\n      setTimeout(() => setError(null), 5000);\n    });\n\n    // Add rent bonus handler\n    socket.on('rentBonus', ({\n      playerSocketId,\n      newMoney,\n      amount,\n      propertyName\n    }) => {\n      console.log('[GameScreen] rentBonus', {\n        playerSocketId,\n        amount\n      });\n\n      // Update player's money\n      const updated = players.map(p => p.socketId === playerSocketId ? {\n        ...p,\n        money: newMoney\n      } : p);\n      setPlayers(updated);\n\n      // Update current player if they got the bonus\n      if (player.socketId === playerSocketId) {\n        setPlayer({\n          ...player,\n          money: newMoney\n        });\n        setError(`You received $${amount} bonus for landing on your property ${propertyName}!`);\n        // Clear bonus message after 5 seconds\n        setTimeout(() => setError(null), 5000);\n      }\n    });\n\n    // Add casino result handler for other players\n    socket.on('casinoResult', ({\n      playerId,\n      dice,\n      amount,\n      won,\n      playerName,\n      playerMoney\n    }) => {\n      console.log('[GameScreen] casinoResult', {\n        playerId,\n        dice,\n        amount,\n        won,\n        playerName,\n        playerMoney\n      });\n\n      // Update player money in the game state\n      const updated = players.map(p => p.socketId === playerId ? {\n        ...p,\n        money: playerMoney\n      } : p);\n      setPlayers(updated);\n      if (player.socketId === playerId) {\n        setPlayer(prev => ({\n          ...prev,\n          money: playerMoney\n        }));\n      } else {\n        setError(`${playerName} ${won ? 'won' : 'lost'} $${amount} at the casino!`);\n        setTimeout(() => setError(null), 5000);\n      }\n    });\n\n    // Add roadCash handler\n    socket.on('roadCashResult', ({\n      playerSocketId,\n      newMoney,\n      amount\n    }) => {\n      console.log('[GameScreen] roadCashResult', {\n        playerSocketId,\n        newMoney,\n        amount\n      });\n\n      // Update player's money\n      const updated = players.map(p => p.socketId === playerSocketId ? {\n        ...p,\n        money: newMoney\n      } : p);\n      setPlayers(updated);\n\n      // Update current player if they got the money\n      if (player.socketId === playerSocketId) {\n        setPlayer({\n          ...player,\n          money: newMoney\n        });\n        setError(`You received $${amount} from the road!`);\n        // Clear message after 5 seconds\n        setTimeout(() => setError(null), 5000);\n      }\n    });\n\n    // Add RPS event listeners\n    socket.on('stonePaperScissorsStart', game => {\n      setRpsGame(game);\n      setRpsChoice(null);\n      setRpsResult(null);\n      setRpsTieAmount(null);\n    });\n    socket.on('stonePaperScissorsResult', result => {\n      console.log('RPS Result received:', result);\n      // First set the result to show the outcome\n      setRpsResult(result);\n\n      // Update players' money in the game state\n      const updatedPlayers = players.map(p => {\n        if (p.socketId === result.landingPlayer.socketId) {\n          return {\n            ...p,\n            money: result.landingPlayer.money\n          };\n        }\n        if (p.socketId === result.closestPlayer.socketId) {\n          return {\n            ...p,\n            money: result.closestPlayer.money\n          };\n        }\n        return p;\n      });\n      setPlayers(updatedPlayers);\n\n      // Update current player's money if they were involved\n      if (player.socketId === result.landingPlayer.socketId) {\n        setPlayer(prev => ({\n          ...prev,\n          money: result.landingPlayer.money\n        }));\n      } else if (player.socketId === result.closestPlayer.socketId) {\n        setPlayer(prev => ({\n          ...prev,\n          money: result.closestPlayer.money\n        }));\n      }\n\n      // Clear game state after a short delay to show the result\n      setTimeout(() => {\n        setRpsGame(null);\n      }, 3000);\n    });\n    socket.on('stonePaperScissorsTie', ({\n      landingPlayerId,\n      maxAmount,\n      gameId\n    }) => {\n      console.log('[DEBUG] Received stonePaperScissorsTie event:', {\n        landingPlayerId,\n        maxAmount,\n        gameId,\n        currentPlayerId: player === null || player === void 0 ? void 0 : player.socketId\n      });\n      if ((player === null || player === void 0 ? void 0 : player.socketId) === landingPlayerId) {\n        setRpsTieAmount({\n          maxAmount,\n          gameId\n        });\n      }\n    });\n    socket.on('stonePaperScissorsTieResolved', result => {\n      console.log('[DEBUG] Received stonePaperScissorsTieResolved event:', {\n        result,\n        currentPlayer: player === null || player === void 0 ? void 0 : player.socketId,\n        currentMoney: player === null || player === void 0 ? void 0 : player.money\n      });\n\n      // Update players' money in the game state\n      const updatedPlayers = players.map(p => {\n        if (p.socketId === result.landingPlayer.socketId) {\n          return {\n            ...p,\n            money: result.landingPlayer.money\n          };\n        }\n        if (p.socketId === result.closestPlayer.socketId) {\n          return {\n            ...p,\n            money: result.closestPlayer.money\n          };\n        }\n        return p;\n      });\n      setPlayers(updatedPlayers);\n\n      // Update current player's money if they were involved\n      if ((player === null || player === void 0 ? void 0 : player.socketId) === result.landingPlayer.socketId) {\n        console.log('[DEBUG] Updating landing player money:', {\n          from: player.money,\n          to: result.landingPlayer.money\n        });\n        setPlayer(prev => ({\n          ...prev,\n          money: result.landingPlayer.money\n        }));\n      } else if ((player === null || player === void 0 ? void 0 : player.socketId) === result.closestPlayer.socketId) {\n        console.log('[DEBUG] Updating closest player money:', {\n          from: player.money,\n          to: result.closestPlayer.money\n        });\n        setPlayer(prev => ({\n          ...prev,\n          money: result.closestPlayer.money\n        }));\n      }\n      setRpsGame(null);\n      setRpsResult(null);\n      setRpsTieAmount(null);\n      setRpsChoice(null);\n    });\n    return () => {\n      socket.off('purchaseSuccess');\n      socket.off('purchaseFailed');\n      socket.off('rentPaid');\n      socket.off('playerMoved');\n      socket.off('rentBonus');\n      socket.off('startBonus');\n      socket.off('casinoResult');\n      socket.off('roadCashResult');\n      socket.off('stonePaperScissorsStart');\n      socket.off('stonePaperScissorsResult');\n      socket.off('stonePaperScissorsTie');\n      socket.off('stonePaperScissorsTieResolved');\n    };\n  }, [socket, player, players, setPlayer, setPlayers]);\n\n  // Update inCasino state when tile changes\n  useEffect(() => {\n    const isCasinoTile = (tileMeta === null || tileMeta === void 0 ? void 0 : tileMeta.id) === 16;\n    setInCasino(isCasinoTile);\n    if (isCasinoTile) {\n      setHasCasinoPlayed(false);\n    }\n  }, [tileMeta]);\n\n  // Reset casino states when turn ends\n  useEffect(() => {\n    if (!isMyTurn) {\n      setInCasino(false);\n      setHasCasinoPlayed(false);\n    }\n  }, [isMyTurn]);\n  const handleBuy = () => {\n    console.log('[GameScreen] handleBuy invoked');\n    setError(null);\n    socket.emit('buyProperty');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'relative'\n    },\n    children: [Object.entries(panelConfigs).map(([panelId, config], index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => setActiveSidePanel(activeSidePanel === panelId ? null : panelId),\n      style: {\n        position: 'fixed',\n        right: activeSidePanel === panelId ? '440px' : '0',\n        top: `${25 + index * 130}px`,\n        width: '60px',\n        height: '120px',\n        backgroundColor: config.color,\n        display: activeSidePanel && activeSidePanel !== panelId ? 'none' : 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        cursor: 'pointer',\n        clipPath: activeSidePanel === panelId ? 'polygon(0 0, 100% 0, 100% 100%, 0 100%)' : 'polygon(40% 0, 100% 0, 100% 100%, 40% 100%, 0 70%, 0 30%)',\n        transition: 'all 0.3s ease',\n        zIndex: 1001\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: '5px',\n          color: 'white',\n          fontSize: '1.2em',\n          transform: activeSidePanel === panelId ? 'rotate(180deg)' : 'none',\n          transition: 'transform 0.3s ease'\n        },\n        children: config.icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 667,\n        columnNumber: 11\n      }, this)\n    }, panelId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 646,\n      columnNumber: 9\n    }, this)), Object.entries(panelConfigs).map(([panelId, config]) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        right: activeSidePanel === panelId ? '0' : '-450px',\n        top: '0',\n        width: '400px',\n        height: '100vh',\n        backgroundColor: `${config.color}dd`,\n        boxShadow: '-2px 0 5px rgba(0, 0, 0, 0.3)',\n        transition: 'right 0.3s ease',\n        zIndex: 1000,\n        padding: '20px',\n        color: 'white',\n        overflowY: 'auto',\n        fontSize: '1.5em',\n        alignItems: 'center',\n        justifyContent: 'center',\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          marginBottom: '20px'\n        },\n        children: config.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 704,\n        columnNumber: 11\n      }, this), panelId === 'info' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Game Rules\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 708,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u2022 Roll dice to move around the board\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 709,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u2022 Buy properties to build your empire\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 710,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u2022 Collect rent from other players\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 711,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u2022 Use special tiles for bonus actions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 712,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 707,\n        columnNumber: 13\n      }, this), panelId === 'bank' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: 'rgba(0, 0, 0, 0.33)',\n            padding: '20px',\n            borderRadius: '8px',\n            marginTop: '70px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            style: {\n              marginBottom: '15px',\n              fontSize: '1em'\n            },\n            children: \"Borrow Money\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 724,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: '10px',\n              fontSize: '1em',\n              marginBottom: '20px',\n              justifyContent: 'center',\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setBorrowAmount(Math.max(1000, borrowAmount - 1000)),\n              style: {\n                padding: '8px 12px',\n                fontSize: '1.7em',\n                cursor: 'pointer',\n                backgroundColor: 'rgba(255, 255, 255, 0.2)',\n                border: 'none',\n                color: 'white',\n                borderRadius: '4px'\n              },\n              children: \"-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 734,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                padding: '8px 16px',\n                backgroundColor: 'rgba(255, 255, 255, 0.15)',\n                borderRadius: '4px',\n                minWidth: '100px',\n                textAlign: 'center',\n                fontSize: '1.7em'\n              },\n              children: [\"$\", borrowAmount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 748,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setBorrowAmount(borrowAmount + 1000),\n              style: {\n                padding: '8px 12px',\n                fontSize: '1.7em',\n                cursor: 'pointer',\n                backgroundColor: 'rgba(255, 255, 255, 0.2)',\n                border: 'none',\n                color: 'white',\n                borderRadius: '4px'\n              },\n              children: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 758,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 725,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              if (socket) {\n                socket.emit('borrowMoney', {\n                  amount: borrowAmount\n                });\n                setBorrowAmount(1000); // Reset to default\n              }\n            },\n            style: {\n              width: '100%',\n              padding: '12px',\n              backgroundColor: 'rgba(255, 255, 255, 0.3)',\n              border: 'none',\n              color: 'white',\n              borderRadius: '4px',\n              cursor: 'pointer',\n              fontSize: '1.1em',\n              transition: 'background-color 0.2s'\n            },\n            children: \"Borrow\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 773,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 718,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: 'rgba(0, 0, 0, 0.33)',\n            padding: '20px',\n            borderRadius: '8px',\n            marginTop: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            style: {\n              marginBottom: '15px'\n            },\n            children: \"Pay Off Loan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 803,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: '10px',\n              marginBottom: '20px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setPayoffAmount(Math.max(1000, payoffAmount - 1000)),\n              disabled: !(player !== null && player !== void 0 && player.loan),\n              style: {\n                padding: '8px 12px',\n                fontSize: '1.2em',\n                cursor: player !== null && player !== void 0 && player.loan ? 'pointer' : 'not-allowed',\n                backgroundColor: player !== null && player !== void 0 && player.loan ? 'rgba(255, 255, 255, 0.2)' : 'rgba(255, 255, 255, 0.1)',\n                border: 'none',\n                color: 'white',\n                borderRadius: '4px'\n              },\n              children: \"-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 810,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                padding: '8px 16px',\n                backgroundColor: 'rgba(255, 255, 255, 0.15)',\n                borderRadius: '4px',\n                minWidth: '100px',\n                textAlign: 'center',\n                fontSize: '1.2em'\n              },\n              children: [\"$\", Math.min(payoffAmount, (player === null || player === void 0 ? void 0 : player.loan) || 0)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 825,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setPayoffAmount(Math.min((player === null || player === void 0 ? void 0 : player.loan) || 0, payoffAmount + 1000)),\n              disabled: !(player !== null && player !== void 0 && player.loan),\n              style: {\n                padding: '8px 12px',\n                fontSize: '1.2em',\n                cursor: player !== null && player !== void 0 && player.loan ? 'pointer' : 'not-allowed',\n                backgroundColor: player !== null && player !== void 0 && player.loan ? 'rgba(255, 255, 255, 0.2)' : 'rgba(255, 255, 255, 0.1)',\n                border: 'none',\n                color: 'white',\n                borderRadius: '4px'\n              },\n              children: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 835,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 804,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              if (socket && player !== null && player !== void 0 && player.loan && (player === null || player === void 0 ? void 0 : player.money) >= payoffAmount) {\n                socket.emit('payoffLoan', {\n                  amount: Math.min(payoffAmount, player.loan)\n                });\n                setPayoffAmount(1000); // Reset to default\n              }\n            },\n            disabled: !(player !== null && player !== void 0 && player.loan) || (player === null || player === void 0 ? void 0 : player.money) < payoffAmount,\n            style: {\n              width: '100%',\n              padding: '12px',\n              backgroundColor: player !== null && player !== void 0 && player.loan && (player === null || player === void 0 ? void 0 : player.money) >= payoffAmount ? 'rgba(255, 255, 255, 0.3)' : 'rgba(255, 255, 255, 0.1)',\n              border: 'none',\n              color: 'white',\n              borderRadius: '4px',\n              cursor: player !== null && player !== void 0 && player.loan && (player === null || player === void 0 ? void 0 : player.money) >= payoffAmount ? 'pointer' : 'not-allowed',\n              fontSize: '1.1em',\n              transition: 'background-color 0.2s'\n            },\n            children: \"Pay Off\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 851,\n            columnNumber: 17\n          }, this), (player === null || player === void 0 ? void 0 : player.money) < payoffAmount && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: '#ff6b6b',\n              marginTop: '10px',\n              textAlign: 'center',\n              fontSize: '0.9em'\n            },\n            children: \"Insufficient funds\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 876,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 797,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '20px',\n            padding: '20px',\n            backgroundColor: 'rgba(0, 0, 0, 0.33)',\n            borderRadius: '8px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Current Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 894,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: '10px',\n              fontSize: '1.2em'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginBottom: '5px'\n              },\n              children: [\"Money: $\", (player === null || player === void 0 ? void 0 : player.money) || 0]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 899,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Outstanding Loan: $\", (player === null || player === void 0 ? void 0 : player.loan) || 0]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 900,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 895,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 888,\n          columnNumber: 15\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: '#ff6b6b',\n            marginTop: '10px',\n            textAlign: 'center'\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 904,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 716,\n        columnNumber: 13\n      }, this), panelId === 'chat' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Game Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 916,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Chat feature coming soon!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 917,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Communicate with other players\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 918,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Share strategies and have fun!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 919,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 915,\n        columnNumber: 13\n      }, this), panelId === 'trade' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Trade Center\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 924,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u2022 Propose trades with other players\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 925,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u2022 Exchange properties\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 926,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u2022 Negotiate deals\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 927,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u2022 View trade history\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 928,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 923,\n        columnNumber: 13\n      }, this)]\n    }, panelId, true, {\n      fileName: _jsxFileName,\n      lineNumber: 683,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        minHeight: '100vh',\n        minWidth: '1200px',\n        position: 'relative',\n        backgroundImage: `url(${bgImage})`,\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n        backgroundRepeat: 'no-repeat',\n        overflow: 'auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1,\n          display: 'flex',\n          flexDirection: 'row',\n          alignItems: 'center',\n          justifyContent: 'center',\n          position: 'relative',\n          minWidth: '1080px',\n          padding: '20px',\n          marginTop: '220px',\n          marginBottom: '20px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'relative',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            width: '100%',\n            height: '100%',\n            minHeight: '600px' // Ensure minimum height for the board container\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'relative',\n              margin: '200px' // Add margin around the board to make space for player stats\n            },\n            children: [/*#__PURE__*/_jsxDEV(Board, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 974,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(PlayerStats, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 975,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 970,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 961,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 948,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '60%',\n          minWidth: '800px',\n          height: '240px',\n          minHeight: '400px',\n          background: 'rgba(80, 80, 80, 0.9)',\n          borderTop: '2px solid #bbb',\n          boxShadow: '0 -2px 10px rgba(0, 0, 0, 0.2)',\n          zIndex: 100,\n          display: 'flex',\n          border: '2px solid #666',\n          borderRadius: '30px 30px 0 0',\n          margin: '80px auto 0 auto'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: 1,\n            position: 'relative',\n            borderRight: '2px solid #666',\n            padding: '10px',\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            justifyContent: 'center',\n            background: 'rgba(60, 60, 60, 0.3)',\n            borderRadius: '30px 30px 30px 30px',\n            overflow: 'hidden'\n          },\n          children: [isMyTurn && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: Dicebox,\n              alt: \"Dice Board\",\n              style: {\n                position: 'absolute',\n                top: 0,\n                left: 0,\n                width: '100%',\n                height: '100%',\n                objectFit: 'fill',\n                objectPosition: 'center',\n                pointerEvents: 'none'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1011,\n              columnNumber: 13\n            }, this), testRollMode && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                position: 'absolute',\n                top: '50%',\n                left: '50%',\n                transform: 'translate(-50%, -50%)',\n                backgroundColor: 'rgba(0, 0, 0, 0.8)',\n                color: '#fff',\n                padding: '8px 16px',\n                borderRadius: '4px',\n                zIndex: 100\n              },\n              children: testRollInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1026,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(DiceRoller, {\n            testRollMode: testRollMode,\n            hasCasinoPlayed: hasCasinoPlayed,\n            style: {\n              position: 'relative',\n              zIndex: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1042,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 996,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: 1,\n            borderRight: '2px solid #666',\n            padding: '10px',\n            display: 'flex',\n            flexDirection: 'column',\n            background: 'rgba(60, 60, 60, 0.3)'\n          },\n          children: /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1058,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1050,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: 1,\n            padding: '10px',\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            justifyContent: 'center',\n            background: 'rgba(60, 60, 60, 0.3)',\n            borderRadius: '0 10px 0 0'\n          },\n          children: (_tileMeta$name2 => {\n            // Show \"Your Turn\" for current player before landing\n            if (isMyTurn && !movementDone) {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  height: '100%',\n                  color: '#fff',\n                  fontSize: '1.6em',\n                  fontWeight: 'bold',\n                  textShadow: '2px 2px 4px rgba(0,0,0,0.5)'\n                },\n                children: \"Your Turn\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1076,\n                columnNumber: 19\n              }, this);\n            }\n\n            // Buy Property\n            if (isMyTurn && (tileMeta === null || tileMeta === void 0 ? void 0 : tileMeta.type) === 'property' && !players.some(p => p.properties.includes(tileMeta === null || tileMeta === void 0 ? void 0 : tileMeta.id))) {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  flexDirection: 'column',\n                  alignItems: 'center',\n                  gap: '10px'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: handleBuy,\n                  disabled: player.money < tileMeta.cost,\n                  style: {\n                    padding: '12px 24px',\n                    fontSize: '1.1em',\n                    backgroundColor: player.money >= tileMeta.cost ? '#4CAF50' : '#ccc',\n                    color: player.money >= tileMeta.cost ? 'white' : '#ff0000',\n                    border: 'none',\n                    borderRadius: '8px',\n                    cursor: player.money >= tileMeta.cost ? 'pointer' : 'not-allowed',\n                    fontWeight: 'bold'\n                  },\n                  children: [\"Buy ($\", tileMeta.cost, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1101,\n                  columnNumber: 17\n                }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    color: 'tomato',\n                    margin: 0\n                  },\n                  children: error\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1118,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1095,\n                columnNumber: 19\n              }, this);\n            }\n\n            // Road Cash Game\n            if (isMyTurn && (tileMeta === null || tileMeta === void 0 ? void 0 : tileMeta.id) === 22) {\n              return /*#__PURE__*/_jsxDEV(RoadCash, {\n                isMyTurn: isMyTurn,\n                socket: socket\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1126,\n                columnNumber: 24\n              }, this);\n            }\n\n            // Casino\n            if (inCasino && isMyTurn) {\n              return /*#__PURE__*/_jsxDEV(CasinoBetting, {\n                isMyTurn: isMyTurn,\n                currentMoney: (player === null || player === void 0 ? void 0 : player.money) || 0,\n                socket: socket,\n                player: player,\n                onCasinoPlayed: () => setHasCasinoPlayed(true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1132,\n                columnNumber: 19\n              }, this);\n            }\n\n            // Corner Choice\n            if (isMyTurn && tileMeta !== null && tileMeta !== void 0 && (_tileMeta$name2 = tileMeta.name) !== null && _tileMeta$name2 !== void 0 && _tileMeta$name2.toLowerCase().includes('choose corner')) {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'grid',\n                  gridTemplateColumns: '1fr 1fr',\n                  gridTemplateRows: '1fr 1fr',\n                  gap: '20px',\n                  width: '100%',\n                  maxWidth: '600px',\n                  padding: '20px',\n                  margin: '0 auto'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => {\n                    socket.emit('teleport', {\n                      toTile: 1,\n                      prevTile: 30\n                    });\n                    setError(null);\n                    setHasChosenCorner(true);\n                  },\n                  style: {\n                    margin: 0,\n                    padding: 0,\n                    border: '3px solid #666',\n                    borderRadius: '12px',\n                    backgroundImage: `url(${startIcon})`,\n                    backgroundSize: '80%',\n                    backgroundRepeat: 'no-repeat',\n                    backgroundPosition: 'center 40%',\n                    cursor: 'pointer',\n                    display: 'flex',\n                    alignItems: 'flex-end',\n                    justifyContent: 'center',\n                    width: '100%',\n                    height: '100%',\n                    minHeight: '180px',\n                    position: 'relative',\n                    backgroundColor: 'rgba(255, 255, 255, 0.15)',\n                    transition: 'transform 0.2s, background-color 0.2s',\n                    ':hover': {\n                      transform: 'scale(1.02)',\n                      backgroundColor: 'rgba(255, 255, 255, 0.2)'\n                    }\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      padding: '8px 16px',\n                      backgroundColor: 'rgba(0,0,0,0.6)',\n                      borderRadius: '0 0 9px 9px',\n                      color: '#fff',\n                      fontWeight: 'bold',\n                      fontSize: '1.4em',\n                      textShadow: '2px 2px 4px rgba(0,0,0,0.7)',\n                      position: 'absolute',\n                      bottom: 0,\n                      width: '100%',\n                      textAlign: 'center'\n                    },\n                    children: \"Start\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1186,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1155,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => {\n                    socket.emit('teleport', {\n                      toTile: 22,\n                      prevTile: 21\n                    });\n                    setError(null);\n                    setHasChosenCorner(true);\n                  },\n                  style: {\n                    margin: 0,\n                    padding: 0,\n                    border: '3px solid #666',\n                    borderRadius: '12px',\n                    backgroundImage: `url(${roadIcon})`,\n                    backgroundSize: '80%',\n                    backgroundRepeat: 'no-repeat',\n                    backgroundPosition: 'center 40%',\n                    cursor: 'pointer',\n                    display: 'flex',\n                    alignItems: 'flex-end',\n                    justifyContent: 'center',\n                    width: '100%',\n                    height: '100%',\n                    minHeight: '180px',\n                    position: 'relative',\n                    backgroundColor: 'rgba(255, 255, 255, 0.15)',\n                    transition: 'transform 0.2s, background-color 0.2s',\n                    ':hover': {\n                      transform: 'scale(1.02)',\n                      backgroundColor: 'rgba(255, 255, 255, 0.2)'\n                    }\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      padding: '8px 16px',\n                      backgroundColor: 'rgba(0,0,0,0.6)',\n                      borderRadius: '0 0 9px 9px',\n                      color: '#fff',\n                      fontWeight: 'bold',\n                      fontSize: '1.4em',\n                      textShadow: '2px 2px 4px rgba(0,0,0,0.7)',\n                      position: 'absolute',\n                      bottom: 0,\n                      width: '100%',\n                      textAlign: 'center'\n                    },\n                    children: \"Road\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1231,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1200,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => {\n                    socket.emit('teleport', {\n                      toTile: 7,\n                      prevTile: 6\n                    });\n                    setError(null);\n                    setHasChosenCorner(true);\n                  },\n                  style: {\n                    margin: 0,\n                    padding: 0,\n                    border: '3px solid #666',\n                    borderRadius: '12px',\n                    backgroundImage: `url(${hotelIcon})`,\n                    backgroundSize: '80%',\n                    backgroundRepeat: 'no-repeat',\n                    backgroundPosition: 'center 40%',\n                    cursor: 'pointer',\n                    display: 'flex',\n                    alignItems: 'flex-end',\n                    justifyContent: 'center',\n                    width: '100%',\n                    height: '100%',\n                    minHeight: '180px',\n                    position: 'relative',\n                    backgroundColor: 'rgba(255, 255, 255, 0.15)',\n                    transition: 'transform 0.2s, background-color 0.2s',\n                    ':hover': {\n                      transform: 'scale(1.02)',\n                      backgroundColor: 'rgba(255, 255, 255, 0.2)'\n                    }\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      padding: '8px 16px',\n                      backgroundColor: 'rgba(0,0,0,0.6)',\n                      borderRadius: '0 0 9px 9px',\n                      color: '#fff',\n                      fontWeight: 'bold',\n                      fontSize: '1.4em',\n                      textShadow: '2px 2px 4px rgba(0,0,0,0.7)',\n                      position: 'absolute',\n                      bottom: 0,\n                      width: '100%',\n                      textAlign: 'center'\n                    },\n                    children: \"Hotel\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1276,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1245,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => {\n                    socket.emit('teleport', {\n                      toTile: 16,\n                      prevTile: 15\n                    });\n                    setError(null);\n                    setHasChosenCorner(true);\n                  },\n                  style: {\n                    margin: 0,\n                    padding: 0,\n                    border: '3px solid #666',\n                    borderRadius: '12px',\n                    backgroundImage: `url(${casinoIcon})`,\n                    backgroundSize: '80%',\n                    backgroundRepeat: 'no-repeat',\n                    backgroundPosition: 'center 40%',\n                    cursor: 'pointer',\n                    display: 'flex',\n                    alignItems: 'flex-end',\n                    justifyContent: 'center',\n                    width: '100%',\n                    height: '100%',\n                    minHeight: '180px',\n                    position: 'relative',\n                    backgroundColor: 'rgba(255, 255, 255, 0.15)',\n                    transition: 'transform 0.2s, background-color 0.2s',\n                    ':hover': {\n                      transform: 'scale(1.02)',\n                      backgroundColor: 'rgba(255, 255, 255, 0.2)'\n                    }\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      padding: '8px 16px',\n                      backgroundColor: 'rgba(0,0,0,0.6)',\n                      borderRadius: '0 0 9px 9px',\n                      color: '#fff',\n                      fontWeight: 'bold',\n                      fontSize: '1.4em',\n                      textShadow: '2px 2px 4px rgba(0,0,0,0.7)',\n                      position: 'absolute',\n                      bottom: 0,\n                      width: '100%',\n                      textAlign: 'center'\n                    },\n                    children: \"Casino\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1321,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1290,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1145,\n                columnNumber: 19\n              }, this);\n            }\n\n            // Show error message if any\n            if (error) {\n              return /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  color: 'tomato',\n                  margin: 0\n                },\n                children: error\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1342,\n                columnNumber: 19\n              }, this);\n            }\n\n            // Show empty state for non-turn players or when no action is needed\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center',\n                justifyContent: 'center',\n                height: '100%',\n                gap: '20px'\n              },\n              children: rpsGame && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: rpsResult ?\n                /*#__PURE__*/\n                // Show result\n                _jsxDEV(\"div\", {\n                  style: {\n                    textAlign: 'center',\n                    color: '#fff',\n                    fontSize: '1.4em'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [rpsResult.landingPlayer.name, \": \", rpsResult.landingPlayerChoice]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1365,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [rpsResult.closestPlayer.name, \": \", rpsResult.closestPlayerChoice]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1368,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      marginTop: '10px',\n                      color: '#4CAF50'\n                    },\n                    children: [rpsResult.landingPlayerWon ? rpsResult.landingPlayer.name : rpsResult.closestPlayer.name, \" won!\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1371,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1360,\n                  columnNumber: 25\n                }, this) : rpsTieAmount ? /*#__PURE__*/_jsxDEV(RPSTieResolver, {\n                  maxAmount: rpsTieAmount.maxAmount,\n                  gameId: rpsTieAmount.gameId,\n                  socket: socket,\n                  onResolved: () => {\n                    setRpsTieAmount(null);\n                    setRpsGame(null);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1376,\n                  columnNumber: 25\n                }, this) :\n                /*#__PURE__*/\n                // Show RPS buttons\n                _jsxDEV(\"div\", {\n                  style: {\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'center',\n                    gap: '15px'\n                  },\n                  children: [((player === null || player === void 0 ? void 0 : player.socketId) === rpsGame.landingPlayer.socketId || (player === null || player === void 0 ? void 0 : player.socketId) === rpsGame.closestPlayer.socketId) && !rpsChoice && /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        color: '#fff',\n                        fontSize: '1.2em'\n                      },\n                      children: \"Choose your move:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1396,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        display: 'flex',\n                        gap: '10px'\n                      },\n                      children: ['rock', 'paper', 'scissors'].map(choice => /*#__PURE__*/_jsxDEV(\"button\", {\n                        onClick: () => {\n                          setRpsChoice(choice);\n                          socket.emit('stonePaperScissorsChoice', {\n                            choice,\n                            gameId: rpsGame.gameId\n                          });\n                        },\n                        style: {\n                          padding: '12px 24px',\n                          fontSize: '1.1em',\n                          backgroundColor: '#2196F3',\n                          color: 'white',\n                          border: 'none',\n                          borderRadius: '4px',\n                          cursor: 'pointer',\n                          textTransform: 'capitalize'\n                        },\n                        children: choice\n                      }, choice, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1404,\n                        columnNumber: 35\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1399,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true), rpsChoice && /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      color: '#fff',\n                      fontSize: '1.2em'\n                    },\n                    children: [\"You chose: \", rpsChoice]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1431,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1387,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1348,\n              columnNumber: 17\n            }, this);\n          })()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1062,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 981,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 935,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 641,\n    columnNumber: 5\n  }, this);\n}\n_s2(GameScreen, \"KQQvV4KyyNUkqBP2oDS08eUMSN0=\");\n_c2 = GameScreen;\nvar _c, _c2;\n$RefreshReg$(_c, \"CasinoBetting\");\n$RefreshReg$(_c2, \"GameScreen\");","map":{"version":3,"names":["React","useContext","useState","useEffect","bgImage","Dicebox","startIcon","hotelIcon","casinoIcon","roadIcon","Board","DiceRoller","Dashboard","PlayerStats","RoadCash","RPSTieResolver","GameContext","tiles","jsxDEV","_jsxDEV","Fragment","_Fragment","CasinoBetting","isMyTurn","currentMoney","socket","player","onCasinoPlayed","_s","betAmount","setBetAmount","selectedBet","setSelectedBet","showResult","setShowResult","diceResult","setDiceResult","isActive","setIsActive","handleAmountChange","delta","newAmount","Math","max","min","handleBetSelect","bet","handleRoll","emit","betType","handleCasinoResult","playerId","dice","amount","won","playerMoney","socketId","on","off","style","display","flexDirection","alignItems","justifyContent","height","gap","children","src","alt","width","fileName","_jsxFileName","lineNumber","columnNumber","color","fontWeight","fontSize","onClick","disabled","padding","cursor","border","borderRadius","minWidth","textAlign","map","backgroundColor","textTransform","marginTop","opacity","_c","GameScreen","_s2","players","setPlayer","setPlayers","currentPlayerId","movementDone","error","setError","testRollInput","setTestRollInput","testRollMode","setTestRollMode","inCasino","setInCasino","hasCasinoPlayed","setHasCasinoPlayed","hasChosenCorner","setHasChosenCorner","rpsGame","setRpsGame","rpsChoice","setRpsChoice","rpsResult","setRpsResult","rpsTieAmount","setRpsTieAmount","activeSidePanel","setActiveSidePanel","borrowAmount","setBorrowAmount","payoffAmount","setPayoffAmount","handleBorrowResponse","success","setTimeout","panelConfigs","info","title","icon","bank","chat","trade","tileMeta","find","t","id","tileId","_tileMeta$name","name","toLowerCase","includes","handleKeyPress","e","key","startsWith","rollNumber","parseInt","slice","isNaN","testRoll","prev","length","window","addEventListener","removeEventListener","console","log","type","cost","money","properties","updated","p","playerName","temporary","propertyId","action","newMoney","prevPlayers","filter","property","playerSocketId","reason","payerSocketId","payerMoney","ownerSocketId","ownerMoney","baseRent","multiplier","propertyName","_players$find","_players$find2","toLocaleString","marginLeft","game","result","updatedPlayers","landingPlayer","closestPlayer","landingPlayerId","maxAmount","gameId","currentPlayer","from","to","isCasinoTile","handleBuy","position","Object","entries","panelId","config","index","right","top","clipPath","transition","zIndex","transform","boxShadow","overflowY","marginBottom","loan","minHeight","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","overflow","flex","margin","background","borderTop","borderRight","left","objectFit","objectPosition","pointerEvents","_tileMeta$name2","textShadow","some","gridTemplateColumns","gridTemplateRows","maxWidth","toTile","prevTile","bottom","landingPlayerChoice","closestPlayerChoice","landingPlayerWon","onResolved","choice","_c2","$RefreshReg$"],"sources":["C:/Users/addhy/Desktop/Business_web - Copy (2)/client/src/components/GameScreen.js"],"sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\nimport bgImage from '../assets/bg.png';\nimport Dicebox from '../assets/diceBoard.png';\nimport startIcon from '../assets/start.png';\nimport hotelIcon from '../assets/hotel.png';\nimport casinoIcon from '../assets/casino.png';\nimport roadIcon from '../assets/road.png';\nimport Board from './Board';\nimport DiceRoller from './DiceRoller';\nimport Dashboard from './Dashboard';\nimport PlayerStats from './PlayerStats';\nimport RoadCash from './RoadCash';\nimport RPSTieResolver from './RPSTieResolver';\nimport { GameContext } from '../context/GameContext';\nimport { tiles } from '../data/tiles';\n\nconst CasinoBetting = ({ isMyTurn, currentMoney, socket, player, onCasinoPlayed }) => {\n  const [betAmount, setBetAmount] = useState(1000);\n  const [selectedBet, setSelectedBet] = useState(null);\n  const [showResult, setShowResult] = useState(null);\n  const [diceResult, setDiceResult] = useState(null);\n  const [isActive, setIsActive] = useState(true);\n\n  const handleAmountChange = (delta) => {\n    const newAmount = Math.max(1000, Math.min(currentMoney, betAmount + delta));\n    setBetAmount(newAmount);\n  };\n\n  const handleBetSelect = (bet) => {\n    setSelectedBet(bet);\n  };\n\n  const handleRoll = () => {\n    if (selectedBet && betAmount >= 1000 && betAmount <= currentMoney) {\n      socket.emit('casinoRoll', { betAmount, betType: selectedBet });\n    }\n  };\n\n  useEffect(() => {\n    const handleCasinoResult = ({ playerId, dice, amount, won, playerMoney }) => {\n      if (playerId === player.socketId) {\n        setDiceResult(dice);\n        setShowResult({ won, amount });\n        setIsActive(false);\n        onCasinoPlayed();\n      }\n    };\n\n    socket.on('casinoResult', handleCasinoResult);\n    return () => socket.off('casinoResult', handleCasinoResult);\n  }, [socket, player.socketId, onCasinoPlayed]);\n\n  // If not active (after result), show nothing\n  if (!isActive) {\n    if (showResult && diceResult) {\n      return (\n        <div style={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n          height: '100%',\n          gap: '20px'\n        }}>\n          <div style={{\n            display: 'flex',\n            gap: '10px',\n            justifyContent: 'center'\n          }}>\n            <img \n              src={`/dice/dice${diceResult[0]}.png`} \n              alt={`Die ${diceResult[0]}`} \n              width={125}\n              height={125}\n            />\n            <img \n              src={`/dice/dice${diceResult[1]}.png`} \n              alt={`Die ${diceResult[1]}`} \n              width={125}\n              height={125}\n            />\n          </div>\n          <div style={{\n            color: showResult.won ? '#4CAF50' : '#f44336',\n            fontWeight: 'bold',\n            fontSize: '1.2em'\n          }}>\n            {showResult.won ? `You won $${showResult.amount}!` : `You lost $${showResult.amount}`}\n          </div>\n        </div>\n      );\n    }\n    return null;\n  }\n\n  return (\n    <div style={{\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: '100%',\n      gap: '15px'\n    }}>\n      {/* Bet amount control */}\n      <div style={{\n        display: 'flex',\n        alignItems: 'center',\n        gap: '10px'\n      }}>\n        <button\n          onClick={() => handleAmountChange(-1000)}\n          disabled={!isMyTurn || betAmount <= 1000}\n          style={{\n            padding: '8px 12px',\n            fontSize: '1.2em',\n            cursor: isMyTurn ? 'pointer' : 'not-allowed'\n          }}\n        >\n          -\n        </button>\n        <div style={{\n          padding: '8px 16px',\n          border: '1px solid #ccc',\n          borderRadius: '4px',\n          minWidth: '100px',\n          textAlign: 'center'\n        }}>\n          ${betAmount}\n        </div>\n        <button\n          onClick={() => handleAmountChange(1000)}\n          disabled={!isMyTurn || betAmount >= currentMoney}\n          style={{\n            padding: '8px 12px',\n            fontSize: '1.2em',\n            cursor: isMyTurn ? 'pointer' : 'not-allowed'\n          }}\n        >\n          +\n        </button>\n      </div>\n\n      {/* Bet type buttons */}\n      <div style={{\n        display: 'flex',\n        gap: '10px'\n      }}>\n        {['above', '7', 'below'].map(bet => (\n          <button\n            key={bet}\n            onClick={() => handleBetSelect(bet)}\n            disabled={!isMyTurn}\n            style={{\n              padding: '8px 16px',\n              backgroundColor: selectedBet === bet ? '#4CAF50' : '#fff',\n              color: selectedBet === bet ? '#fff' : '#000',\n              border: '1px solid #666',\n              borderRadius: '4px',\n              cursor: isMyTurn ? 'pointer' : 'not-allowed',\n              textTransform: 'capitalize'\n            }}\n          >\n            {bet}\n          </button>\n        ))}\n      </div>\n\n      {/* Roll button */}\n      <button\n        onClick={handleRoll}\n        disabled={!isMyTurn || !selectedBet || betAmount < 1000 || betAmount > currentMoney}\n        style={{\n          padding: '8px 24px',\n          backgroundColor: '#2196F3',\n          color: '#fff',\n          border: 'none',\n          borderRadius: '4px',\n          marginTop: '10px',\n          cursor: isMyTurn && selectedBet ? 'pointer' : 'not-allowed',\n          opacity: isMyTurn && selectedBet ? 1 : 0.7\n        }}\n      >\n        Roll\n      </button>\n    </div>\n  );\n};\n\nexport default function GameScreen() {\n  const {\n    player,\n    players,\n    setPlayer,\n    setPlayers,\n    currentPlayerId,\n    socket,\n    movementDone\n  } = useContext(GameContext);\n\n  const isMyTurn = player?.socketId === currentPlayerId;\n  const [error, setError] = useState(null);\n  const [testRollInput, setTestRollInput] = useState('');\n  const [testRollMode, setTestRollMode] = useState(false);\n  const [inCasino, setInCasino] = useState(false);\n  const [hasCasinoPlayed, setHasCasinoPlayed] = useState(false);\n  const [hasChosenCorner, setHasChosenCorner] = useState(false);\n  const [rpsGame, setRpsGame] = useState(null);\n  const [rpsChoice, setRpsChoice] = useState(null);\n  const [rpsResult, setRpsResult] = useState(null);\n  const [rpsTieAmount, setRpsTieAmount] = useState(null);\n  const [activeSidePanel, setActiveSidePanel] = useState(null);\n  const [borrowAmount, setBorrowAmount] = useState(1000);\n  const [payoffAmount, setPayoffAmount] = useState(1000);\n\n  // Add socket event listener for borrow response\n  useEffect(() => {\n    if (!socket) return;\n\n    const handleBorrowResponse = ({ success, error }) => {\n      if (!success && error) {\n        setError(error);\n        setTimeout(() => setError(null), 5000);\n      }\n    };\n\n    socket.on('borrowResponse', handleBorrowResponse);\n\n    return () => {\n      socket.off('borrowResponse', handleBorrowResponse);\n    };\n  }, [socket]);\n\n  // Define panel configurations\n  const panelConfigs = {\n    info: {\n      color: '#4CAF50', // Green\n      title: 'Game Info',\n      icon: 'ðŸ“‹'\n    },\n    bank: {\n      color: '#2196F3', // Blue\n      title: 'Bank',\n      icon: 'ðŸ’°'\n    },\n    chat: {\n      color: '#9C27B0', // Purple\n      title: 'Chat',\n      icon: 'ðŸ’¬'\n    },\n    trade: {\n      color: '#FF9800', // Orange\n      title: 'Trade',\n      icon: 'ðŸ”„'\n    }\n  };\n\n  // Determine metadata for the current tile\n  const tileMeta = tiles.find(t => t.id === player?.tileId);\n\n  // Reset hasChosenCorner when turn ends or tile changes\n  useEffect(() => {\n    if (!isMyTurn || !tileMeta?.name?.toLowerCase().includes('choose corner')) {\n      setHasChosenCorner(false);\n    }\n  }, [isMyTurn, tileMeta]);\n\n  // Add keyboard listener for test rolls\n  useEffect(() => {\n    const handleKeyPress = (e) => {\n      if (!isMyTurn) return;\n\n      // Build up the test roll input\n      if (e.key === 'Enter' && testRollInput.startsWith('testroll')) {\n        const rollNumber = parseInt(testRollInput.slice(8));\n        if (!isNaN(rollNumber) && rollNumber >= 2 && rollNumber <= 12) {\n          socket.emit('rollDice', { testRoll: rollNumber });\n          setTestRollInput('');\n          setTestRollMode(false);\n        }\n      } else if (e.key === 'Backspace') {\n        setTestRollInput(prev => prev.slice(0, -1));\n      } else if (e.key.length === 1) { // Regular character\n        setTestRollInput(prev => prev + e.key);\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyPress);\n    return () => window.removeEventListener('keydown', handleKeyPress);\n  }, [isMyTurn, testRollInput, socket]);\n\n  // Show current test roll input if active\n  useEffect(() => {\n    if (testRollInput.startsWith('testroll')) {\n      setTestRollMode(true);\n    } else if (testRollInput.length === 0) {\n      setTestRollMode(false);\n    }\n  }, [testRollInput]);\n\n  // Debug logging to trace condition\n  useEffect(() => {\n    console.log('[GameScreen] Debug:', {\n      isMyTurn,\n      movementDone,\n      tileMeta,\n      \"player.tileId\": player?.tileId,\n      \"tileMeta.type\": tileMeta?.type,\n      \"tileMeta.cost\": tileMeta?.cost,\n      \"player.money\": player?.money,\n      testRollMode,\n      testRollInput\n    });\n  }, [isMyTurn, movementDone, tileMeta, player, testRollMode, testRollInput]);\n\n  // Listen for purchase events\n  useEffect(() => {\n    socket.on('purchaseSuccess', ({ socketId, money, properties }) => {\n      console.log('[GameScreen] purchaseSuccess', { socketId, money, properties });\n      const updated = players.map(p =>\n        p.socketId === socketId ? { ...p, money, properties } : p\n      );\n      setPlayers(updated);\n      if (player.socketId === socketId) {\n        setPlayer({ ...player, money, properties });\n      }\n      setError(null);\n    });\n\n    // Add player disconnect handler\n    socket.on('playerDisconnected', ({ playerName, temporary }) => {\n      if (temporary) {\n        setError(`${playerName} temporarily disconnected. They can rejoin with the same name.`);\n        setTimeout(() => setError(null), 5000);\n      }\n    });\n\n    // Add property update handler\n    socket.on('propertyUpdated', ({ playerId, propertyId, action, newMoney }) => {\n      console.log('[GameScreen] propertyUpdated', { playerId, propertyId, action, newMoney });\n      \n      // Update players' properties and money\n      setPlayers(prevPlayers => {\n        return prevPlayers.map(p => {\n          if (p.socketId === playerId) {\n            return {\n              ...p,\n              properties: action === 'add'\n                ? [...(p.properties || []), propertyId]\n                : (p.properties || []).filter(id => id !== propertyId),\n              money: newMoney // Update the player's money\n            };\n          }\n          return p;\n        });\n      });\n\n      // Update current player if they're involved\n      if (player.socketId === playerId) {\n        setPlayer(prev => ({\n          ...prev,\n          properties: action === 'add'\n            ? [...(prev.properties || []), propertyId]\n            : (prev.properties || []).filter(id => id !== propertyId),\n          money: newMoney // Update the current player's money\n        }));\n\n        // Show message when selling property\n        if (action === 'remove') {\n          const property = tiles.find(t => t.id === propertyId);\n          setError(`You sold ${property.name} for $${property.cost}`);\n          setTimeout(() => setError(null), 5000);\n        }\n      }\n    });\n\n    // Add start bonus handler\n    socket.on('startBonus', ({ playerSocketId, newMoney, amount, reason }) => {\n      console.log('[GameScreen] startBonus', { playerSocketId, newMoney, amount, reason });\n      \n      // Update players' money\n      const updated = players.map(p =>\n        p.socketId === playerSocketId ? { ...p, money: newMoney } : p\n      );\n      setPlayers(updated);\n\n      // Update current player's money if they got the bonus\n      if (player.socketId === playerSocketId) {\n        setPlayer({ ...player, money: newMoney });\n        setError(`You received $${amount} for ${reason} Start!`);\n        // Clear bonus message after 5 seconds\n        setTimeout(() => setError(null), 5000);\n      }\n    });\n\n    // Add playerMoved event handler\n    socket.on('playerMoved', ({ playerId, tileId }) => {\n      console.log('[GameScreen] playerMoved', { playerId, tileId });\n      if (playerId === player?.socketId) {\n        setPlayer(prev => ({ ...prev, tileId }));\n      }\n      setPlayers(prev => \n        prev.map(p => p.socketId === playerId ? { ...p, tileId } : p)\n      );\n      // Clear any previous messages when a player moves\n      setError(null);\n    });\n\n    socket.on('purchaseFailed', ({ reason }) => {\n      console.log('[GameScreen] purchaseFailed', reason);\n      if (reason === 'insufficientFunds') {\n        setError(\"You don't have enough money.\");\n      } else if (reason === 'alreadyOwned') {\n        setError('You already own this property.');\n      } else {\n        setError('Cannot buy this property.');\n      }\n      // Clear error message after 5 seconds\n      setTimeout(() => setError(null), 5000);\n    });\n\n    // Add rent payment handler\n    socket.on('rentPaid', ({ payerSocketId, payerMoney, ownerSocketId, ownerMoney, amount, baseRent, multiplier, propertyName }) => {\n      console.log('[GameScreen] rentPaid', { payerSocketId, ownerSocketId, amount });\n      \n      // Update players' money\n      const updated = players.map(p => {\n        if (p.socketId === payerSocketId) return { ...p, money: payerMoney };\n        if (p.socketId === ownerSocketId) return { ...p, money: ownerMoney };\n        return p;\n      });\n      setPlayers(updated);\n\n      // Show rent payment notification with stylized multiplier\n      setError(\n        <div style={{ display: 'flex', alignItems: 'center', gap: '4px', justifyContent: 'center' }}>\n          <span>\n            {`${players.find(p => p.socketId === payerSocketId)?.name} paid rent to ${players.find(p => p.socketId === ownerSocketId)?.name} for ${propertyName} - $${baseRent.toLocaleString()}`}\n          </span>\n          {multiplier > 1 && (\n            <span style={{ \n              color: '#FFA500', \n              fontSize: '1.3em', \n              fontWeight: 'bold',\n              marginLeft: '4px'\n            }}>\n              {`X${multiplier}`}\n            </span>\n          )}\n        </div>\n      );\n      setTimeout(() => setError(null), 5000);\n    });\n\n    // Add rent bonus handler\n    socket.on('rentBonus', ({ playerSocketId, newMoney, amount, propertyName }) => {\n      console.log('[GameScreen] rentBonus', { playerSocketId, amount });\n      \n      // Update player's money\n      const updated = players.map(p =>\n        p.socketId === playerSocketId ? { ...p, money: newMoney } : p\n      );\n      setPlayers(updated);\n\n      // Update current player if they got the bonus\n      if (player.socketId === playerSocketId) {\n        setPlayer({ ...player, money: newMoney });\n        setError(`You received $${amount} bonus for landing on your property ${propertyName}!`);\n        // Clear bonus message after 5 seconds\n        setTimeout(() => setError(null), 5000);\n      }\n    });\n\n    // Add casino result handler for other players\n    socket.on('casinoResult', ({ playerId, dice, amount, won, playerName, playerMoney }) => {\n      console.log('[GameScreen] casinoResult', { playerId, dice, amount, won, playerName, playerMoney });\n      \n      // Update player money in the game state\n      const updated = players.map(p =>\n        p.socketId === playerId ? { ...p, money: playerMoney } : p\n      );\n      setPlayers(updated);\n      \n      if (player.socketId === playerId) {\n        setPlayer(prev => ({ ...prev, money: playerMoney }));\n      } else {\n        setError(`${playerName} ${won ? 'won' : 'lost'} $${amount} at the casino!`);\n        setTimeout(() => setError(null), 5000);\n      }\n    });\n\n    // Add roadCash handler\n    socket.on('roadCashResult', ({ playerSocketId, newMoney, amount }) => {\n      console.log('[GameScreen] roadCashResult', { playerSocketId, newMoney, amount });\n      \n      // Update player's money\n      const updated = players.map(p =>\n        p.socketId === playerSocketId ? { ...p, money: newMoney } : p\n      );\n      setPlayers(updated);\n\n      // Update current player if they got the money\n      if (player.socketId === playerSocketId) {\n        setPlayer({ ...player, money: newMoney });\n        setError(`You received $${amount} from the road!`);\n        // Clear message after 5 seconds\n        setTimeout(() => setError(null), 5000);\n      }\n    });\n\n    // Add RPS event listeners\n    socket.on('stonePaperScissorsStart', (game) => {\n      setRpsGame(game);\n      setRpsChoice(null);\n      setRpsResult(null);\n      setRpsTieAmount(null);\n    });\n\n    socket.on('stonePaperScissorsResult', (result) => {\n      console.log('RPS Result received:', result);\n      // First set the result to show the outcome\n      setRpsResult(result);\n      \n      // Update players' money in the game state\n      const updatedPlayers = players.map(p => {\n        if (p.socketId === result.landingPlayer.socketId) {\n          return { ...p, money: result.landingPlayer.money };\n        }\n        if (p.socketId === result.closestPlayer.socketId) {\n          return { ...p, money: result.closestPlayer.money };\n        }\n        return p;\n      });\n      setPlayers(updatedPlayers);\n\n      // Update current player's money if they were involved\n      if (player.socketId === result.landingPlayer.socketId) {\n        setPlayer(prev => ({ ...prev, money: result.landingPlayer.money }));\n      } else if (player.socketId === result.closestPlayer.socketId) {\n        setPlayer(prev => ({ ...prev, money: result.closestPlayer.money }));\n      }\n\n      // Clear game state after a short delay to show the result\n      setTimeout(() => {\n        setRpsGame(null);\n      }, 3000);\n    });\n\n    socket.on('stonePaperScissorsTie', ({ landingPlayerId, maxAmount, gameId }) => {\n      console.log('[DEBUG] Received stonePaperScissorsTie event:', {\n        landingPlayerId,\n        maxAmount,\n        gameId,\n        currentPlayerId: player?.socketId\n      });\n      if (player?.socketId === landingPlayerId) {\n        setRpsTieAmount({ maxAmount, gameId });\n      }\n    });\n\n    socket.on('stonePaperScissorsTieResolved', (result) => {\n      console.log('[DEBUG] Received stonePaperScissorsTieResolved event:', {\n        result,\n        currentPlayer: player?.socketId,\n        currentMoney: player?.money\n      });\n\n      // Update players' money in the game state\n      const updatedPlayers = players.map(p => {\n        if (p.socketId === result.landingPlayer.socketId) {\n          return { ...p, money: result.landingPlayer.money };\n        }\n        if (p.socketId === result.closestPlayer.socketId) {\n          return { ...p, money: result.closestPlayer.money };\n        }\n        return p;\n      });\n      setPlayers(updatedPlayers);\n\n      // Update current player's money if they were involved\n      if (player?.socketId === result.landingPlayer.socketId) {\n        console.log('[DEBUG] Updating landing player money:', {\n          from: player.money,\n          to: result.landingPlayer.money\n        });\n        setPlayer(prev => ({ ...prev, money: result.landingPlayer.money }));\n      } else if (player?.socketId === result.closestPlayer.socketId) {\n        console.log('[DEBUG] Updating closest player money:', {\n          from: player.money,\n          to: result.closestPlayer.money\n        });\n        setPlayer(prev => ({ ...prev, money: result.closestPlayer.money }));\n      }\n\n      setRpsGame(null);\n      setRpsResult(null);\n      setRpsTieAmount(null);\n      setRpsChoice(null);\n    });\n\n    return () => {\n      socket.off('purchaseSuccess');\n      socket.off('purchaseFailed');\n      socket.off('rentPaid');\n      socket.off('playerMoved');\n      socket.off('rentBonus');\n      socket.off('startBonus');\n      socket.off('casinoResult');\n      socket.off('roadCashResult');\n      socket.off('stonePaperScissorsStart');\n      socket.off('stonePaperScissorsResult');\n      socket.off('stonePaperScissorsTie');\n      socket.off('stonePaperScissorsTieResolved');\n    };\n  }, [socket, player, players, setPlayer, setPlayers]);\n\n  // Update inCasino state when tile changes\n  useEffect(() => {\n    const isCasinoTile = tileMeta?.id === 16;\n    setInCasino(isCasinoTile);\n    if (isCasinoTile) {\n      setHasCasinoPlayed(false);\n    }\n  }, [tileMeta]);\n\n  // Reset casino states when turn ends\n  useEffect(() => {\n    if (!isMyTurn) {\n      setInCasino(false);\n      setHasCasinoPlayed(false);\n    }\n  }, [isMyTurn]);\n\n  const handleBuy = () => {\n    console.log('[GameScreen] handleBuy invoked');\n    setError(null);\n    socket.emit('buyProperty');\n  };\n\n  return (\n    <div style={{\n      position: 'relative'\n    }}>\n      {/* Side Panel Buttons */}\n      {Object.entries(panelConfigs).map(([panelId, config], index) => (\n        <div \n          key={panelId}\n          onClick={() => setActiveSidePanel(activeSidePanel === panelId ? null : panelId)}\n          style={{\n            position: 'fixed',\n            right: activeSidePanel === panelId ? '440px' : '0',\n            top: `${25 + (index * 130)}px`,\n            width: '60px',\n            height: '120px',\n            backgroundColor: config.color,\n            display: activeSidePanel && activeSidePanel !== panelId ? 'none' : 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            cursor: 'pointer',\n            clipPath: activeSidePanel === panelId\n              ? 'polygon(0 0, 100% 0, 100% 100%, 0 100%)'\n              : 'polygon(40% 0, 100% 0, 100% 100%, 40% 100%, 0 70%, 0 30%)',\n            transition: 'all 0.3s ease',\n            zIndex: 1001\n          }}\n        >\n          <div style={{\n            display: 'flex',\n            alignItems: 'center',\n            gap: '5px',\n            color: 'white',\n            fontSize: '1.2em',\n            transform: activeSidePanel === panelId ? 'rotate(180deg)' : 'none',\n            transition: 'transform 0.3s ease'\n          }}>\n            {config.icon}\n          </div>\n        </div>\n      ))}\n\n      {/* Side Panels */}\n      {Object.entries(panelConfigs).map(([panelId, config]) => (\n        <div\n          key={panelId}\n          style={{\n            position: 'fixed',\n            right: activeSidePanel === panelId ? '0' : '-450px',\n            top: '0',\n            width: '400px',\n            height: '100vh',\n            backgroundColor: `${config.color}dd`,\n            boxShadow: '-2px 0 5px rgba(0, 0, 0, 0.3)',\n            transition: 'right 0.3s ease',\n            zIndex: 1000,\n            padding: '20px',\n            color: 'white',\n            overflowY: 'auto',\n            fontSize: '1.5em',\n            alignItems: 'center',\n            justifyContent: 'center',\n            textAlign: 'center'\n          }}\n        >\n          <h2 style={{ marginBottom: '20px' }}>{config.title}</h2>\n          {/* Panel specific content */}\n          {panelId === 'info' && (\n            <div>\n              <h3>Game Rules</h3>\n              <p>â€¢ Roll dice to move around the board</p>\n              <p>â€¢ Buy properties to build your empire</p>\n              <p>â€¢ Collect rent from other players</p>\n              <p>â€¢ Use special tiles for bonus actions</p>\n            </div>\n          )}\n          {panelId === 'bank' && (\n            <div>\n              {/* Borrow Section */}\n              <div style={{\n                backgroundColor: 'rgba(0, 0, 0, 0.33)',\n                padding: '20px',\n                borderRadius: '8px',\n                marginTop: '70px'\n              }}>\n                <h4 style={{ marginBottom: '15px' , fontSize: '1em', }}>Borrow Money</h4>\n                <div style={{\n                  display: 'flex',\n                  alignItems: 'center',\n                  gap: '10px',\n                  fontSize: '1em',\n                  marginBottom: '20px',\n                  justifyContent: 'center',\n                  alignItems: 'center'\n                }}>\n                  <button\n                    onClick={() => setBorrowAmount(Math.max(1000, borrowAmount - 1000))}\n                    style={{\n                      padding: '8px 12px',\n                      fontSize: '1.7em',\n                      cursor: 'pointer',\n                      backgroundColor: 'rgba(255, 255, 255, 0.2)',\n                      border: 'none',\n                      color: 'white',\n                      borderRadius: '4px'\n                    }}\n                  >\n                    -\n                  </button>\n                  <div style={{\n                    padding: '8px 16px',\n                    backgroundColor: 'rgba(255, 255, 255, 0.15)',\n                    borderRadius: '4px',\n                    minWidth: '100px',\n                    textAlign: 'center',\n                    fontSize: '1.7em'\n                  }}>\n                    ${borrowAmount}\n                  </div>\n                  <button\n                    onClick={() => setBorrowAmount(borrowAmount + 1000)}\n                    style={{\n                      padding: '8px 12px',\n                      fontSize: '1.7em',\n                      cursor: 'pointer',\n                      backgroundColor: 'rgba(255, 255, 255, 0.2)',\n                      border: 'none',\n                      color: 'white',\n                      borderRadius: '4px'\n                    }}\n                  >\n                    +\n                  </button>\n                </div>\n                <button\n                  onClick={() => {\n                    if (socket) {\n                      socket.emit('borrowMoney', { amount: borrowAmount });\n                      setBorrowAmount(1000); // Reset to default\n                    }\n                  }}\n                  style={{\n                    width: '100%',\n                    padding: '12px',\n                    backgroundColor: 'rgba(255, 255, 255, 0.3)',\n                    border: 'none',\n                    color: 'white',\n                    borderRadius: '4px',\n                    cursor: 'pointer',\n                    fontSize: '1.1em',\n                    transition: 'background-color 0.2s'\n                  }}\n                >\n                  Borrow\n                </button>\n              </div>\n\n              {/* Pay Off Section */}\n              <div style={{\n                backgroundColor: 'rgba(0, 0, 0, 0.33)',\n                padding: '20px',\n                borderRadius: '8px',\n                marginTop: '20px'\n              }}>\n                <h4 style={{ marginBottom: '15px' }}>Pay Off Loan</h4>\n                <div style={{\n                  display: 'flex',\n                  alignItems: 'center',\n                  gap: '10px',\n                  marginBottom: '20px'\n                }}>\n                  <button\n                    onClick={() => setPayoffAmount(Math.max(1000, payoffAmount - 1000))}\n                    disabled={!player?.loan}\n                    style={{\n                      padding: '8px 12px',\n                      fontSize: '1.2em',\n                      cursor: player?.loan ? 'pointer' : 'not-allowed',\n                      backgroundColor: player?.loan ? 'rgba(255, 255, 255, 0.2)' : 'rgba(255, 255, 255, 0.1)',\n                      border: 'none',\n                      color: 'white',\n                      borderRadius: '4px'\n                    }}\n                  >\n                    -\n                  </button>\n                  <div style={{\n                    padding: '8px 16px',\n                    backgroundColor: 'rgba(255, 255, 255, 0.15)',\n                    borderRadius: '4px',\n                    minWidth: '100px',\n                    textAlign: 'center',\n                    fontSize: '1.2em'\n                  }}>\n                    ${Math.min(payoffAmount, player?.loan || 0)}\n                  </div>\n                  <button\n                    onClick={() => setPayoffAmount(Math.min(player?.loan || 0, payoffAmount + 1000))}\n                    disabled={!player?.loan}\n                    style={{\n                      padding: '8px 12px',\n                      fontSize: '1.2em',\n                      cursor: player?.loan ? 'pointer' : 'not-allowed',\n                      backgroundColor: player?.loan ? 'rgba(255, 255, 255, 0.2)' : 'rgba(255, 255, 255, 0.1)',\n                      border: 'none',\n                      color: 'white',\n                      borderRadius: '4px'\n                    }}\n                  >\n                    +\n                  </button>\n                </div>\n                <button\n                  onClick={() => {\n                    if (socket && player?.loan && player?.money >= payoffAmount) {\n                      socket.emit('payoffLoan', { amount: Math.min(payoffAmount, player.loan) });\n                      setPayoffAmount(1000); // Reset to default\n                    }\n                  }}\n                  disabled={!player?.loan || player?.money < payoffAmount}\n                  style={{\n                    width: '100%',\n                    padding: '12px',\n                    backgroundColor: player?.loan && player?.money >= payoffAmount \n                      ? 'rgba(255, 255, 255, 0.3)' \n                      : 'rgba(255, 255, 255, 0.1)',\n                    border: 'none',\n                    color: 'white',\n                    borderRadius: '4px',\n                    cursor: player?.loan && player?.money >= payoffAmount ? 'pointer' : 'not-allowed',\n                    fontSize: '1.1em',\n                    transition: 'background-color 0.2s'\n                  }}\n                >\n                  Pay Off\n                </button>\n                {player?.money < payoffAmount && (\n                  <div style={{\n                    color: '#ff6b6b',\n                    marginTop: '10px',\n                    textAlign: 'center',\n                    fontSize: '0.9em'\n                  }}>\n                    Insufficient funds\n                  </div>\n                )}\n              </div>\n\n              {/* Status Section */}\n              <div style={{\n                marginTop: '20px',\n                padding: '20px',\n                backgroundColor: 'rgba(0, 0, 0, 0.33)',\n                borderRadius: '8px'\n              }}>\n                <h4>Current Status</h4>\n                <div style={{ \n                  marginTop: '10px',\n                  fontSize: '1.2em'\n                }}>\n                  <div style={{ marginBottom: '5px' }}>Money: ${player?.money || 0}</div>\n                  <div>Outstanding Loan: ${player?.loan || 0}</div>\n                </div>\n              </div>\n              {error && (\n                <div style={{\n                  color: '#ff6b6b',\n                  marginTop: '10px',\n                  textAlign: 'center'\n                }}>\n                  {error}\n                </div>\n              )}\n            </div>\n          )}\n          {panelId === 'chat' && (\n            <div>\n              <h3>Game Chat</h3>\n              <p>Chat feature coming soon!</p>\n              <p>Communicate with other players</p>\n              <p>Share strategies and have fun!</p>\n            </div>\n          )}\n          {panelId === 'trade' && (\n            <div>\n              <h3>Trade Center</h3>\n              <p>â€¢ Propose trades with other players</p>\n              <p>â€¢ Exchange properties</p>\n              <p>â€¢ Negotiate deals</p>\n              <p>â€¢ View trade history</p>\n            </div>\n          )}\n        </div>\n      ))}\n\n      {/* Main content */}\n      <div style={{\n        display: 'flex',\n        flexDirection: 'column',\n        minHeight: '100vh',\n        minWidth: '1200px',\n        position: 'relative',\n        backgroundImage: `url(${bgImage})`,\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n        backgroundRepeat: 'no-repeat',\n        overflow: 'auto'\n      }}>\n        {/* Main content (board & player stats) */}\n        <div style={{\n          flex: 1,\n          display: 'flex',\n          flexDirection: 'row',\n          alignItems: 'center',\n          justifyContent: 'center',\n          position: 'relative',\n          minWidth: '1080px',\n          padding: '20px',\n          marginTop: '220px',\n          marginBottom: '20px'\n        }}>\n          {/* Board with centered positioning */}\n          <div style={{ \n            position: 'relative',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n          width: '100%',\n            height: '100%',\n            minHeight: '600px' // Ensure minimum height for the board container\n          }}>\n            <div style={{ \n              position: 'relative',\n              margin: '200px' // Add margin around the board to make space for player stats\n            }}>\n              <Board />\n              <PlayerStats />\n            </div>\n          </div>\n        </div>\n\n        {/* Bottom sections (not fixed anymore) */}\n        <div style={{\n          width: '60%',\n          minWidth: '800px',\n          height: '240px',\n          minHeight: '400px',\n          background: 'rgba(80, 80, 80, 0.9)',\n          borderTop: '2px solid #bbb',\n          boxShadow: '0 -2px 10px rgba(0, 0, 0, 0.2)',\n          zIndex: 100,\n          display: 'flex',\n          border: '2px solid #666',\n          borderRadius: '30px 30px 0 0',\n          margin: '80px auto 0 auto'\n        }}>\n          {/* Dice Roller Section */}\n          <div style={{\n            flex: 1,\n            position: 'relative',\n            borderRight: '2px solid #666',\n            padding: '10px',\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            justifyContent: 'center',\n            background: 'rgba(60, 60, 60, 0.3)',\n            borderRadius: '30px 30px 30px 30px',\n            overflow: 'hidden'\n          }}>\n          {isMyTurn && (\n              <>\n            <img\n              src={Dicebox}\n              alt=\"Dice Board\"\n              style={{\n                position: 'absolute',\n                top: 0,\n                left: 0,\n                width: '100%',\n                height: '100%',\n                objectFit: 'fill',\n                    objectPosition: 'center',\n                pointerEvents: 'none'\n              }}\n            />\n                {testRollMode && (\n                  <div style={{\n                    position: 'absolute',\n                    top: '50%',\n                    left: '50%',\n                    transform: 'translate(-50%, -50%)',\n                    backgroundColor: 'rgba(0, 0, 0, 0.8)',\n                    color: '#fff',\n                    padding: '8px 16px',\n                    borderRadius: '4px',\n                    zIndex: 100\n                  }}>\n                    {testRollInput}\n                  </div>\n                )}\n              </>\n            )}\n            <DiceRoller \n              testRollMode={testRollMode} \n              hasCasinoPlayed={hasCasinoPlayed}\n              style={{ position: 'relative', zIndex: 1 }}\n            />\n          </div>\n\n          {/* Dashboard Section */}\n          <div style={{\n            flex: 1,\n            borderRight: '2px solid #666',\n            padding: '10px',\n            display: 'flex',\n            flexDirection: 'column',\n            background: 'rgba(60, 60, 60, 0.3)'\n          }}>\n            <Dashboard />\n        </div>\n\n          {/* Events Section */}\n          <div style={{\n            flex: 1,\n            padding: '10px',\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            justifyContent: 'center',\n            background: 'rgba(60, 60, 60, 0.3)',\n            borderRadius: '0 10px 0 0'\n          }}>\n          {(() => {\n              // Show \"Your Turn\" for current player before landing\n              if (isMyTurn && !movementDone) {\n                return (\n                  <div style={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    height: '100%',\n                    color: '#fff',\n                    fontSize: '1.6em',\n                    fontWeight: 'bold',\n                    textShadow: '2px 2px 4px rgba(0,0,0,0.5)'\n                  }}>\n                    Your Turn\n                  </div>\n                );\n              }\n\n              // Buy Property\n              if (isMyTurn && tileMeta?.type === 'property' && \n                  !players.some(p => p.properties.includes(tileMeta?.id))) {\n                return (\n                  <div style={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'center',\n                    gap: '10px'\n                  }}>\n                <button\n                  onClick={handleBuy}\n                  disabled={player.money < tileMeta.cost}\n                      style={{\n                        padding: '12px 24px',\n                        fontSize: '1.1em',\n                        backgroundColor: player.money >= tileMeta.cost ? '#4CAF50' : '#ccc',\n                        color: player.money >= tileMeta.cost ? 'white' : '#ff0000',\n                        border: 'none',\n                        borderRadius: '8px',\n                        cursor: player.money >= tileMeta.cost ? 'pointer' : 'not-allowed',\n                        fontWeight: 'bold'\n                      }}\n                >\n                  Buy (${tileMeta.cost})\n                </button>\n                {error && (\n                      <p style={{ color: 'tomato', margin: 0 }}>{error}</p>\n                )}\n        </div>\n                );\n              }\n\n              // Road Cash Game\n              if (isMyTurn && tileMeta?.id === 22) {\n                return <RoadCash isMyTurn={isMyTurn} socket={socket} />;\n              }\n\n              // Casino\n              if (inCasino && isMyTurn) {\n                return (\n                  <CasinoBetting \n                    isMyTurn={isMyTurn} \n                    currentMoney={player?.money || 0}\n                    socket={socket}\n                    player={player}\n                    onCasinoPlayed={() => setHasCasinoPlayed(true)}\n                  />\n                );\n              }\n\n              // Corner Choice\n              if (isMyTurn && tileMeta?.name?.toLowerCase().includes('choose corner')) {\n                return (\n                  <div style={{\n                    display: 'grid',\n                    gridTemplateColumns: '1fr 1fr',\n                    gridTemplateRows: '1fr 1fr',\n                    gap: '20px',\n                    width: '100%',\n                    maxWidth: '600px',\n                    padding: '20px',\n                    margin: '0 auto'\n                  }}>\n                    <button\n                      onClick={() => {\n                        socket.emit('teleport', { toTile: 1, prevTile: 30 });\n                        setError(null);\n                        setHasChosenCorner(true);\n                      }}\n                      style={{\n                        margin: 0,\n                        padding: 0,\n                        border: '3px solid #666',\n                        borderRadius: '12px',\n                        backgroundImage: `url(${startIcon})`,\n                        backgroundSize: '80%',\n                        backgroundRepeat: 'no-repeat',\n                        backgroundPosition: 'center 40%',\n                        cursor: 'pointer',\n                        display: 'flex',\n                        alignItems: 'flex-end',\n                        justifyContent: 'center',\n                        width: '100%',\n                        height: '100%',\n                        minHeight: '180px',\n                        position: 'relative',\n                        backgroundColor: 'rgba(255, 255, 255, 0.15)',\n                        transition: 'transform 0.2s, background-color 0.2s',\n                        ':hover': {\n                          transform: 'scale(1.02)',\n                          backgroundColor: 'rgba(255, 255, 255, 0.2)'\n                        }\n                      }}\n                    >\n                      <span style={{\n                        padding: '8px 16px',\n                        backgroundColor: 'rgba(0,0,0,0.6)',\n                        borderRadius: '0 0 9px 9px',\n                        color: '#fff',\n                        fontWeight: 'bold',\n                        fontSize: '1.4em',\n                        textShadow: '2px 2px 4px rgba(0,0,0,0.7)',\n                        position: 'absolute',\n                        bottom: 0,\n                        width: '100%',\n                        textAlign: 'center'\n                      }}>Start</span>\n                    </button>\n                    <button\n                      onClick={() => {\n                        socket.emit('teleport', { toTile: 22, prevTile: 21 });\n                        setError(null);\n                        setHasChosenCorner(true);\n                      }}\n                      style={{\n                        margin: 0,\n                        padding: 0,\n                        border: '3px solid #666',\n                        borderRadius: '12px',\n                        backgroundImage: `url(${roadIcon})`,\n                        backgroundSize: '80%',\n                        backgroundRepeat: 'no-repeat',\n                        backgroundPosition: 'center 40%',\n                        cursor: 'pointer',\n                        display: 'flex',\n                        alignItems: 'flex-end',\n                        justifyContent: 'center',\n                        width: '100%',\n                        height: '100%',\n                        minHeight: '180px',\n                        position: 'relative',\n                        backgroundColor: 'rgba(255, 255, 255, 0.15)',\n                        transition: 'transform 0.2s, background-color 0.2s',\n                        ':hover': {\n                          transform: 'scale(1.02)',\n                          backgroundColor: 'rgba(255, 255, 255, 0.2)'\n                        }\n                      }}\n                    >\n                      <span style={{\n                        padding: '8px 16px',\n                        backgroundColor: 'rgba(0,0,0,0.6)',\n                        borderRadius: '0 0 9px 9px',\n                        color: '#fff',\n                        fontWeight: 'bold',\n                        fontSize: '1.4em',\n                        textShadow: '2px 2px 4px rgba(0,0,0,0.7)',\n                        position: 'absolute',\n                        bottom: 0,\n                        width: '100%',\n                        textAlign: 'center'\n                      }}>Road</span>\n                    </button>\n                    <button\n                      onClick={() => {\n                        socket.emit('teleport', { toTile: 7, prevTile: 6 });\n                        setError(null);\n                        setHasChosenCorner(true);\n                      }}\n        style={{\n                        margin: 0,\n                        padding: 0,\n                        border: '3px solid #666',\n                        borderRadius: '12px',\n                        backgroundImage: `url(${hotelIcon})`,\n                        backgroundSize: '80%',\n                        backgroundRepeat: 'no-repeat',\n                        backgroundPosition: 'center 40%',\n                        cursor: 'pointer',\n          display: 'flex',\n                        alignItems: 'flex-end',\n          justifyContent: 'center',\n                        width: '100%',\n                        height: '100%',\n                        minHeight: '180px',\n                        position: 'relative',\n                        backgroundColor: 'rgba(255, 255, 255, 0.15)',\n                        transition: 'transform 0.2s, background-color 0.2s',\n                        ':hover': {\n                          transform: 'scale(1.02)',\n                          backgroundColor: 'rgba(255, 255, 255, 0.2)'\n                        }\n                      }}\n                    >\n                      <span style={{\n                        padding: '8px 16px',\n                        backgroundColor: 'rgba(0,0,0,0.6)',\n                        borderRadius: '0 0 9px 9px',\n                        color: '#fff',\n                        fontWeight: 'bold',\n                        fontSize: '1.4em',\n                        textShadow: '2px 2px 4px rgba(0,0,0,0.7)',\n                        position: 'absolute',\n                        bottom: 0,\n                        width: '100%',\n                        textAlign: 'center'\n                      }}>Hotel</span>\n                    </button>\n                    <button\n                      onClick={() => {\n                        socket.emit('teleport', { toTile: 16, prevTile: 15 });\n                        setError(null);\n                        setHasChosenCorner(true);\n                      }}\n          style={{\n                        margin: 0,\n                        padding: 0,\n                        border: '3px solid #666',\n                        borderRadius: '12px',\n                        backgroundImage: `url(${casinoIcon})`,\n                        backgroundSize: '80%',\n                        backgroundRepeat: 'no-repeat',\n                        backgroundPosition: 'center 40%',\n                        cursor: 'pointer',\n            display: 'flex',\n                        alignItems: 'flex-end',\n                        justifyContent: 'center',\n                        width: '100%',\n                        height: '100%',\n                        minHeight: '180px',\n                        position: 'relative',\n                        backgroundColor: 'rgba(255, 255, 255, 0.15)',\n                        transition: 'transform 0.2s, background-color 0.2s',\n                        ':hover': {\n                          transform: 'scale(1.02)',\n                          backgroundColor: 'rgba(255, 255, 255, 0.2)'\n                        }\n                      }}\n                    >\n                      <span style={{\n                        padding: '8px 16px',\n                        backgroundColor: 'rgba(0,0,0,0.6)',\n                        borderRadius: '0 0 9px 9px',\n                        color: '#fff',\n                        fontWeight: 'bold',\n                        fontSize: '1.4em',\n                        textShadow: '2px 2px 4px rgba(0,0,0,0.7)',\n                        position: 'absolute',\n                        bottom: 0,\n                        width: '100%',\n                        textAlign: 'center'\n                      }}>Casino</span>\n                    </button>\n        </div>\n                );\n              }\n\n              // Show error message if any\n              if (error) {\n                return (\n                  <p style={{ color: 'tomato', margin: 0 }}>{error}</p>\n                );\n              }\n\n              // Show empty state for non-turn players or when no action is needed\n              return (\n                <div style={{\n                  display: 'flex',\n                  flexDirection: 'column',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  height: '100%',\n                  gap: '20px'\n                }}>\n                  {rpsGame && (\n                    <>\n                      {rpsResult ? (\n                        // Show result\n                        <div style={{\n                          textAlign: 'center',\n                          color: '#fff',\n                          fontSize: '1.4em'\n                        }}>\n                          <div>\n                            {rpsResult.landingPlayer.name}: {rpsResult.landingPlayerChoice}\n                          </div>\n                          <div>\n                            {rpsResult.closestPlayer.name}: {rpsResult.closestPlayerChoice}\n                          </div>\n                          <div style={{ marginTop: '10px', color: '#4CAF50' }}>\n                            {rpsResult.landingPlayerWon ? rpsResult.landingPlayer.name : rpsResult.closestPlayer.name} won!\n        </div>\n      </div>\n                      ) : rpsTieAmount ? (\n                        <RPSTieResolver\n                          maxAmount={rpsTieAmount.maxAmount}\n                          gameId={rpsTieAmount.gameId}\n                          socket={socket}\n                          onResolved={() => {\n                            setRpsTieAmount(null);\n                            setRpsGame(null);\n                          }}\n                        />\n                      ) : (\n                        // Show RPS buttons\n                        <div style={{\n                          display: 'flex',\n                          flexDirection: 'column',\n                          alignItems: 'center',\n                          gap: '15px'\n                        }}>\n                          {(player?.socketId === rpsGame.landingPlayer.socketId ||\n                           player?.socketId === rpsGame.closestPlayer.socketId) && !rpsChoice && (\n                            <>\n                              <div style={{ color: '#fff', fontSize: '1.2em' }}>\n                                Choose your move:\n                              </div>\n                              <div style={{\n                                display: 'flex',\n                                gap: '10px'\n                              }}>\n                                {['rock', 'paper', 'scissors'].map(choice => (\n                                  <button\n                                    key={choice}\n                                    onClick={() => {\n                                      setRpsChoice(choice);\n                                      socket.emit('stonePaperScissorsChoice', {\n                                        choice,\n                                        gameId: rpsGame.gameId\n                                      });\n                                    }}\n        style={{\n                                      padding: '12px 24px',\n                                      fontSize: '1.1em',\n                                      backgroundColor: '#2196F3',\n                                      color: 'white',\n                                      border: 'none',\n                                      borderRadius: '4px',\n                                      cursor: 'pointer',\n                                      textTransform: 'capitalize'\n                                    }}\n                                  >\n                                    {choice}\n                                  </button>\n                                ))}\n                              </div>\n                            </>\n                          )}\n                          {rpsChoice && (\n                            <div style={{ color: '#fff', fontSize: '1.2em' }}>\n                              You chose: {rpsChoice}\n                            </div>\n                          )}\n                        </div>\n                      )}\n                    </>\n                  )}\n                </div>\n              );\n            })()}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}