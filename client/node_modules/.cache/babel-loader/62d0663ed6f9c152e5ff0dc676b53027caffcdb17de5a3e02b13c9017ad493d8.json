{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\addhy\\\\Desktop\\\\Business_web\\\\client\\\\src\\\\components\\\\Board.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState, useRef, useEffect } from 'react';\nimport { GameContext } from '../context/GameContext';\nimport boardImage from '../assets/board.png';\nimport piece1 from '../assets/pieces/piece1.png';\nimport piece2 from '../assets/pieces/piece2.png';\nimport piece3 from '../assets/pieces/piece3.png';\nimport piece4 from '../assets/pieces/piece4.png';\nimport piece5 from '../assets/pieces/piece5.png';\nimport piece6 from '../assets/pieces/piece6.png';\nimport piece7 from '../assets/pieces/piece7.png';\nimport piece8 from '../assets/pieces/piece8.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst pieceMap = {\n  piece1,\n  piece2,\n  piece3,\n  piece4,\n  piece5,\n  piece6,\n  piece7,\n  piece8\n};\nconst Board = () => {\n  _s();\n  const {\n    players\n  } = useContext(GameContext);\n  const [coords, setCoords] = useState({\n    x: null,\n    y: null\n  });\n  const [naturalSize, setNaturalSize] = useState({\n    width: 600,\n    height: 600\n  });\n  const imageRef = useRef();\n  useEffect(() => {\n    const img = new Image();\n    img.onload = () => {\n      setNaturalSize({\n        width: img.width,\n        height: img.height\n      });\n    };\n    img.src = boardImage;\n  }, []);\n  const handleClick = e => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const rawX = e.clientX - rect.left;\n    const rawY = e.clientY - rect.top;\n    const logicalX = Math.round(rawX);\n    const logicalY = Math.round(rawY);\n    console.log(`Tile Coordinates: (${logicalX}, ${logicalY})`);\n    setCoords({\n      x: logicalX,\n      y: logicalY\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center',\n      marginTop: '20px'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: handleClick,\n      style: {\n        position: 'relative',\n        width: `${naturalSize.width}px`,\n        height: `${naturalSize.height}px`,\n        backgroundImage: `url(${boardImage})`,\n        backgroundSize: '100% 100%',\n        backgroundRepeat: 'no-repeat',\n        backgroundPosition: 'center',\n        border: '3px solid #333',\n        overflow: 'visible',\n        margin: '0 auto'\n      },\n      children: [players.map((p, i) => {\n        const pieceImg = pieceMap[p.piece];\n        if (!pieceImg) return null;\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          src: pieceImg,\n          alt: p.name,\n          title: p.name,\n          style: {\n            position: 'absolute',\n            top: 520 + i * 10,\n            left: 20 + i * 10,\n            width: 30,\n            height: 30,\n            transition: 'top 0.3s, left 0.3s'\n          }\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this);\n      }), coords.x !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          top: 10,\n          left: 10,\n          backgroundColor: 'rgba(255, 255, 255, 0.9)',\n          padding: '4px 8px',\n          fontSize: '14px',\n          border: '1px solid #ccc',\n          borderRadius: '4px'\n        },\n        children: [\"Tile: (\", coords.x, \", \", coords.y, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(Board, \"cZiVhKpYZOEYMEwmQ8NaYRVqDCc=\");\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useContext","useState","useRef","useEffect","GameContext","boardImage","piece1","piece2","piece3","piece4","piece5","piece6","piece7","piece8","jsxDEV","_jsxDEV","pieceMap","Board","_s","players","coords","setCoords","x","y","naturalSize","setNaturalSize","width","height","imageRef","img","Image","onload","src","handleClick","e","rect","currentTarget","getBoundingClientRect","rawX","clientX","left","rawY","clientY","top","logicalX","Math","round","logicalY","console","log","style","textAlign","marginTop","children","onClick","position","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","border","overflow","margin","map","p","i","pieceImg","piece","alt","name","title","transition","fileName","_jsxFileName","lineNumber","columnNumber","backgroundColor","padding","fontSize","borderRadius","_c","$RefreshReg$"],"sources":["C:/Users/addhy/Desktop/Business_web/client/src/components/Board.js"],"sourcesContent":["import React, { useContext, useState, useRef, useEffect } from 'react';\r\nimport { GameContext } from '../context/GameContext';\r\nimport boardImage from '../assets/board.png';\r\n\r\nimport piece1 from '../assets/pieces/piece1.png';\r\nimport piece2 from '../assets/pieces/piece2.png';\r\nimport piece3 from '../assets/pieces/piece3.png';\r\nimport piece4 from '../assets/pieces/piece4.png';\r\nimport piece5 from '../assets/pieces/piece5.png';\r\nimport piece6 from '../assets/pieces/piece6.png';\r\nimport piece7 from '../assets/pieces/piece7.png';\r\nimport piece8 from '../assets/pieces/piece8.png';\r\n\r\nconst pieceMap = {\r\n  piece1, piece2, piece3, piece4, piece5, piece6, piece7, piece8,\r\n};\r\n\r\nconst Board = () => {\r\n  const { players } = useContext(GameContext);\r\n  const [coords, setCoords] = useState({ x: null, y: null });\r\n  const [naturalSize, setNaturalSize] = useState({ width: 600, height: 600 });\r\n\r\n  const imageRef = useRef();\r\n\r\n  useEffect(() => {\r\n    const img = new Image();\r\n    img.onload = () => {\r\n      setNaturalSize({ width: img.width, height: img.height });\r\n    };\r\n    img.src = boardImage;\r\n  }, []);\r\n\r\n  const handleClick = (e) => {\r\n    const rect = e.currentTarget.getBoundingClientRect();\r\n    const rawX = e.clientX - rect.left;\r\n    const rawY = e.clientY - rect.top;\r\n\r\n    const logicalX = Math.round(rawX);\r\n    const logicalY = Math.round(rawY);\r\n\r\n    console.log(`Tile Coordinates: (${logicalX}, ${logicalY})`);\r\n    setCoords({ x: logicalX, y: logicalY });\r\n  };\r\n\r\n  return (\r\n    <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n      <div\r\n        onClick={handleClick}\r\n        style={{\r\n          position: 'relative',\r\n          width: `${naturalSize.width}px`,\r\n          height: `${naturalSize.height}px`,\r\n          backgroundImage: `url(${boardImage})`,\r\n          backgroundSize: '100% 100%',\r\n          backgroundRepeat: 'no-repeat',\r\n          backgroundPosition: 'center',\r\n          border: '3px solid #333',\r\n          overflow: 'visible',\r\n          margin: '0 auto',\r\n        }}\r\n      >\r\n        {players.map((p, i) => {\r\n          const pieceImg = pieceMap[p.piece];\r\n          if (!pieceImg) return null;\r\n\r\n          return (\r\n            <img\r\n              key={i}\r\n              src={pieceImg}\r\n              alt={p.name}\r\n              title={p.name}\r\n              style={{\r\n                position: 'absolute',\r\n                top: 520 + i * 10,\r\n                left: 20 + i * 10,\r\n                width: 30,\r\n                height: 30,\r\n                transition: 'top 0.3s, left 0.3s',\r\n              }}\r\n            />\r\n          );\r\n        })}\r\n\r\n        {coords.x !== null && (\r\n          <div\r\n            style={{\r\n              position: 'absolute',\r\n              top: 10,\r\n              left: 10,\r\n              backgroundColor: 'rgba(255, 255, 255, 0.9)',\r\n              padding: '4px 8px',\r\n              fontSize: '14px',\r\n              border: '1px solid #ccc',\r\n              borderRadius: '4px',\r\n            }}\r\n          >\r\n            Tile: ({coords.x}, {coords.y})\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}