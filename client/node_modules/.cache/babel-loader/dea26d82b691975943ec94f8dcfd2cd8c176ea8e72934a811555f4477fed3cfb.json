{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\addhy\\\\Desktop\\\\Business_web\\\\client\\\\src\\\\components\\\\DiceRoller.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { GameContext } from '../context/GameContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DiceRoller() {\n  _s();\n  const {\n    player,\n    currentPlayerId,\n    socket\n  } = useContext(GameContext);\n  const [dice, setDice] = useState(null);\n  const [moving, setMoving] = useState(false);\n  const [done, setDone] = useState(false);\n\n  // Only the active player\n  if (!player || player.socketId !== currentPlayerId) return null;\n\n  // Roll button handler\n  const handleRoll = () => {\n    socket.emit('rollDice');\n    setDone(false);\n  };\n\n  // End‐turn button\n  const handleDone = () => {\n    socket.emit('endTurn');\n    setDice(null);\n    setDone(false);\n  };\n  useEffect(() => {\n    socket.on('diceResult', ({\n      playerId,\n      die1,\n      die2\n    }) => {\n      if (playerId === player.socketId) {\n        setDice([die1, die2]);\n        setMoving(true);\n      }\n    });\n    socket.on('playerMoved', ({\n      playerId\n    }) => {\n      if (playerId === player.socketId) {\n        // each move step\n      }\n    });\n    socket.on('branchChoices', ({\n      options\n    }) => {\n      // simple confirm prompt\n      const pick = window.confirm(`Choose path to ${options[0]} (OK) or ${options[1]} (Cancel)`);\n      socket.emit('branchChoice', pick ? 0 : 1);\n    });\n    socket.on('movementDone', () => {\n      setMoving(false);\n      setDone(true);\n    });\n    return () => {\n      socket.off('diceResult');\n      socket.off('playerMoved');\n      socket.off('branchChoices');\n      socket.off('movementDone');\n    };\n  }, [player, socket]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'absolute',\n      top: '12%',\n      left: '50%',\n      transform: 'translateX(-50%)',\n      background: '#fff',\n      border: '2px solid #333',\n      borderRadius: '12px',\n      padding: '1rem',\n      boxShadow: '0 4px 10px rgba(0,0,0,0.2)',\n      zIndex: 1000,\n      textAlign: 'center'\n    },\n    children: [!dice && !moving && !done && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRoll,\n      children: \"Roll Dice\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), dice && !moving && !done && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        gap: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: `/dice/dice${dice[0]}.png`,\n        alt: `Die ${dice[0]}`,\n        width: 50\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `/dice/dice${dice[1]}.png`,\n        alt: `Die ${dice[1]}`,\n        width: 50\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), done && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDone,\n      children: \"Done\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(DiceRoller, \"o7NHWH17cp0hOujRddezqq/aje4=\");\n_c = DiceRoller;\nvar _c;\n$RefreshReg$(_c, \"DiceRoller\");","map":{"version":3,"names":["React","useState","useEffect","useContext","GameContext","jsxDEV","_jsxDEV","DiceRoller","_s","player","currentPlayerId","socket","dice","setDice","moving","setMoving","done","setDone","socketId","handleRoll","emit","handleDone","on","playerId","die1","die2","options","pick","window","confirm","off","style","position","top","left","transform","background","border","borderRadius","padding","boxShadow","zIndex","textAlign","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","gap","src","alt","width","_c","$RefreshReg$"],"sources":["C:/Users/addhy/Desktop/Business_web/client/src/components/DiceRoller.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport { GameContext } from '../context/GameContext';\r\n\r\nexport default function DiceRoller() {\r\n  const { player, currentPlayerId, socket } = useContext(GameContext);\r\n  const [dice, setDice] = useState(null);\r\n  const [moving, setMoving] = useState(false);\r\n  const [done, setDone] = useState(false);\r\n\r\n  // Only the active player\r\n  if (!player || player.socketId !== currentPlayerId) return null;\r\n\r\n  // Roll button handler\r\n  const handleRoll = () => {\r\n    socket.emit('rollDice');\r\n    setDone(false);\r\n  };\r\n\r\n  // End‐turn button\r\n  const handleDone = () => {\r\n    socket.emit('endTurn');\r\n    setDice(null);\r\n    setDone(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket.on('diceResult', ({ playerId, die1, die2 }) => {\r\n      if (playerId === player.socketId) {\r\n        setDice([die1, die2]);\r\n        setMoving(true);\r\n      }\r\n    });\r\n    socket.on('playerMoved', ({ playerId }) => {\r\n      if (playerId === player.socketId) {\r\n        // each move step\r\n      }\r\n    });\r\n    socket.on('branchChoices', ({ options }) => {\r\n      // simple confirm prompt\r\n      const pick = window.confirm(`Choose path to ${options[0]} (OK) or ${options[1]} (Cancel)`);\r\n      socket.emit('branchChoice', pick ? 0 : 1);\r\n    });\r\n    socket.on('movementDone', () => {\r\n      setMoving(false);\r\n      setDone(true);\r\n    });\r\n    return () => {\r\n      socket.off('diceResult');\r\n      socket.off('playerMoved');\r\n      socket.off('branchChoices');\r\n      socket.off('movementDone');\r\n    };\r\n  }, [player, socket]);\r\n\r\n  return (\r\n    <div style={{\r\n      position: 'absolute',\r\n      top: '12%', left: '50%',\r\n      transform: 'translateX(-50%)',\r\n      background: '#fff', border: '2px solid #333',\r\n      borderRadius: '12px', padding: '1rem',\r\n      boxShadow: '0 4px 10px rgba(0,0,0,0.2)', zIndex: 1000,\r\n      textAlign: 'center'\r\n    }}>\r\n      {!dice && !moving && !done && (\r\n        <button onClick={handleRoll}>Roll Dice</button>\r\n      )}\r\n      {dice && !moving && !done && (\r\n        <div style={{ display: 'flex', justifyContent: 'center', gap: '10px' }}>\r\n          <img src={`/dice/dice${dice[0]}.png`} alt={`Die ${dice[0]}`} width={50}/>\r\n          <img src={`/dice/dice${dice[1]}.png`} alt={`Die ${dice[1]}`} width={50}/>\r\n        </div>\r\n      )}\r\n      {done && (\r\n        <button onClick={handleDone}>Done</button>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}