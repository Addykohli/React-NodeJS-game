{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\addhy\\\\Desktop\\\\Business_web\\\\client\\\\src\\\\components\\\\DiceRoller.js\",\n  _s = $RefreshSig$();\n// src/components/DiceRoller.js\nimport React, { useContext, useState } from 'react';\nimport { GameContext } from '../context/GameContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DiceRoller = () => {\n  _s();\n  const {\n    currentPlayerIndex,\n    players,\n    setPlayers,\n    setOriginalCount,\n    isMoving\n  } = useContext(GameContext);\n  const [dice1, setDice1] = useState(null);\n  const [dice2, setDice2] = useState(null);\n  const currentPlayer = players[currentPlayerIndex];\n  const rollDice = () => {\n    if (isMoving) return;\n    const d1 = Math.ceil(Math.random() * 6);\n    const d2 = Math.ceil(Math.random() * 6);\n    const total = d1 + d2;\n    setDice1(d1);\n    setDice2(d2);\n    setOriginalCount(total);\n    const updated = [...players];\n    updated[currentPlayerIndex].originalCount = total;\n    updated[currentPlayerIndex].currentCount = total;\n    updated[currentPlayerIndex].prevTile = updated[currentPlayerIndex].tileId;\n    setPlayers(updated);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'absolute',\n      top: '20px',\n      left: '50%',\n      transform: 'translateX(-50%)'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        background: 'white',\n        padding: 10,\n        border: '1px solid gray',\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Your Turn\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: rollDice,\n        children: \"Roll Dice\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'center',\n          marginTop: 10\n        },\n        children: [dice1 && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `/dice/dice${dice1}.png`,\n          alt: `Dice ${dice1}`,\n          width: 40\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), dice2 && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `/dice/dice${dice2}.png`,\n          alt: `Dice ${dice2}`,\n          width: 40\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(DiceRoller, \"OCH/yHIrAOc3NM2k3YQswHfX6Gs=\");\n_c = DiceRoller;\nexport default DiceRoller;\nvar _c;\n$RefreshReg$(_c, \"DiceRoller\");","map":{"version":3,"names":["React","useContext","useState","GameContext","jsxDEV","_jsxDEV","DiceRoller","_s","currentPlayerIndex","players","setPlayers","setOriginalCount","isMoving","dice1","setDice1","dice2","setDice2","currentPlayer","rollDice","d1","Math","ceil","random","d2","total","updated","originalCount","currentCount","prevTile","tileId","style","position","top","left","transform","children","background","padding","border","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","onClick","display","justifyContent","marginTop","src","alt","width","_c","$RefreshReg$"],"sources":["C:/Users/addhy/Desktop/Business_web/client/src/components/DiceRoller.js"],"sourcesContent":["// src/components/DiceRoller.js\r\nimport React, { useContext, useState } from 'react';\r\nimport { GameContext } from '../context/GameContext';\r\n\r\nconst DiceRoller = () => {\r\n  const {\r\n    currentPlayerIndex,\r\n    players,\r\n    setPlayers,\r\n    setOriginalCount,\r\n    isMoving,\r\n  } = useContext(GameContext);\r\n\r\n  const [dice1, setDice1] = useState(null);\r\n  const [dice2, setDice2] = useState(null);\r\n\r\n  const currentPlayer = players[currentPlayerIndex];\r\n\r\n  const rollDice = () => {\r\n    if (isMoving) return;\r\n\r\n    const d1 = Math.ceil(Math.random() * 6);\r\n    const d2 = Math.ceil(Math.random() * 6);\r\n    const total = d1 + d2;\r\n\r\n    setDice1(d1);\r\n    setDice2(d2);\r\n    setOriginalCount(total);\r\n\r\n    const updated = [...players];\r\n    updated[currentPlayerIndex].originalCount = total;\r\n    updated[currentPlayerIndex].currentCount = total;\r\n    updated[currentPlayerIndex].prevTile = updated[currentPlayerIndex].tileId;\r\n    setPlayers(updated);\r\n  };\r\n\r\n  return (\r\n    <div style={{ position: 'absolute', top: '20px', left: '50%', transform: 'translateX(-50%)' }}>\r\n      <div style={{ background: 'white', padding: 10, border: '1px solid gray', textAlign: 'center' }}>\r\n        <strong>Your Turn</strong>\r\n        <br />\r\n        <button onClick={rollDice}>Roll Dice</button>\r\n        <div style={{ display: 'flex', justifyContent: 'center', marginTop: 10 }}>\r\n          {dice1 && <img src={`/dice/dice${dice1}.png`} alt={`Dice ${dice1}`} width={40} />}\r\n          {dice2 && <img src={`/dice/dice${dice2}.png`} alt={`Dice ${dice2}`} width={40} />}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DiceRoller;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}