{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\addhy\\\\Desktop\\\\Business_web\\\\client\\\\src\\\\context\\\\GameContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport socket from '../socket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GameContext = /*#__PURE__*/createContext();\nexport function GameProvider({\n  children\n}) {\n  _s();\n  const [player, setPlayer] = useState(null);\n  const [players, setPlayers] = useState([]);\n  const [currentPlayerId, setCurrentPlayerId] = useState(null);\n  const [sessionId, setSessionId] = useState(null);\n  const [gameState, setGameState] = useState('lobby');\n  const [diceRoll, setDiceRoll] = useState(null); // { playerId, die1, die2 }\n\n  useEffect(() => {\n    const onLobby = newPlayers => {\n      setPlayers(newPlayers);\n      // keep your local `player` object in sync if you want...\n    };\n    const onStart = ({\n      players,\n      sessionId,\n      currentPlayerId\n    }) => {\n      setPlayers(players);\n      setSessionId(sessionId);\n      setGameState('playing');\n      setCurrentPlayerId(currentPlayerId);\n      setDiceRoll(null);\n    };\n    const onTurn = ({\n      nextPlayerId\n    }) => {\n      setCurrentPlayerId(nextPlayerId);\n      setDiceRoll(null);\n    };\n    const onMoved = ({\n      playerId,\n      tileId\n    }) => {\n      setPlayers(prev => prev.map(p => p.socketId === playerId ? {\n        ...p,\n        tileId\n      } : p));\n    };\n    const onDice = ({\n      playerId,\n      die1,\n      die2\n    }) => {\n      setDiceRoll({\n        playerId,\n        die1,\n        die2\n      });\n    };\n    socket.on('lobbyUpdate', onLobby);\n    socket.on('gameStart', onStart);\n    socket.on('turnEnded', onTurn);\n    socket.on('playerMoved', onMoved);\n    socket.on('diceResult', onDice);\n    return () => {\n      socket.off('lobbyUpdate', onLobby);\n      socket.off('gameStart', onStart);\n      socket.off('turnEnded', onTurn);\n      socket.off('playerMoved', onMoved);\n      socket.off('diceResult', onDice);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(GameContext.Provider, {\n    value: {\n      player,\n      setPlayer,\n      players,\n      setPlayers,\n      currentPlayerId,\n      setCurrentPlayerId,\n      sessionId,\n      setSessionId,\n      gameState,\n      setGameState,\n      diceRoll,\n      setDiceRoll,\n      socket\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(GameProvider, \"Vv+39SSBkJQlchF/+6fFLr0XR1g=\");\n_c = GameProvider;\nvar _c;\n$RefreshReg$(_c, \"GameProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","socket","jsxDEV","_jsxDEV","GameContext","GameProvider","children","_s","player","setPlayer","players","setPlayers","currentPlayerId","setCurrentPlayerId","sessionId","setSessionId","gameState","setGameState","diceRoll","setDiceRoll","onLobby","newPlayers","onStart","onTurn","nextPlayerId","onMoved","playerId","tileId","prev","map","p","socketId","onDice","die1","die2","on","off","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/addhy/Desktop/Business_web/client/src/context/GameContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nimport socket from '../socket';\r\n\r\nexport const GameContext = createContext();\r\n\r\nexport function GameProvider({ children }) {\r\n  const [player, setPlayer] = useState(null);\r\n  const [players, setPlayers] = useState([]);\r\n  const [currentPlayerId, setCurrentPlayerId] = useState(null);\r\n  const [sessionId, setSessionId] = useState(null);\r\n  const [gameState, setGameState] = useState('lobby');\r\n  const [diceRoll, setDiceRoll] = useState(null); // { playerId, die1, die2 }\r\n\r\n  useEffect(() => {\r\n    const onLobby = newPlayers => {\r\n      setPlayers(newPlayers);\r\n      // keep your local `player` object in sync if you want...\r\n    };\r\n\r\n    const onStart = ({ players, sessionId, currentPlayerId }) => {\r\n      setPlayers(players);\r\n      setSessionId(sessionId);\r\n      setGameState('playing');\r\n      setCurrentPlayerId(currentPlayerId);\r\n      setDiceRoll(null);\r\n    };\r\n\r\n    const onTurn = ({ nextPlayerId }) => {\r\n      setCurrentPlayerId(nextPlayerId);\r\n      setDiceRoll(null);\r\n    };\r\n\r\n    const onMoved = ({ playerId, tileId }) => {\r\n      setPlayers(prev =>\r\n        prev.map(p => p.socketId === playerId ? { ...p, tileId } : p)\r\n      );\r\n    };\r\n\r\n    const onDice = ({ playerId, die1, die2 }) => {\r\n      setDiceRoll({ playerId, die1, die2 });\r\n    };\r\n\r\n    socket.on('lobbyUpdate', onLobby);\r\n    socket.on('gameStart', onStart);\r\n    socket.on('turnEnded', onTurn);\r\n    socket.on('playerMoved', onMoved);\r\n    socket.on('diceResult', onDice);\r\n\r\n    return () => {\r\n      socket.off('lobbyUpdate', onLobby);\r\n      socket.off('gameStart', onStart);\r\n      socket.off('turnEnded', onTurn);\r\n      socket.off('playerMoved', onMoved);\r\n      socket.off('diceResult', onDice);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <GameContext.Provider\r\n      value={{\r\n        player, setPlayer,\r\n        players, setPlayers,\r\n        currentPlayerId, setCurrentPlayerId,\r\n        sessionId, setSessionId,\r\n        gameState, setGameState,\r\n        diceRoll, setDiceRoll,\r\n        socket\r\n      }}\r\n    >\r\n      {children}\r\n    </GameContext.Provider>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}