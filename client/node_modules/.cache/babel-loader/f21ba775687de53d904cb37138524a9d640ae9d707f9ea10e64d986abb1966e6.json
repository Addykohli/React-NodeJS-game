{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\addhy\\\\Desktop\\\\Business_web - Copy (2)\\\\client\\\\src\\\\components\\\\RoadCash.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport cash500 from '../assets/cash500.png';\nimport cash1000 from '../assets/cash1000.png';\nimport cash5000 from '../assets/cash5000.png';\nimport cash10000 from '../assets/cash10000.png';\nimport cashBehind from '../assets/cashBehind.png';\n\n// Define cash amounts separately to ensure random order\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cashAmounts = [{\n  amount: 500,\n  image: cash500\n}, {\n  amount: 1000,\n  image: cash1000\n}, {\n  amount: 5000,\n  image: cash5000\n}, {\n  amount: 10000,\n  image: cash10000\n}].sort(() => Math.random() - 0.5);\nconst RoadCash = ({\n  isMyTurn,\n  socket\n}) => {\n  _s();\n  const [selectedIndex, setSelectedIndex] = useState(null);\n  const [revealedAmount, setRevealedAmount] = useState(null);\n  const [showAll, setShowAll] = useState(false);\n  const [isActive, setIsActive] = useState(true);\n  const [cardOrder] = useState(cashAmounts);\n  const handleCashClick = index => {\n    if (!isMyTurn || selectedIndex !== null) return;\n    setSelectedIndex(index);\n    const amount = cardOrder[index].amount;\n    setRevealedAmount(amount);\n    socket.emit('roadCashSelected', {\n      amount\n    });\n\n    // After 3 seconds, show all cards\n    setTimeout(() => {\n      setShowAll(true);\n      // After another 3 seconds, hide everything\n      setTimeout(() => {\n        setIsActive(false);\n      }, 3000);\n    }, 3000);\n  };\n  if (!isActive) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      transform: 'translate(-50%, -50%)',\n      display: 'flex',\n      flexDirection: 'row',\n      gap: '20px',\n      padding: '20px',\n      zIndex: 1000\n    },\n    children: cardOrder.map((card, index) => {\n      const isSelected = index === selectedIndex;\n\n      // Determine which image to show\n      let currentImage = cashBehind;\n      if (isSelected) {\n        // Show revealed amount for selected card immediately\n        currentImage = card.image;\n      } else if (showAll) {\n        // Show actual amounts for other cards after delay\n        currentImage = card.image;\n      }\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        src: currentImage,\n        alt: `Cash ${card.amount}`,\n        onClick: () => handleCashClick(index),\n        style: {\n          cursor: isMyTurn && !selectedIndex ? 'pointer' : 'default'\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(RoadCash, \"rtHPj+ZSWQMY3vyauWdJ5BNQtSo=\");\n_c = RoadCash;\nexport default RoadCash;\nvar _c;\n$RefreshReg$(_c, \"RoadCash\");","map":{"version":3,"names":["React","useState","useEffect","cash500","cash1000","cash5000","cash10000","cashBehind","jsxDEV","_jsxDEV","cashAmounts","amount","image","sort","Math","random","RoadCash","isMyTurn","socket","_s","selectedIndex","setSelectedIndex","revealedAmount","setRevealedAmount","showAll","setShowAll","isActive","setIsActive","cardOrder","handleCashClick","index","emit","setTimeout","style","position","top","left","transform","display","flexDirection","gap","padding","zIndex","children","map","card","isSelected","currentImage","src","alt","onClick","cursor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/addhy/Desktop/Business_web - Copy (2)/client/src/components/RoadCash.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport cash500 from '../assets/cash500.png';\r\nimport cash1000 from '../assets/cash1000.png';\r\nimport cash5000 from '../assets/cash5000.png';\r\nimport cash10000 from '../assets/cash10000.png';\r\nimport cashBehind from '../assets/cashBehind.png';\r\n\r\n// Define cash amounts separately to ensure random order\r\nconst cashAmounts = [\r\n  { amount: 500, image: cash500 },\r\n  { amount: 1000, image: cash1000 },\r\n  { amount: 5000, image: cash5000 },\r\n  { amount: 10000, image: cash10000 }\r\n].sort(() => Math.random() - 0.5);\r\n\r\nconst RoadCash = ({ isMyTurn, socket }) => {\r\n  const [selectedIndex, setSelectedIndex] = useState(null);\r\n  const [revealedAmount, setRevealedAmount] = useState(null);\r\n  const [showAll, setShowAll] = useState(false);\r\n  const [isActive, setIsActive] = useState(true);\r\n  const [cardOrder] = useState(cashAmounts);\r\n\r\n  const handleCashClick = (index) => {\r\n    if (!isMyTurn || selectedIndex !== null) return;\r\n\r\n    setSelectedIndex(index);\r\n    const amount = cardOrder[index].amount;\r\n    setRevealedAmount(amount);\r\n    socket.emit('roadCashSelected', { amount });\r\n\r\n    // After 3 seconds, show all cards\r\n    setTimeout(() => {\r\n      setShowAll(true);\r\n      // After another 3 seconds, hide everything\r\n      setTimeout(() => {\r\n        setIsActive(false);\r\n      }, 3000);\r\n    }, 3000);\r\n  };\r\n\r\n  if (!isActive) return null;\r\n\r\n  return (\r\n    <div style={{\r\n      position: 'absolute',\r\n      top: '50%',\r\n      left: '50%',\r\n      transform: 'translate(-50%, -50%)',\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      gap: '20px',\r\n      padding: '20px',\r\n      zIndex: 1000\r\n    }}>\r\n      {cardOrder.map((card, index) => {\r\n        const isSelected = index === selectedIndex;\r\n        \r\n        // Determine which image to show\r\n        let currentImage = cashBehind;\r\n        if (isSelected) {\r\n          // Show revealed amount for selected card immediately\r\n          currentImage = card.image;\r\n        } else if (showAll) {\r\n          // Show actual amounts for other cards after delay\r\n          currentImage = card.image;\r\n        }\r\n\r\n        return (\r\n          <img\r\n            key={index}\r\n            src={currentImage}\r\n            alt={`Cash ${card.amount}`}\r\n            onClick={() => handleCashClick(index)}\r\n            style={{\r\n              cursor: isMyTurn && !selectedIndex ? 'pointer' : 'default'\r\n            }}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RoadCash; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}