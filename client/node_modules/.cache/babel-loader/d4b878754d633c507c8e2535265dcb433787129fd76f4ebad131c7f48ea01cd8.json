{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\addhy\\\\Desktop\\\\Business_web\\\\client\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport { GameContext } from '../context/GameContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  var _players$currentPlaye, _player$properties;\n  const {\n    player,\n    players,\n    currentPlayerIndex,\n    setCurrentPlayerIndex,\n    isMoving,\n    diceRoll\n  } = useContext(GameContext);\n  if (!player) return null;\n  const yourTurn = ((_players$currentPlaye = players[currentPlayerIndex]) === null || _players$currentPlaye === void 0 ? void 0 : _players$currentPlaye.name) === player.name;\n  // Show “Done” only if it’s your turn, you’re not moving, and you've already rolled & moved\n  const showDone = yourTurn && !isMoving && diceRoll === null;\n  const handleDone = () => {\n    setCurrentPlayerIndex(idx => (idx + 1) % players.length);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      marginTop: '1.5rem',\n      fontSize: '1.1rem'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: '2px solid #444',\n        borderRadius: '10px',\n        padding: '1.2rem 2rem',\n        width: '80%',\n        maxWidth: '700px',\n        backgroundColor: '#ffffff',\n        boxShadow: '0 2px 6px rgba(0,0,0,0.1)',\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [player.name, \"'s Dashboard\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Money:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 12\n        }, this), \" $\", player.money]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Properties:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 12\n        }, this), \" \", (_player$properties = player.properties) !== null && _player$properties !== void 0 && _player$properties.length ? player.properties.join(', ') : 'None']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), showDone && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDone,\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"nkzH8nqh+TJWAwjXfq/m+98PDj8=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useContext","GameContext","jsxDEV","_jsxDEV","Dashboard","_s","_players$currentPlaye","_player$properties","player","players","currentPlayerIndex","setCurrentPlayerIndex","isMoving","diceRoll","yourTurn","name","showDone","handleDone","idx","length","style","display","justifyContent","marginTop","fontSize","children","border","borderRadius","padding","width","maxWidth","backgroundColor","boxShadow","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","money","properties","join","onClick","_c","$RefreshReg$"],"sources":["C:/Users/addhy/Desktop/Business_web/client/src/components/Dashboard.js"],"sourcesContent":["import React, { useContext } from 'react';\r\nimport { GameContext } from '../context/GameContext';\r\n\r\nconst Dashboard = () => {\r\n  const {\r\n    player,\r\n    players,\r\n    currentPlayerIndex, setCurrentPlayerIndex,\r\n    isMoving,\r\n    diceRoll\r\n  } = useContext(GameContext);\r\n\r\n  if (!player) return null;\r\n\r\n  const yourTurn = players[currentPlayerIndex]?.name === player.name;\r\n  // Show “Done” only if it’s your turn, you’re not moving, and you've already rolled & moved\r\n  const showDone = yourTurn && !isMoving && diceRoll === null;\r\n\r\n  const handleDone = () => {\r\n    setCurrentPlayerIndex(idx => (idx + 1) % players.length);\r\n  };\r\n\r\n  return (\r\n    <div style={{\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      marginTop: '1.5rem',\r\n      fontSize: '1.1rem'\r\n    }}>\r\n      <div style={{\r\n        border: '2px solid #444',\r\n        borderRadius: '10px',\r\n        padding: '1.2rem 2rem',\r\n        width: '80%',\r\n        maxWidth: '700px',\r\n        backgroundColor: '#ffffff',\r\n        boxShadow: '0 2px 6px rgba(0,0,0,0.1)',\r\n        textAlign: 'center'\r\n      }}>\r\n        <h3>{player.name}'s Dashboard</h3>\r\n        <p><strong>Money:</strong> ${player.money}</p>\r\n        <p><strong>Properties:</strong> {player.properties?.length ? player.properties.join(', ') : 'None'}</p>\r\n        {showDone && <button onClick={handleDone}>Done</button>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}