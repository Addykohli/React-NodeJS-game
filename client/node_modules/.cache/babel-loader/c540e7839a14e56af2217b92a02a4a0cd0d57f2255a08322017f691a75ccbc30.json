{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\addhy\\\\Desktop\\\\Business_web - Copy (2)\\\\client\\\\src\\\\components\\\\GameScreen.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useContext, useState, useEffect } from 'react';\nimport bgImage from '../assets/bg.png';\nimport Dicebox from '../assets/diceBoard.png';\nimport startIcon from '../assets/start.png';\nimport hotelIcon from '../assets/hotel.png';\nimport casinoIcon from '../assets/casino.png';\nimport roadIcon from '../assets/road.png';\nimport Board from './Board';\nimport DiceRoller from './DiceRoller';\nimport Dashboard from './Dashboard';\nimport PlayerStats from './PlayerStats';\nimport RoadCash from './RoadCash';\nimport RPSTieResolver from './RPSTieResolver';\nimport { GameContext } from '../context/GameContext';\nimport { tiles } from '../data/tiles';\nimport Chat from './Chat';\nimport TradePanel from './TradePanel';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CasinoBetting = ({\n  isMyTurn,\n  currentMoney,\n  socket,\n  player,\n  onCasinoPlayed\n}) => {\n  _s();\n  const [betAmount, setBetAmount] = useState(1000);\n  const [selectedBet, setSelectedBet] = useState(null);\n  const [showResult, setShowResult] = useState(null);\n  const [diceResult, setDiceResult] = useState(null);\n  const [isActive, setIsActive] = useState(true);\n  const handleAmountChange = delta => {\n    const newAmount = Math.max(1000, Math.min(currentMoney, betAmount + delta));\n    setBetAmount(newAmount);\n  };\n  const handleBetSelect = bet => {\n    setSelectedBet(bet);\n  };\n  const handleRoll = () => {\n    if (selectedBet && betAmount >= 1000 && betAmount <= currentMoney) {\n      socket.emit('casinoRoll', {\n        betAmount,\n        betType: selectedBet\n      });\n    }\n  };\n  useEffect(() => {\n    const handleCasinoResult = ({\n      playerId,\n      dice,\n      amount,\n      won,\n      playerMoney\n    }) => {\n      if (playerId === player.socketId) {\n        setDiceResult(dice);\n        setShowResult({\n          won,\n          amount\n        });\n        setIsActive(false);\n        onCasinoPlayed();\n      }\n    };\n    socket.on('casinoResult', handleCasinoResult);\n    return () => socket.off('casinoResult', handleCasinoResult);\n  }, [socket, player.socketId, onCasinoPlayed]);\n\n  // If not active (after result), show nothing\n  if (!isActive) {\n    if (showResult && diceResult) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n          height: '100%',\n          gap: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            gap: '10px',\n            justifyContent: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `/dice/dice${diceResult[0]}.png`,\n            alt: `Die ${diceResult[0]}`,\n            width: 125,\n            height: 125\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `/dice/dice${diceResult[1]}.png`,\n            alt: `Die ${diceResult[1]}`,\n            width: 125,\n            height: 125\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: showResult.won ? '#4CAF50' : '#f44336',\n            fontWeight: 'bold',\n            fontSize: '1.2em'\n          },\n          children: showResult.won ? `You won $${showResult.amount}!` : `You lost $${showResult.amount}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this);\n    }\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: '100%',\n      gap: '25px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        gap: '15px',\n        backgroundColor: 'rgba(0, 0, 0, 0.3)',\n        padding: '15px 20px',\n        borderRadius: '12px',\n        border: '1px solid rgba(255, 255, 255, 0.1)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAmountChange(-500),\n        disabled: !isMyTurn || betAmount <= 1000,\n        style: {\n          padding: '12px 20px',\n          fontSize: '1.8em',\n          cursor: isMyTurn ? 'pointer' : 'not-allowed',\n          backgroundColor: isMyTurn && betAmount > 1000 ? '#ff4444' : 'rgba(255, 68, 68, 0.5)',\n          color: 'white',\n          border: 'none',\n          borderRadius: '8px',\n          width: '60px',\n          transition: 'all 0.2s ease',\n          boxShadow: '0 2px 4px rgba(0, 0, 0, 0.2)'\n        },\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '12px 20px',\n          border: '2px solid rgba(255, 255, 255, 0.2)',\n          borderRadius: '8px',\n          minWidth: '150px',\n          textAlign: 'center',\n          fontSize: '1.6em',\n          color: 'white',\n          backgroundColor: 'rgba(0, 0, 0, 0.2)'\n        },\n        children: [\"$\", betAmount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAmountChange(500),\n        disabled: !isMyTurn || betAmount >= currentMoney,\n        style: {\n          padding: '12px 20px',\n          fontSize: '1.8em',\n          cursor: isMyTurn ? 'pointer' : 'not-allowed',\n          backgroundColor: isMyTurn && betAmount < currentMoney ? '#4CAF50' : 'rgba(76, 175, 80, 0.5)',\n          color: 'white',\n          border: 'none',\n          borderRadius: '8px',\n          width: '60px',\n          transition: 'all 0.2s ease',\n          boxShadow: '0 2px 4px rgba(0, 0, 0, 0.2)'\n        },\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        gap: '15px',\n        backgroundColor: 'rgba(0, 0, 0, 0.3)',\n        padding: '15px 20px',\n        borderRadius: '12px',\n        border: '1px solid rgba(255, 255, 255, 0.1)'\n      },\n      children: ['above', '7', 'below'].map(bet => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleBetSelect(bet),\n        disabled: !isMyTurn,\n        style: {\n          padding: '15px 25px',\n          backgroundColor: selectedBet === bet ? '#2196F3' : 'rgba(33, 150, 243, 0.3)',\n          color: '#fff',\n          border: selectedBet === bet ? '2px solid #90CAF9' : '1px solid rgba(255, 255, 255, 0.1)',\n          borderRadius: '8px',\n          cursor: isMyTurn ? 'pointer' : 'not-allowed',\n          fontSize: '1.4em',\n          fontWeight: 'bold',\n          textTransform: 'uppercase',\n          minWidth: '120px',\n          transition: 'all 0.2s ease',\n          boxShadow: selectedBet === bet ? '0 0 10px rgba(33, 150, 243, 0.5)' : 'none'\n        },\n        children: bet\n      }, bet, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRoll,\n      disabled: !isMyTurn || !selectedBet || betAmount < 1000 || betAmount > currentMoney,\n      style: {\n        padding: '15px 40px',\n        backgroundColor: isMyTurn && selectedBet && betAmount >= 1000 && betAmount <= currentMoney ? '#FFA000' : 'rgba(255, 160, 0, 0.3)',\n        color: '#fff',\n        border: 'none',\n        borderRadius: '12px',\n        marginTop: '10px',\n        cursor: isMyTurn && selectedBet ? 'pointer' : 'not-allowed',\n        fontSize: '1.8em',\n        fontWeight: 'bold',\n        letterSpacing: '2px',\n        textTransform: 'uppercase',\n        transition: 'all 0.3s ease',\n        boxShadow: isMyTurn && selectedBet ? '0 4px 15px rgba(255, 160, 0, 0.4)' : 'none',\n        textShadow: '2px 2px 4px rgba(0, 0, 0, 0.3)'\n      },\n      children: \"Roll\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s(CasinoBetting, \"1erwuWbl18mQT2wIK6glrgWb/ks=\");\n_c = CasinoBetting;\nexport default function GameScreen() {\n  _s2();\n  const {\n    player,\n    players,\n    setPlayer,\n    setPlayers,\n    currentPlayerId,\n    socket,\n    movementDone\n  } = useContext(GameContext);\n  const isMyTurn = (player === null || player === void 0 ? void 0 : player.socketId) === currentPlayerId;\n  const [error, setError] = useState(null);\n  const [testRollInput, setTestRollInput] = useState('');\n  const [testRollMode, setTestRollMode] = useState(false);\n  const [inCasino, setInCasino] = useState(false);\n  const [hasCasinoPlayed, setHasCasinoPlayed] = useState(false);\n  const [hasChosenCorner, setHasChosenCorner] = useState(false);\n  const [rpsGame, setRpsGame] = useState(null);\n  const [rpsChoice, setRpsChoice] = useState(null);\n  const [rpsResult, setRpsResult] = useState(null);\n  const [rpsTieAmount, setRpsTieAmount] = useState(null);\n  const [activeSidePanel, setActiveSidePanel] = useState(null);\n  const [borrowAmount, setBorrowAmount] = useState(1000);\n  const [payoffAmount, setPayoffAmount] = useState(1000);\n  const [gameEvents, setGameEvents] = useState([]);\n\n  // Add socket event listener for borrow response\n  useEffect(() => {\n    if (!socket) return;\n    const handleBorrowResponse = ({\n      success,\n      error\n    }) => {\n      if (!success && error) {\n        setError(error);\n        setTimeout(() => setError(null), 5000);\n      }\n    };\n    socket.on('borrowResponse', handleBorrowResponse);\n    return () => {\n      socket.off('borrowResponse', handleBorrowResponse);\n    };\n  }, [socket]);\n\n  // Add socket event listener for game events\n  useEffect(() => {\n    if (!socket) return;\n\n    // Handle initial game events history\n    socket.on('gameEventsHistory', events => {\n      setGameEvents(events);\n    });\n\n    // Handle new game events\n    socket.on('gameEvent', event => {\n      setGameEvents(prev => [...prev, event]);\n    });\n    return () => {\n      socket.off('gameEventsHistory');\n      socket.off('gameEvent');\n    };\n  }, [socket]);\n\n  // Define panel configurations\n  const panelConfigs = {\n    info: {\n      color: '#4CAF50',\n      // Green\n      title: 'Game Events',\n      icon: '📋'\n    },\n    bank: {\n      color: '#2196F3',\n      // Blue\n      title: 'Bank',\n      icon: '💰'\n    },\n    chat: {\n      color: '#9C27B0',\n      // Purple\n      title: 'Chat',\n      icon: '💬'\n    },\n    trade: {\n      color: '#FF9800',\n      // Orange\n      title: 'Trade',\n      icon: '🔄'\n    }\n  };\n\n  // Determine metadata for the current tile\n  const tileMeta = tiles.find(t => t.id === (player === null || player === void 0 ? void 0 : player.tileId));\n\n  // Reset hasChosenCorner when turn ends or tile changes\n  useEffect(() => {\n    var _tileMeta$name;\n    if (!isMyTurn || !(tileMeta !== null && tileMeta !== void 0 && (_tileMeta$name = tileMeta.name) !== null && _tileMeta$name !== void 0 && _tileMeta$name.toLowerCase().includes('choose corner'))) {\n      setHasChosenCorner(false);\n    }\n  }, [isMyTurn, tileMeta]);\n\n  // Add keyboard listener for test rolls\n  useEffect(() => {\n    const handleKeyPress = e => {\n      if (!isMyTurn) return;\n\n      // Build up the test roll input\n      if (e.key === 'Enter' && testRollInput.startsWith('testroll')) {\n        const rollNumber = parseInt(testRollInput.slice(8));\n        if (!isNaN(rollNumber) && rollNumber >= 2 && rollNumber <= 12) {\n          socket.emit('rollDice', {\n            testRoll: rollNumber\n          });\n          setTestRollInput('');\n          setTestRollMode(false);\n        }\n      } else if (e.key === 'Backspace') {\n        setTestRollInput(prev => prev.slice(0, -1));\n      } else if (e.key.length === 1) {\n        // Regular character\n        setTestRollInput(prev => prev + e.key);\n      }\n    };\n    window.addEventListener('keydown', handleKeyPress);\n    return () => window.removeEventListener('keydown', handleKeyPress);\n  }, [isMyTurn, testRollInput, socket]);\n\n  // Show current test roll input if active\n  useEffect(() => {\n    if (testRollInput.startsWith('testroll')) {\n      setTestRollMode(true);\n    } else if (testRollInput.length === 0) {\n      setTestRollMode(false);\n    }\n  }, [testRollInput]);\n\n  // Debug logging to trace condition\n  useEffect(() => {\n    console.log('[GameScreen] Debug:', {\n      isMyTurn,\n      movementDone,\n      tileMeta,\n      \"player.tileId\": player === null || player === void 0 ? void 0 : player.tileId,\n      \"tileMeta.type\": tileMeta === null || tileMeta === void 0 ? void 0 : tileMeta.type,\n      \"tileMeta.cost\": tileMeta === null || tileMeta === void 0 ? void 0 : tileMeta.cost,\n      \"player.money\": player === null || player === void 0 ? void 0 : player.money,\n      testRollMode,\n      testRollInput\n    });\n  }, [isMyTurn, movementDone, tileMeta, player, testRollMode, testRollInput]);\n\n  // Listen for purchase events\n  useEffect(() => {\n    socket.on('purchaseSuccess', ({\n      socketId,\n      money,\n      properties\n    }) => {\n      console.log('[GameScreen] purchaseSuccess', {\n        socketId,\n        money,\n        properties\n      });\n      const updated = players.map(p => p.socketId === socketId ? {\n        ...p,\n        money,\n        properties\n      } : p);\n      setPlayers(updated);\n      if (player.socketId === socketId) {\n        setPlayer({\n          ...player,\n          money,\n          properties\n        });\n      }\n      setError(null);\n    });\n\n    // Add player disconnect handler\n    socket.on('playerDisconnected', ({\n      playerName,\n      temporary\n    }) => {\n      if (temporary) {\n        setError(`${playerName} temporarily disconnected. They can rejoin with the same name.`);\n        setTimeout(() => setError(null), 5000);\n      }\n    });\n\n    // Add property update handler\n    socket.on('propertyUpdated', ({\n      playerId,\n      propertyId,\n      action,\n      newMoney\n    }) => {\n      console.log('[GameScreen] propertyUpdated', {\n        playerId,\n        propertyId,\n        action,\n        newMoney\n      });\n\n      // Update players' properties and money\n      setPlayers(prevPlayers => {\n        return prevPlayers.map(p => {\n          if (p.socketId === playerId) {\n            return {\n              ...p,\n              properties: action === 'add' ? [...(p.properties || []), propertyId] : (p.properties || []).filter(id => id !== propertyId),\n              money: newMoney // Update the player's money\n            };\n          }\n          return p;\n        });\n      });\n\n      // Update current player if they're involved\n      if (player.socketId === playerId) {\n        setPlayer(prev => ({\n          ...prev,\n          properties: action === 'add' ? [...(prev.properties || []), propertyId] : (prev.properties || []).filter(id => id !== propertyId),\n          money: newMoney // Update the current player's money\n        }));\n\n        // Show message when selling property\n        if (action === 'remove') {\n          const property = tiles.find(t => t.id === propertyId);\n          setError(`You sold ${property.name} for $${property.cost}`);\n          setTimeout(() => setError(null), 5000);\n        }\n      }\n    });\n\n    // Add start bonus handler\n    socket.on('startBonus', ({\n      playerSocketId,\n      newMoney,\n      amount,\n      reason\n    }) => {\n      console.log('[GameScreen] startBonus', {\n        playerSocketId,\n        newMoney,\n        amount,\n        reason\n      });\n\n      // Update players' money\n      const updated = players.map(p => p.socketId === playerSocketId ? {\n        ...p,\n        money: newMoney\n      } : p);\n      setPlayers(updated);\n\n      // Update current player's money if they got the bonus\n      if (player.socketId === playerSocketId) {\n        setPlayer({\n          ...player,\n          money: newMoney\n        });\n        setError(`You received $${amount} for ${reason} Start!`);\n        // Clear bonus message after 7 seconds\n        setTimeout(() => setError(null), 7000);\n      }\n    });\n\n    // Add playerMoved event handler\n    socket.on('playerMoved', ({\n      playerId,\n      tileId\n    }) => {\n      console.log('[GameScreen] playerMoved', {\n        playerId,\n        tileId\n      });\n      if (playerId === (player === null || player === void 0 ? void 0 : player.socketId)) {\n        setPlayer(prev => ({\n          ...prev,\n          tileId\n        }));\n      }\n      setPlayers(prev => prev.map(p => p.socketId === playerId ? {\n        ...p,\n        tileId\n      } : p));\n      // Clear any previous messages when a player moves\n      setError(null);\n    });\n    socket.on('purchaseFailed', ({\n      reason\n    }) => {\n      console.log('[GameScreen] purchaseFailed', reason);\n      if (reason === 'insufficientFunds') {\n        setError(\"You don't have enough money.\");\n      } else if (reason === 'alreadyOwned') {\n        setError('You already own this property.');\n      } else {\n        setError('Cannot buy this property.');\n      }\n      // Clear error message after 5 seconds\n      setTimeout(() => setError(null), 5000);\n    });\n\n    // Add rent payment handler\n    socket.on('rentPaid', ({\n      payerSocketId,\n      payerMoney,\n      payerLoan,\n      ownerSocketId,\n      ownerMoney,\n      amount,\n      baseRent,\n      multiplier,\n      propertyName\n    }) => {\n      var _players$find, _players$find2;\n      console.log('[GameScreen] rentPaid', {\n        payerSocketId,\n        ownerSocketId,\n        amount\n      });\n\n      // Update players' money and loan\n      const updated = players.map(p => {\n        if (p.socketId === payerSocketId) return {\n          ...p,\n          money: payerMoney,\n          loan: payerLoan\n        };\n        if (p.socketId === ownerSocketId) return {\n          ...p,\n          money: ownerMoney\n        };\n        return p;\n      });\n      setPlayers(updated);\n\n      // Update current player if they're involved\n      if (player.socketId === payerSocketId) {\n        setPlayer(prev => ({\n          ...prev,\n          money: payerMoney,\n          loan: payerLoan\n        }));\n      } else if (player.socketId === ownerSocketId) {\n        setPlayer(prev => ({\n          ...prev,\n          money: ownerMoney\n        }));\n      }\n\n      // Show rent payment notification with stylized multiplier\n      setError(/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: '4px',\n          justifyContent: 'center',\n          fontSize: '1.6em',\n          // Increased font size\n          padding: '15px',\n          backgroundColor: 'rgba(0, 0, 0, 0.7)',\n          borderRadius: '8px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: `${(_players$find = players.find(p => p.socketId === payerSocketId)) === null || _players$find === void 0 ? void 0 : _players$find.name} paid rent to ${(_players$find2 = players.find(p => p.socketId === ownerSocketId)) === null || _players$find2 === void 0 ? void 0 : _players$find2.name} for ${propertyName} - $${baseRent.toLocaleString()}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 11\n        }, this), multiplier > 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: '#FFA500',\n            fontSize: '1.5em',\n            // Increased multiplier size\n            fontWeight: 'bold',\n            marginLeft: '8px'\n          },\n          children: `X${multiplier}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 9\n      }, this));\n      setTimeout(() => setError(null), 5000);\n    });\n\n    // Add rent bonus handler\n    socket.on('rentBonus', ({\n      playerSocketId,\n      newMoney,\n      amount,\n      propertyName\n    }) => {\n      console.log('[GameScreen] rentBonus', {\n        playerSocketId,\n        amount\n      });\n\n      // Update player's money\n      const updated = players.map(p => p.socketId === playerSocketId ? {\n        ...p,\n        money: newMoney\n      } : p);\n      setPlayers(updated);\n\n      // Update current player if they got the bonus\n      if (player.socketId === playerSocketId) {\n        setPlayer({\n          ...player,\n          money: newMoney\n        });\n        setError(`You received $${amount} bonus for landing on your property ${propertyName}!`);\n        // Clear bonus message after 5 seconds\n        setTimeout(() => setError(null), 5000);\n      }\n    });\n\n    // Add casino result handler for other players\n    socket.on('casinoResult', ({\n      playerId,\n      dice,\n      amount,\n      won,\n      playerName,\n      playerMoney\n    }) => {\n      console.log('[GameScreen] casinoResult', {\n        playerId,\n        dice,\n        amount,\n        won,\n        playerName,\n        playerMoney\n      });\n\n      // Update player money in the game state\n      const updated = players.map(p => p.socketId === playerId ? {\n        ...p,\n        money: playerMoney\n      } : p);\n      setPlayers(updated);\n      if (player.socketId === playerId) {\n        setPlayer(prev => ({\n          ...prev,\n          money: playerMoney\n        }));\n      } else {\n        setError(`${playerName} ${won ? 'won' : 'lost'} $${amount} at the casino!`);\n        setTimeout(() => setError(null), 5000);\n      }\n    });\n\n    // Add roadCash handler\n    socket.on('roadCashResult', ({\n      playerSocketId,\n      newMoney,\n      amount\n    }) => {\n      console.log('[GameScreen] roadCashResult', {\n        playerSocketId,\n        newMoney,\n        amount\n      });\n\n      // Update player's money\n      const updated = players.map(p => p.socketId === playerSocketId ? {\n        ...p,\n        money: newMoney\n      } : p);\n      setPlayers(updated);\n\n      // Update current player if they got the money\n      if (player.socketId === playerSocketId) {\n        setPlayer({\n          ...player,\n          money: newMoney\n        });\n        setError(`You received $${amount} from the road!`);\n        // Clear message after 5 seconds\n        setTimeout(() => setError(null), 5000);\n      }\n    });\n\n    // Add RPS event listeners\n    socket.on('stonePaperScissorsStart', game => {\n      console.log('[RPS] Game started:', game);\n      setRpsGame(game);\n      setRpsChoice(null);\n      setRpsResult(null);\n      setRpsTieAmount(null);\n    });\n    socket.on('stonePaperScissorsResult', result => {\n      console.log('[RPS] Result received:', result);\n      setRpsResult(result);\n\n      // Update players' money in the game state\n      const updatedPlayers = players.map(p => {\n        if (p.socketId === result.landingPlayer.socketId) {\n          return {\n            ...p,\n            money: result.landingPlayer.money < 0 ? 0 : result.landingPlayer.money,\n            loan: result.landingPlayer.money < 0 ? (result.landingPlayer.loan || 0) + Math.abs(result.landingPlayer.money) : result.landingPlayer.loan || 0\n          };\n        }\n        // Update winners' money and loans\n        const winner = result.winners.find(w => w.socketId === p.socketId);\n        if (winner) {\n          return {\n            ...p,\n            money: winner.money < 0 ? 0 : winner.money,\n            loan: winner.money < 0 ? (winner.loan || 0) + Math.abs(winner.money) : winner.loan || 0\n          };\n        }\n        // Update losers' money and loans\n        const loser = result.losers.find(l => l.socketId === p.socketId);\n        if (loser) {\n          return {\n            ...p,\n            money: loser.money < 0 ? 0 : loser.money,\n            loan: loser.money < 0 ? (loser.loan || 0) + Math.abs(loser.money) : loser.loan || 0\n          };\n        }\n        return p;\n      });\n      setPlayers(updatedPlayers);\n\n      // Update current player's money and loan if they were involved\n      if (player.socketId === result.landingPlayer.socketId) {\n        setPlayer(prev => ({\n          ...prev,\n          money: result.landingPlayer.money < 0 ? 0 : result.landingPlayer.money,\n          loan: result.landingPlayer.money < 0 ? (result.landingPlayer.loan || 0) + Math.abs(result.landingPlayer.money) : result.landingPlayer.loan || 0\n        }));\n      } else {\n        const winner = result.winners.find(w => w.socketId === player.socketId);\n        if (winner) {\n          setPlayer(prev => ({\n            ...prev,\n            money: winner.money < 0 ? 0 : winner.money,\n            loan: winner.money < 0 ? (winner.loan || 0) + Math.abs(winner.money) : winner.loan || 0\n          }));\n        }\n        const loser = result.losers.find(l => l.socketId === player.socketId);\n        if (loser) {\n          setPlayer(prev => ({\n            ...prev,\n            money: loser.money < 0 ? 0 : loser.money,\n            loan: loser.money < 0 ? (loser.loan || 0) + Math.abs(loser.money) : loser.loan || 0\n          }));\n        }\n      }\n\n      // Add RPS result to game events with loan information\n      result.winners.forEach(winner => {\n        result.losers.forEach(loser => {\n          const message = `${winner.name} won against ${loser.name} in RPS (${winner.choice} vs ${loser.choice}). ${winner.name} now has $${winner.money.toLocaleString()}${winner.loan ? ` and $${winner.loan.toLocaleString()} loan` : ''} and ${loser.name} has $${loser.money.toLocaleString()}${loser.loan ? ` and $${loser.loan.toLocaleString()} loan` : ''}. ${winner.name} drew $${winner.drawnAmount.toLocaleString()} from ${loser.name}.`;\n          setGameEvents(prev => [...prev, {\n            message\n          }]);\n        });\n      });\n\n      // Clear game state after a delay to show the result\n      setTimeout(() => {\n        setRpsGame(null);\n        setRpsResult(null);\n        setRpsChoice(null);\n      }, 3000);\n    });\n    socket.on('stonePaperScissorsTie', ({\n      landingPlayerId,\n      tiedPlayerId,\n      tiedPlayerName,\n      maxAmount,\n      gameId\n    }) => {\n      console.log('[RPS] Tie resolution:', {\n        landingPlayerId,\n        tiedPlayerId,\n        tiedPlayerName,\n        maxAmount,\n        gameId\n      });\n      if ((player === null || player === void 0 ? void 0 : player.socketId) === landingPlayerId) {\n        setRpsTieAmount({\n          maxAmount,\n          gameId,\n          tiedPlayerId,\n          tiedPlayerName\n        });\n      }\n    });\n    socket.on('stonePaperScissorsTieResolved', result => {\n      console.log('[RPS] Tie resolved:', result);\n\n      // Update players' money in the game state\n      const updatedPlayers = players.map(p => {\n        if (p.socketId === result.landingPlayer.socketId) {\n          return {\n            ...p,\n            money: result.landingPlayer.money\n          };\n        }\n        if (p.socketId === result.tiedPlayer.socketId) {\n          return {\n            ...p,\n            money: result.tiedPlayer.money\n          };\n        }\n        return p;\n      });\n      setPlayers(updatedPlayers);\n\n      // Update current player's money if they were involved\n      if ((player === null || player === void 0 ? void 0 : player.socketId) === result.landingPlayer.socketId) {\n        setPlayer(prev => ({\n          ...prev,\n          money: result.landingPlayer.money\n        }));\n      } else if ((player === null || player === void 0 ? void 0 : player.socketId) === result.tiedPlayer.socketId) {\n        setPlayer(prev => ({\n          ...prev,\n          money: result.tiedPlayer.money\n        }));\n      }\n\n      // Add tie resolution to game events\n      const message = `${result.landingPlayer.name} and ${result.tiedPlayer.name} tied in RPS. ${result.landingPlayer.name} drew $${result.drawnAmount.toLocaleString()} from ${result.tiedPlayer.name}. ${result.landingPlayer.name} now has $${result.landingPlayer.money.toLocaleString()} and ${result.tiedPlayer.name} has $${result.tiedPlayer.money.toLocaleString()}.`;\n      setGameEvents(prev => [...prev, {\n        message\n      }]);\n\n      // If there are remaining ties, keep the game state\n      if (result.remainingTies > 0) {\n        setRpsTieAmount(null);\n      } else {\n        // Clear all RPS state if no more ties to resolve\n        setRpsGame(null);\n        setRpsResult(null);\n        setRpsChoice(null);\n        setRpsTieAmount(null);\n      }\n    });\n    return () => {\n      socket.off('purchaseSuccess');\n      socket.off('purchaseFailed');\n      socket.off('rentPaid');\n      socket.off('playerMoved');\n      socket.off('rentBonus');\n      socket.off('startBonus');\n      socket.off('casinoResult');\n      socket.off('roadCashResult');\n      socket.off('stonePaperScissorsStart');\n      socket.off('stonePaperScissorsResult');\n      socket.off('stonePaperScissorsTie');\n      socket.off('stonePaperScissorsTieResolved');\n    };\n  }, [socket, player, players, setPlayer, setPlayers]);\n\n  // Update inCasino state when tile changes\n  useEffect(() => {\n    const isCasinoTile = (tileMeta === null || tileMeta === void 0 ? void 0 : tileMeta.id) === 16;\n    setInCasino(isCasinoTile);\n    if (isCasinoTile) {\n      setHasCasinoPlayed(false);\n    }\n  }, [tileMeta]);\n\n  // Reset casino states when turn ends\n  useEffect(() => {\n    if (!isMyTurn) {\n      setInCasino(false);\n      setHasCasinoPlayed(false);\n    }\n  }, [isMyTurn]);\n  const handleBuy = () => {\n    console.log('[GameScreen] handleBuy invoked');\n    setError(null);\n    socket.emit('buyProperty');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'relative'\n    },\n    children: [Object.entries(panelConfigs).map(([panelId, config], index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => setActiveSidePanel(activeSidePanel === panelId ? null : panelId),\n      style: {\n        position: 'fixed',\n        right: activeSidePanel === panelId ? '540px' : '0',\n        top: `${25 + index * 130}px`,\n        width: activeSidePanel === panelId ? '60px' : '120px',\n        height: '120px',\n        backgroundColor: config.color,\n        display: activeSidePanel && activeSidePanel !== panelId ? 'none' : 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        cursor: 'pointer',\n        clipPath: activeSidePanel === panelId ? 'polygon(0 0, 100% 0, 100% 100%, 0 100%)' : 'polygon(20% 0, 100% 0, 100% 100%, 20% 100%, 0 70%, 0 30%)',\n        transition: 'all 0.3s ease',\n        zIndex: 1001\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          color: 'white',\n          fontSize: '1.2em',\n          transform: activeSidePanel === panelId ? 'rotate(180deg)' : 'none',\n          transition: 'transform 0.3s ease',\n          width: '100%',\n          padding: '0 10px',\n          textAlign: 'center'\n        },\n        children: activeSidePanel === panelId ? '←' : config.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 797,\n        columnNumber: 11\n      }, this)\n    }, panelId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 776,\n      columnNumber: 9\n    }, this)), Object.entries(panelConfigs).map(([panelId, config]) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        right: activeSidePanel === panelId ? '0' : '-550px',\n        top: '0',\n        width: '500px',\n        height: '100vh',\n        backgroundColor: `${config.color}dd`,\n        boxShadow: '-2px 0 5px rgba(0, 0, 0, 0.48)',\n        transition: 'right 0.3s ease',\n        zIndex: 1000,\n        padding: '20px',\n        color: 'white',\n        overflowY: 'auto',\n        fontSize: '1.5em',\n        alignItems: 'center',\n        justifyContent: 'center',\n        textAlign: 'center',\n        marginLeft: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          marginBottom: '20px'\n        },\n        children: config.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 838,\n        columnNumber: 11\n      }, this), panelId === 'info' && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: 'calc(100vh - 250px)',\n          overflowY: 'auto',\n          padding: '15px',\n          display: 'flex',\n          flexDirection: 'column-reverse',\n          backgroundColor: 'rgba(0, 0, 0, 0.4)',\n          borderRadius: '8px',\n          gap: '15px'\n        },\n        children: gameEvents.map((event, index) => {\n          // Process the message to color-code money amounts\n          const message = event.message.replace(/\\$(\\d+,?\\d*)/g, (match, amount) => {\n            // Determine if this is a gain or loss\n            const isGain = event.message.includes('received') || event.message.includes('won') || event.message.includes('bonus');\n            const isLoss = event.message.includes('paid') || event.message.includes('lost');\n            return `<span style=\"color: ${isGain ? '#4CAF50' : isLoss ? '#f44336' : 'white'}\">${match}</span>`;\n          });\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              backgroundColor: 'rgba(0, 0, 0, 0.6)',\n              padding: '12px 15px',\n              borderRadius: '8px',\n              fontSize: '1.2em',\n              lineHeight: '1.4'\n            },\n            dangerouslySetInnerHTML: {\n              __html: message\n            }\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 868,\n            columnNumber: 19\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 841,\n        columnNumber: 13\n      }, this), panelId === 'bank' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: 'rgba(0, 0, 0, 0.33)',\n            padding: '20px',\n            borderRadius: '8px',\n            marginTop: '70px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            style: {\n              marginBottom: '15px',\n              fontSize: '1em'\n            },\n            children: \"Borrow Money\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 892,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: '10px',\n              fontSize: '1em',\n              marginBottom: '20px',\n              justifyContent: 'center',\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setBorrowAmount(Math.max(500, borrowAmount - 500)),\n              style: {\n                padding: '8px 12px',\n                fontSize: '1.7em',\n                cursor: 'pointer',\n                backgroundColor: 'rgba(255, 255, 255, 0.2)',\n                border: 'none',\n                color: 'white',\n                borderRadius: '4px'\n              },\n              children: \"-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 902,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                padding: '8px 16px',\n                backgroundColor: 'rgba(255, 255, 255, 0.15)',\n                borderRadius: '4px',\n                minWidth: '100px',\n                textAlign: 'center',\n                fontSize: '1.7em'\n              },\n              children: [\"$\", borrowAmount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 916,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setBorrowAmount(Math.min(100000, borrowAmount + 500)),\n              style: {\n                padding: '8px 12px',\n                fontSize: '1.7em',\n                cursor: 'pointer',\n                backgroundColor: 'rgba(255, 255, 255, 0.2)',\n                border: 'none',\n                color: 'white',\n                borderRadius: '4px'\n              },\n              children: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 926,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 893,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              if (socket) {\n                socket.emit('borrowMoney', {\n                  amount: borrowAmount\n                });\n                setBorrowAmount(500); // Reset to default\n              }\n            },\n            style: {\n              width: '100%',\n              padding: '12px',\n              backgroundColor: 'rgba(255, 255, 255, 0.3)',\n              border: 'none',\n              color: 'white',\n              borderRadius: '4px',\n              cursor: 'pointer',\n              fontSize: '1.1em',\n              transition: 'background-color 0.2s'\n            },\n            children: \"Borrow\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 941,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 886,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: 'rgba(0, 0, 0, 0.33)',\n            padding: '20px',\n            borderRadius: '8px',\n            marginTop: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            style: {\n              marginBottom: '15px'\n            },\n            children: \"Pay Off Loan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 972,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              gap: '10px',\n              marginBottom: '20px',\n              alignItems: 'center',\n              justifyContent: 'center',\n              fontSize: '1em'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setPayoffAmount(Math.max(500, payoffAmount - 500)),\n              disabled: !(player !== null && player !== void 0 && player.loan),\n              style: {\n                padding: '8px 12px',\n                fontSize: '1.2em',\n                cursor: player !== null && player !== void 0 && player.loan ? 'pointer' : 'not-allowed',\n                backgroundColor: player !== null && player !== void 0 && player.loan ? 'rgba(255, 255, 255, 0.2)' : 'rgba(255, 255, 255, 0.1)',\n                border: 'none',\n                color: 'white',\n                borderRadius: '4px',\n                fontSize: '1.7em'\n              },\n              children: \"-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 981,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                padding: '8px 16px',\n                backgroundColor: 'rgba(255, 255, 255, 0.15)',\n                borderRadius: '4px',\n                minWidth: '100px',\n                textAlign: 'center',\n                fontSize: '1.7em'\n              },\n              children: [\"$\", Math.min(payoffAmount, (player === null || player === void 0 ? void 0 : player.loan) || 0)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 997,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setPayoffAmount(Math.min((player === null || player === void 0 ? void 0 : player.loan) || 0, payoffAmount + 500)),\n              disabled: !(player !== null && player !== void 0 && player.loan),\n              style: {\n                padding: '8px 12px',\n                fontSize: '1.7em',\n                cursor: player !== null && player !== void 0 && player.loan ? 'pointer' : 'not-allowed',\n                backgroundColor: player !== null && player !== void 0 && player.loan ? 'rgba(255, 255, 255, 0.2)' : 'rgba(255, 255, 255, 0.1)',\n                border: 'none',\n                color: 'white',\n                borderRadius: '4px'\n              },\n              children: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1007,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 973,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              if (socket && player !== null && player !== void 0 && player.loan && (player === null || player === void 0 ? void 0 : player.money) >= payoffAmount) {\n                socket.emit('payoffLoan', {\n                  amount: Math.min(payoffAmount, player.loan)\n                });\n                setPayoffAmount(1000); // Reset to default\n              }\n            },\n            disabled: !(player !== null && player !== void 0 && player.loan) || (player === null || player === void 0 ? void 0 : player.money) < payoffAmount,\n            style: {\n              width: '100%',\n              padding: '12px',\n              backgroundColor: player !== null && player !== void 0 && player.loan && (player === null || player === void 0 ? void 0 : player.money) >= payoffAmount ? 'rgba(255, 255, 255, 0.3)' : 'rgba(255, 255, 255, 0.1)',\n              border: 'none',\n              color: 'white',\n              borderRadius: '4px',\n              cursor: player !== null && player !== void 0 && player.loan && (player === null || player === void 0 ? void 0 : player.money) >= payoffAmount ? 'pointer' : 'not-allowed',\n              fontSize: '1.1em',\n              transition: 'background-color 0.2s'\n            },\n            children: \"Pay Off\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1023,\n            columnNumber: 17\n          }, this), (player === null || player === void 0 ? void 0 : player.money) < payoffAmount && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: '#ff6b6b',\n              marginTop: '10px',\n              textAlign: 'center',\n              fontSize: '0.9em'\n            },\n            children: \"Insufficient funds\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1048,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 965,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '20px',\n            padding: '20px',\n            backgroundColor: 'rgba(0, 0, 0, 0.33)',\n            borderRadius: '8px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Current Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1066,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: '10px',\n              fontSize: '1.2em'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginBottom: '5px'\n              },\n              children: [\"Money: $\", (player === null || player === void 0 ? void 0 : player.money) || 0]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1071,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\" Loan: $\", (player === null || player === void 0 ? void 0 : player.loan) || 0]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1072,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1067,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1060,\n          columnNumber: 15\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: '#ff6b6b',\n            marginTop: '10px',\n            textAlign: 'center'\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1076,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 884,\n        columnNumber: 13\n      }, this), panelId === 'chat' && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: '100%',\n          padding: '20px'\n        },\n        children: /*#__PURE__*/_jsxDEV(Chat, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1091,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1087,\n        columnNumber: 13\n      }, this), panelId === 'trade' && /*#__PURE__*/_jsxDEV(TradePanel, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1095,\n        columnNumber: 13\n      }, this)]\n    }, panelId, true, {\n      fileName: _jsxFileName,\n      lineNumber: 816,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        minHeight: '100vh',\n        minWidth: '1200px',\n        position: 'relative',\n        backgroundImage: `url(${bgImage})`,\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n        backgroundRepeat: 'no-repeat',\n        overflow: 'auto'\n      },\n      children: [rpsTieAmount && /*#__PURE__*/_jsxDEV(RPSTieResolver, {\n        maxAmount: rpsTieAmount.maxAmount,\n        gameId: rpsTieAmount.gameId,\n        tiedPlayerId: rpsTieAmount.tiedPlayerId,\n        tiedPlayerName: rpsTieAmount.tiedPlayerName,\n        socket: socket,\n        onResolved: () => {\n          setRpsTieAmount(null);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1115,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1,\n          display: 'flex',\n          flexDirection: 'row',\n          alignItems: 'center',\n          justifyContent: 'center',\n          position: 'relative',\n          minWidth: '1080px',\n          padding: '20px',\n          marginTop: '220px',\n          marginBottom: '20px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'relative',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            width: '100%',\n            height: '100%',\n            minHeight: '600px' // Ensure minimum height for the board container\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'relative',\n              margin: '200px' // Add margin around the board to make space for player stats\n            },\n            children: [/*#__PURE__*/_jsxDEV(Board, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1153,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(PlayerStats, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1154,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1149,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1140,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '60%',\n          minWidth: '800px',\n          height: '240px',\n          minHeight: '400px',\n          background: 'rgba(80, 80, 80, 0.9)',\n          borderTop: '2px solid #bbb',\n          boxShadow: '0 -2px 10px rgba(0, 0, 0, 0.2)',\n          zIndex: 100,\n          display: 'flex',\n          border: '2px solid #666',\n          borderRadius: '30px 30px 0 0',\n          margin: '80px auto 0 auto'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: 1,\n            position: 'relative',\n            borderRight: '2px solid #666',\n            padding: '10px',\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            justifyContent: 'center',\n            background: 'rgba(60, 60, 60, 0.3)',\n            borderRadius: '30px 30px 30px 30px',\n            overflow: 'hidden'\n          },\n          children: [isMyTurn && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: Dicebox,\n              alt: \"Dice Board\",\n              style: {\n                position: 'absolute',\n                top: 0,\n                left: 0,\n                width: '100%',\n                height: '100%',\n                objectFit: 'fill',\n                objectPosition: 'center',\n                pointerEvents: 'none'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1190,\n              columnNumber: 13\n            }, this), testRollMode && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                position: 'absolute',\n                top: '50%',\n                left: '50%',\n                transform: 'translate(-50%, -50%)',\n                backgroundColor: 'rgba(0, 0, 0, 0.8)',\n                color: '#fff',\n                padding: '8px 16px',\n                borderRadius: '4px',\n                zIndex: 100\n              },\n              children: testRollInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1205,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(DiceRoller, {\n            testRollMode: testRollMode,\n            hasCasinoPlayed: hasCasinoPlayed,\n            style: {\n              position: 'relative',\n              zIndex: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1221,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: 1,\n            borderRight: '2px solid #666',\n            padding: '10px',\n            display: 'flex',\n            flexDirection: 'column',\n            background: 'rgba(60, 60, 60, 0.3)'\n          },\n          children: /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1237,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1229,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: 1,\n            padding: '10px',\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            justifyContent: 'center',\n            background: 'rgba(60, 60, 60, 0.3)',\n            borderRadius: '0 10px 0 0'\n          },\n          children: (_tileMeta$name2 => {\n            // Show RPS game if active\n            if (rpsGame) {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  flexDirection: 'column',\n                  alignItems: 'center',\n                  gap: '15px'\n                },\n                children: rpsResult ?\n                /*#__PURE__*/\n                // Show result for multiple players\n                _jsxDEV(\"div\", {\n                  style: {\n                    textAlign: 'center',\n                    color: '#fff',\n                    fontSize: '1.4em'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [rpsResult.landingPlayer.name, \"'s choice: \", rpsResult.landingPlayer.choice]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1268,\n                    columnNumber: 25\n                  }, this), rpsResult.winners.map(winner => /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      color: '#f44336'\n                    },\n                    children: [\"Lost against \", winner.name, \" (\", winner.choice, \")\"]\n                  }, winner.socketId, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1272,\n                    columnNumber: 27\n                  }, this)), rpsResult.losers.map(loser => /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      color: '#4CAF50'\n                    },\n                    children: [\"Won against \", loser.name, \" (\", loser.choice, \")\"]\n                  }, loser.socketId, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1277,\n                    columnNumber: 27\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1263,\n                  columnNumber: 23\n                }, this) : rpsTieAmount ? /*#__PURE__*/_jsxDEV(RPSTieResolver, {\n                  maxAmount: rpsTieAmount.maxAmount,\n                  gameId: rpsTieAmount.gameId,\n                  tiedPlayerId: rpsTieAmount.tiedPlayerId,\n                  tiedPlayerName: rpsTieAmount.tiedPlayerName,\n                  socket: socket,\n                  onResolved: () => {\n                    setRpsTieAmount(null);\n                    setRpsGame(null);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1283,\n                  columnNumber: 23\n                }, this) :\n                /*#__PURE__*/\n                // Show RPS buttons for all involved players\n                _jsxDEV(\"div\", {\n                  style: {\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'center',\n                    gap: '15px'\n                  },\n                  children: [((player === null || player === void 0 ? void 0 : player.socketId) === rpsGame.landingPlayer.socketId || rpsGame.closestPlayers.some(p => p.socketId === (player === null || player === void 0 ? void 0 : player.socketId))) && !rpsChoice && /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        color: '#fff',\n                        fontSize: '1.2em',\n                        textAlign: 'center'\n                      },\n                      children: (player === null || player === void 0 ? void 0 : player.socketId) === rpsGame.landingPlayer.socketId ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                        children: [\"Playing against \", rpsGame.closestPlayers.map(p => p.name).join(', '), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1309,\n                          columnNumber: 35\n                        }, this), \"Choose your move:\"]\n                      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                        children: [\"Playing against \", rpsGame.landingPlayer.name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1314,\n                          columnNumber: 35\n                        }, this), \"Choose your move:\"]\n                      }, void 0, true)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1305,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        display: 'flex',\n                        gap: '10px'\n                      },\n                      children: ['rock', 'paper', 'scissors'].map(choice => /*#__PURE__*/_jsxDEV(\"button\", {\n                        onClick: () => {\n                          setRpsChoice(choice);\n                          socket.emit('stonePaperScissorsChoice', {\n                            choice,\n                            gameId: rpsGame.gameId\n                          });\n                        },\n                        style: {\n                          padding: '12px 24px',\n                          fontSize: '1.1em',\n                          backgroundColor: '#2196F3',\n                          color: 'white',\n                          border: 'none',\n                          borderRadius: '4px',\n                          cursor: 'pointer',\n                          textTransform: 'capitalize'\n                        },\n                        children: choice\n                      }, choice, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1323,\n                        columnNumber: 33\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1318,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true), rpsChoice && /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      color: '#fff',\n                      fontSize: '1.2em'\n                    },\n                    children: [\"You chose: \", rpsChoice]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1350,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1296,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1255,\n                columnNumber: 19\n              }, this);\n            }\n\n            // Show \"Your Turn\" for current player before landing\n            if (isMyTurn && !movementDone) {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  height: '100%',\n                  color: '#fff',\n                  fontSize: '1.6em',\n                  fontWeight: 'bold',\n                  textShadow: '2px 2px 4px rgba(0,0,0,0.5)'\n                },\n                children: \"Your Turn\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1363,\n                columnNumber: 19\n              }, this);\n            }\n\n            // Buy Property\n            if (isMyTurn && (tileMeta === null || tileMeta === void 0 ? void 0 : tileMeta.type) === 'property' && !players.some(p => p.properties.includes(tileMeta === null || tileMeta === void 0 ? void 0 : tileMeta.id))) {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  flexDirection: 'column',\n                  alignItems: 'center',\n                  gap: '10px'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: handleBuy,\n                  disabled: player.money < tileMeta.cost || (player.loan || 0) > 10000,\n                  style: {\n                    padding: '15px 30px',\n                    // Increased padding\n                    fontSize: '1.4em',\n                    // Increased font size\n                    backgroundColor: player.money >= tileMeta.cost && (player.loan || 0) <= 10000 ? '#4CAF50' : '#ccc',\n                    color: player.money >= tileMeta.cost && (player.loan || 0) <= 10000 ? 'white' : '#ff0000',\n                    border: 'none',\n                    borderRadius: '12px',\n                    // Increased border radius\n                    cursor: player.money >= tileMeta.cost && (player.loan || 0) <= 10000 ? 'pointer' : 'not-allowed',\n                    fontWeight: 'bold',\n                    boxShadow: '0 4px 8px rgba(0,0,0,0.2)',\n                    // Added shadow\n                    transition: 'transform 0.2s',\n                    ':hover': {\n                      transform: 'scale(1.05)'\n                    }\n                  },\n                  children: [\"Buy ($\", tileMeta.cost, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1388,\n                  columnNumber: 17\n                }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    color: 'tomato',\n                    margin: 0\n                  },\n                  children: error\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1410,\n                  columnNumber: 23\n                }, this), (player.loan || 0) > 10000 && /*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    color: 'tomato',\n                    margin: 0\n                  },\n                  children: \"Cannot buy property when loan exceeds $10,000\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1413,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1382,\n                columnNumber: 19\n              }, this);\n            }\n\n            // Road Cash Game\n            if (isMyTurn && (tileMeta === null || tileMeta === void 0 ? void 0 : tileMeta.id) === 22) {\n              return /*#__PURE__*/_jsxDEV(RoadCash, {\n                isMyTurn: isMyTurn,\n                socket: socket\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1421,\n                columnNumber: 24\n              }, this);\n            }\n\n            // Casino\n            if (inCasino && isMyTurn) {\n              return /*#__PURE__*/_jsxDEV(CasinoBetting, {\n                isMyTurn: isMyTurn,\n                currentMoney: (player === null || player === void 0 ? void 0 : player.money) || 0,\n                socket: socket,\n                player: player,\n                onCasinoPlayed: () => setHasCasinoPlayed(true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1427,\n                columnNumber: 19\n              }, this);\n            }\n\n            // Corner Choice\n            if (isMyTurn && tileMeta !== null && tileMeta !== void 0 && (_tileMeta$name2 = tileMeta.name) !== null && _tileMeta$name2 !== void 0 && _tileMeta$name2.toLowerCase().includes('choose corner')) {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'grid',\n                  gridTemplateColumns: '1fr 1fr',\n                  gridTemplateRows: '1fr 1fr',\n                  gap: '20px',\n                  width: '100%',\n                  maxWidth: '600px',\n                  padding: '20px',\n                  margin: '0 auto'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => {\n                    socket.emit('teleport', {\n                      toTile: 1,\n                      prevTile: 30\n                    });\n                    setError(null);\n                    setHasChosenCorner(true);\n                  },\n                  style: {\n                    margin: 0,\n                    padding: 0,\n                    border: '3px solid #666',\n                    borderRadius: '12px',\n                    backgroundImage: `url(${startIcon})`,\n                    backgroundSize: '80%',\n                    backgroundRepeat: 'no-repeat',\n                    backgroundPosition: 'center 40%',\n                    cursor: 'pointer',\n                    display: 'flex',\n                    alignItems: 'flex-end',\n                    justifyContent: 'center',\n                    width: '100%',\n                    height: '100%',\n                    minHeight: '180px',\n                    position: 'relative',\n                    backgroundColor: 'rgba(255, 255, 255, 0.15)',\n                    transition: 'transform 0.2s, background-color 0.2s',\n                    ':hover': {\n                      transform: 'scale(1.02)',\n                      backgroundColor: 'rgba(255, 255, 255, 0.2)'\n                    }\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      padding: '8px 16px',\n                      backgroundColor: 'rgba(0,0,0,0.6)',\n                      borderRadius: '0 0 9px 9px',\n                      color: '#fff',\n                      fontWeight: 'bold',\n                      fontSize: '1.4em',\n                      textShadow: '2px 2px 4px rgba(0,0,0,0.7)',\n                      position: 'absolute',\n                      bottom: 0,\n                      width: '100%',\n                      textAlign: 'center'\n                    },\n                    children: \"Start\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1481,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1450,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => {\n                    socket.emit('teleport', {\n                      toTile: 22,\n                      prevTile: 21\n                    });\n                    setError(null);\n                    setHasChosenCorner(true);\n                  },\n                  style: {\n                    margin: 0,\n                    padding: 0,\n                    border: '3px solid #666',\n                    borderRadius: '12px',\n                    backgroundImage: `url(${roadIcon})`,\n                    backgroundSize: '80%',\n                    backgroundRepeat: 'no-repeat',\n                    backgroundPosition: 'center 40%',\n                    cursor: 'pointer',\n                    display: 'flex',\n                    alignItems: 'flex-end',\n                    justifyContent: 'center',\n                    width: '100%',\n                    height: '100%',\n                    minHeight: '180px',\n                    position: 'relative',\n                    backgroundColor: 'rgba(255, 255, 255, 0.15)',\n                    transition: 'transform 0.2s, background-color 0.2s',\n                    ':hover': {\n                      transform: 'scale(1.02)',\n                      backgroundColor: 'rgba(255, 255, 255, 0.2)'\n                    }\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      padding: '8px 16px',\n                      backgroundColor: 'rgba(0,0,0,0.6)',\n                      borderRadius: '0 0 9px 9px',\n                      color: '#fff',\n                      fontWeight: 'bold',\n                      fontSize: '1.4em',\n                      textShadow: '2px 2px 4px rgba(0,0,0,0.7)',\n                      position: 'absolute',\n                      bottom: 0,\n                      width: '100%',\n                      textAlign: 'center'\n                    },\n                    children: \"Road\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1526,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1495,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => {\n                    socket.emit('teleport', {\n                      toTile: 7,\n                      prevTile: 6\n                    });\n                    setError(null);\n                    setHasChosenCorner(true);\n                  },\n                  style: {\n                    margin: 0,\n                    padding: 0,\n                    border: '3px solid #666',\n                    borderRadius: '12px',\n                    backgroundImage: `url(${hotelIcon})`,\n                    backgroundSize: '80%',\n                    backgroundRepeat: 'no-repeat',\n                    backgroundPosition: 'center 40%',\n                    cursor: 'pointer',\n                    display: 'flex',\n                    alignItems: 'flex-end',\n                    justifyContent: 'center',\n                    width: '100%',\n                    height: '100%',\n                    minHeight: '180px',\n                    position: 'relative',\n                    backgroundColor: 'rgba(255, 255, 255, 0.15)',\n                    transition: 'transform 0.2s, background-color 0.2s',\n                    ':hover': {\n                      transform: 'scale(1.02)',\n                      backgroundColor: 'rgba(255, 255, 255, 0.2)'\n                    }\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      padding: '8px 16px',\n                      backgroundColor: 'rgba(0,0,0,0.6)',\n                      borderRadius: '0 0 9px 9px',\n                      color: '#fff',\n                      fontWeight: 'bold',\n                      fontSize: '1.4em',\n                      textShadow: '2px 2px 4px rgba(0,0,0,0.7)',\n                      position: 'absolute',\n                      bottom: 0,\n                      width: '100%',\n                      textAlign: 'center'\n                    },\n                    children: \"Hotel\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1571,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1540,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => {\n                    socket.emit('teleport', {\n                      toTile: 16,\n                      prevTile: 15\n                    });\n                    setError(null);\n                    setHasChosenCorner(true);\n                  },\n                  style: {\n                    margin: 0,\n                    padding: 0,\n                    border: '3px solid #666',\n                    borderRadius: '12px',\n                    backgroundImage: `url(${casinoIcon})`,\n                    backgroundSize: '80%',\n                    backgroundRepeat: 'no-repeat',\n                    backgroundPosition: 'center 40%',\n                    cursor: 'pointer',\n                    display: 'flex',\n                    alignItems: 'flex-end',\n                    justifyContent: 'center',\n                    width: '100%',\n                    height: '100%',\n                    minHeight: '180px',\n                    position: 'relative',\n                    backgroundColor: 'rgba(255, 255, 255, 0.15)',\n                    transition: 'transform 0.2s, background-color 0.2s',\n                    ':hover': {\n                      transform: 'scale(1.02)',\n                      backgroundColor: 'rgba(255, 255, 255, 0.2)'\n                    }\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      padding: '8px 16px',\n                      backgroundColor: 'rgba(0,0,0,0.6)',\n                      borderRadius: '0 0 9px 9px',\n                      color: '#fff',\n                      fontWeight: 'bold',\n                      fontSize: '1.4em',\n                      textShadow: '2px 2px 4px rgba(0,0,0,0.7)',\n                      position: 'absolute',\n                      bottom: 0,\n                      width: '100%',\n                      textAlign: 'center'\n                    },\n                    children: \"Casino\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1616,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1585,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1440,\n                columnNumber: 19\n              }, this);\n            }\n\n            // Show error message if any\n            if (error) {\n              return /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  color: 'tomato',\n                  margin: 0\n                },\n                children: error\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1637,\n                columnNumber: 19\n              }, this);\n            }\n\n            // Show empty state for non-turn players or when no action is needed\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center',\n                justifyContent: 'center',\n                height: '100%',\n                gap: '20px'\n              },\n              children: rpsGame && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  flexDirection: 'column',\n                  alignItems: 'center',\n                  gap: '15px'\n                },\n                children: rpsResult ?\n                /*#__PURE__*/\n                // Show result for multiple players\n                _jsxDEV(\"div\", {\n                  style: {\n                    textAlign: 'center',\n                    color: '#fff',\n                    fontSize: '1.4em'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [rpsResult.landingPlayer.name, \"'s choice: \", rpsResult.landingPlayer.choice]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1665,\n                    columnNumber: 27\n                  }, this), rpsResult.winners.map(winner => /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      color: '#f44336'\n                    },\n                    children: [\"Lost against \", winner.name, \" (\", winner.choice, \")\"]\n                  }, winner.socketId, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1669,\n                    columnNumber: 29\n                  }, this)), rpsResult.losers.map(loser => /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      color: '#4CAF50'\n                    },\n                    children: [\"Won against \", loser.name, \" (\", loser.choice, \")\"]\n                  }, loser.socketId, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1674,\n                    columnNumber: 29\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1660,\n                  columnNumber: 25\n                }, this) : rpsTieAmount ? /*#__PURE__*/_jsxDEV(RPSTieResolver, {\n                  maxAmount: rpsTieAmount.maxAmount,\n                  gameId: rpsTieAmount.gameId,\n                  tiedPlayerId: rpsTieAmount.tiedPlayerId,\n                  tiedPlayerName: rpsTieAmount.tiedPlayerName,\n                  socket: socket,\n                  onResolved: () => {\n                    setRpsTieAmount(null);\n                    setRpsGame(null);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1680,\n                  columnNumber: 25\n                }, this) :\n                /*#__PURE__*/\n                // Show RPS buttons for all involved players\n                _jsxDEV(\"div\", {\n                  style: {\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'center',\n                    gap: '15px'\n                  },\n                  children: [((player === null || player === void 0 ? void 0 : player.socketId) === rpsGame.landingPlayer.socketId || rpsGame.closestPlayers.some(p => p.socketId === (player === null || player === void 0 ? void 0 : player.socketId))) && !rpsChoice && /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        color: '#fff',\n                        fontSize: '1.2em',\n                        textAlign: 'center'\n                      },\n                      children: (player === null || player === void 0 ? void 0 : player.socketId) === rpsGame.landingPlayer.socketId ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                        children: [\"Playing against \", rpsGame.closestPlayers.map(p => p.name).join(', '), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1706,\n                          columnNumber: 37\n                        }, this), \"Choose your move:\"]\n                      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                        children: [\"Playing against \", rpsGame.landingPlayer.name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1711,\n                          columnNumber: 37\n                        }, this), \"Choose your move:\"]\n                      }, void 0, true)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1702,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        display: 'flex',\n                        gap: '10px'\n                      },\n                      children: ['rock', 'paper', 'scissors'].map(choice => /*#__PURE__*/_jsxDEV(\"button\", {\n                        onClick: () => {\n                          setRpsChoice(choice);\n                          socket.emit('stonePaperScissorsChoice', {\n                            choice,\n                            gameId: rpsGame.gameId\n                          });\n                        },\n                        style: {\n                          padding: '12px 24px',\n                          fontSize: '1.1em',\n                          backgroundColor: '#2196F3',\n                          color: 'white',\n                          border: 'none',\n                          borderRadius: '4px',\n                          cursor: 'pointer',\n                          textTransform: 'capitalize'\n                        },\n                        children: choice\n                      }, choice, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1720,\n                        columnNumber: 35\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1715,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true), rpsChoice && /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      color: '#fff',\n                      fontSize: '1.2em'\n                    },\n                    children: [\"You chose: \", rpsChoice]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1747,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1693,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1652,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1643,\n              columnNumber: 17\n            }, this);\n          })()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1241,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1160,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 771,\n    columnNumber: 5\n  }, this);\n}\n_s2(GameScreen, \"ZhabWvAsFlEno20k+6EZ7LdHM7s=\");\n_c2 = GameScreen;\nvar _c, _c2;\n$RefreshReg$(_c, \"CasinoBetting\");\n$RefreshReg$(_c2, \"GameScreen\");","map":{"version":3,"names":["React","useContext","useState","useEffect","bgImage","Dicebox","startIcon","hotelIcon","casinoIcon","roadIcon","Board","DiceRoller","Dashboard","PlayerStats","RoadCash","RPSTieResolver","GameContext","tiles","Chat","TradePanel","jsxDEV","_jsxDEV","Fragment","_Fragment","CasinoBetting","isMyTurn","currentMoney","socket","player","onCasinoPlayed","_s","betAmount","setBetAmount","selectedBet","setSelectedBet","showResult","setShowResult","diceResult","setDiceResult","isActive","setIsActive","handleAmountChange","delta","newAmount","Math","max","min","handleBetSelect","bet","handleRoll","emit","betType","handleCasinoResult","playerId","dice","amount","won","playerMoney","socketId","on","off","style","display","flexDirection","alignItems","justifyContent","height","gap","children","src","alt","width","fileName","_jsxFileName","lineNumber","columnNumber","color","fontWeight","fontSize","backgroundColor","padding","borderRadius","border","onClick","disabled","cursor","transition","boxShadow","minWidth","textAlign","map","textTransform","marginTop","letterSpacing","textShadow","_c","GameScreen","_s2","players","setPlayer","setPlayers","currentPlayerId","movementDone","error","setError","testRollInput","setTestRollInput","testRollMode","setTestRollMode","inCasino","setInCasino","hasCasinoPlayed","setHasCasinoPlayed","hasChosenCorner","setHasChosenCorner","rpsGame","setRpsGame","rpsChoice","setRpsChoice","rpsResult","setRpsResult","rpsTieAmount","setRpsTieAmount","activeSidePanel","setActiveSidePanel","borrowAmount","setBorrowAmount","payoffAmount","setPayoffAmount","gameEvents","setGameEvents","handleBorrowResponse","success","setTimeout","events","event","prev","panelConfigs","info","title","icon","bank","chat","trade","tileMeta","find","t","id","tileId","_tileMeta$name","name","toLowerCase","includes","handleKeyPress","e","key","startsWith","rollNumber","parseInt","slice","isNaN","testRoll","length","window","addEventListener","removeEventListener","console","log","type","cost","money","properties","updated","p","playerName","temporary","propertyId","action","newMoney","prevPlayers","filter","property","playerSocketId","reason","payerSocketId","payerMoney","payerLoan","ownerSocketId","ownerMoney","baseRent","multiplier","propertyName","_players$find","_players$find2","loan","toLocaleString","marginLeft","game","result","updatedPlayers","landingPlayer","abs","winner","winners","w","loser","losers","l","forEach","message","choice","drawnAmount","landingPlayerId","tiedPlayerId","tiedPlayerName","maxAmount","gameId","tiedPlayer","remainingTies","isCasinoTile","handleBuy","position","Object","entries","panelId","config","index","right","top","clipPath","zIndex","transform","overflowY","marginBottom","replace","match","isGain","isLoss","lineHeight","dangerouslySetInnerHTML","__html","minHeight","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","overflow","onResolved","flex","margin","background","borderTop","borderRight","left","objectFit","objectPosition","pointerEvents","_tileMeta$name2","closestPlayers","some","join","gridTemplateColumns","gridTemplateRows","maxWidth","toTile","prevTile","bottom","_c2","$RefreshReg$"],"sources":["C:/Users/addhy/Desktop/Business_web - Copy (2)/client/src/components/GameScreen.js"],"sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\nimport bgImage from '../assets/bg.png';\nimport Dicebox from '../assets/diceBoard.png';\nimport startIcon from '../assets/start.png';\nimport hotelIcon from '../assets/hotel.png';\nimport casinoIcon from '../assets/casino.png';\nimport roadIcon from '../assets/road.png';\nimport Board from './Board';\nimport DiceRoller from './DiceRoller';\nimport Dashboard from './Dashboard';\nimport PlayerStats from './PlayerStats';\nimport RoadCash from './RoadCash';\nimport RPSTieResolver from './RPSTieResolver';\nimport { GameContext } from '../context/GameContext';\nimport { tiles } from '../data/tiles';\nimport Chat from './Chat';\nimport TradePanel from './TradePanel';\n\nconst CasinoBetting = ({ isMyTurn, currentMoney, socket, player, onCasinoPlayed }) => {\n  const [betAmount, setBetAmount] = useState(1000);\n  const [selectedBet, setSelectedBet] = useState(null);\n  const [showResult, setShowResult] = useState(null);\n  const [diceResult, setDiceResult] = useState(null);\n  const [isActive, setIsActive] = useState(true);\n\n  const handleAmountChange = (delta) => {\n    const newAmount = Math.max(1000, Math.min(currentMoney, betAmount + delta));\n    setBetAmount(newAmount);\n  };\n\n  const handleBetSelect = (bet) => {\n    setSelectedBet(bet);\n  };\n\n  const handleRoll = () => {\n    if (selectedBet && betAmount >= 1000 && betAmount <= currentMoney) {\n      socket.emit('casinoRoll', { betAmount, betType: selectedBet });\n    }\n  };\n\n  useEffect(() => {\n    const handleCasinoResult = ({ playerId, dice, amount, won, playerMoney }) => {\n      if (playerId === player.socketId) {\n        setDiceResult(dice);\n        setShowResult({ won, amount });\n        setIsActive(false);\n        onCasinoPlayed();\n      }\n    };\n\n    socket.on('casinoResult', handleCasinoResult);\n    return () => socket.off('casinoResult', handleCasinoResult);\n  }, [socket, player.socketId, onCasinoPlayed]);\n\n  // If not active (after result), show nothing\n  if (!isActive) {\n    if (showResult && diceResult) {\n      return (\n        <div style={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n          height: '100%',\n          gap: '20px'\n        }}>\n          <div style={{\n            display: 'flex',\n            gap: '10px',\n            justifyContent: 'center'\n          }}>\n            <img \n              src={`/dice/dice${diceResult[0]}.png`} \n              alt={`Die ${diceResult[0]}`} \n              width={125}\n              height={125}\n            />\n            <img \n              src={`/dice/dice${diceResult[1]}.png`} \n              alt={`Die ${diceResult[1]}`} \n              width={125}\n              height={125}\n            />\n          </div>\n          <div style={{\n            color: showResult.won ? '#4CAF50' : '#f44336',\n            fontWeight: 'bold',\n            fontSize: '1.2em'\n          }}>\n            {showResult.won ? `You won $${showResult.amount}!` : `You lost $${showResult.amount}`}\n          </div>\n        </div>\n      );\n    }\n    return null;\n  }\n\n  return (\n    <div style={{\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: '100%',\n      gap: '25px'\n    }}>\n      {/* Bet amount control */}\n      <div style={{\n        display: 'flex',\n        alignItems: 'center',\n        gap: '15px',\n        backgroundColor: 'rgba(0, 0, 0, 0.3)',\n        padding: '15px 20px',\n        borderRadius: '12px',\n        border: '1px solid rgba(255, 255, 255, 0.1)'\n      }}>\n        <button\n          onClick={() => handleAmountChange(-500)}\n          disabled={!isMyTurn || betAmount <= 1000}\n          style={{\n            padding: '12px 20px',\n            fontSize: '1.8em',\n            cursor: isMyTurn ? 'pointer' : 'not-allowed',\n            backgroundColor: isMyTurn && betAmount > 1000 ? '#ff4444' : 'rgba(255, 68, 68, 0.5)',\n            color: 'white',\n            border: 'none',\n            borderRadius: '8px',\n            width: '60px',\n            transition: 'all 0.2s ease',\n            boxShadow: '0 2px 4px rgba(0, 0, 0, 0.2)'\n          }}\n        >\n          -\n        </button>\n        <div style={{\n          padding: '12px 20px',\n          border: '2px solid rgba(255, 255, 255, 0.2)',\n          borderRadius: '8px',\n          minWidth: '150px',\n          textAlign: 'center',\n          fontSize: '1.6em',\n          color: 'white',\n          backgroundColor: 'rgba(0, 0, 0, 0.2)'\n        }}>\n          ${betAmount}\n        </div>\n        <button\n          onClick={() => handleAmountChange(500)}\n          disabled={!isMyTurn || betAmount >= currentMoney}\n          style={{\n            padding: '12px 20px',\n            fontSize: '1.8em',\n            cursor: isMyTurn ? 'pointer' : 'not-allowed',\n            backgroundColor: isMyTurn && betAmount < currentMoney ? '#4CAF50' : 'rgba(76, 175, 80, 0.5)',\n            color: 'white',\n            border: 'none',\n            borderRadius: '8px',\n            width: '60px',\n            transition: 'all 0.2s ease',\n            boxShadow: '0 2px 4px rgba(0, 0, 0, 0.2)'\n          }}\n        >\n          +\n        </button>\n      </div>\n\n      {/* Bet type buttons */}\n      <div style={{\n        display: 'flex',\n        gap: '15px',\n        backgroundColor: 'rgba(0, 0, 0, 0.3)',\n        padding: '15px 20px',\n        borderRadius: '12px',\n        border: '1px solid rgba(255, 255, 255, 0.1)'\n      }}>\n        {['above', '7', 'below'].map(bet => (\n          <button\n            key={bet}\n            onClick={() => handleBetSelect(bet)}\n            disabled={!isMyTurn}\n            style={{\n              padding: '15px 25px',\n              backgroundColor: selectedBet === bet ? '#2196F3' : 'rgba(33, 150, 243, 0.3)',\n              color: '#fff',\n              border: selectedBet === bet ? '2px solid #90CAF9' : '1px solid rgba(255, 255, 255, 0.1)',\n              borderRadius: '8px',\n              cursor: isMyTurn ? 'pointer' : 'not-allowed',\n              fontSize: '1.4em',\n              fontWeight: 'bold',\n              textTransform: 'uppercase',\n              minWidth: '120px',\n              transition: 'all 0.2s ease',\n              boxShadow: selectedBet === bet ? '0 0 10px rgba(33, 150, 243, 0.5)' : 'none'\n            }}\n          >\n            {bet}\n          </button>\n        ))}\n      </div>\n\n      {/* Roll button */}\n      <button\n        onClick={handleRoll}\n        disabled={!isMyTurn || !selectedBet || betAmount < 1000 || betAmount > currentMoney}\n        style={{\n          padding: '15px 40px',\n          backgroundColor: isMyTurn && selectedBet && betAmount >= 1000 && betAmount <= currentMoney \n            ? '#FFA000' \n            : 'rgba(255, 160, 0, 0.3)',\n          color: '#fff',\n          border: 'none',\n          borderRadius: '12px',\n          marginTop: '10px',\n          cursor: isMyTurn && selectedBet ? 'pointer' : 'not-allowed',\n          fontSize: '1.8em',\n          fontWeight: 'bold',\n          letterSpacing: '2px',\n          textTransform: 'uppercase',\n          transition: 'all 0.3s ease',\n          boxShadow: isMyTurn && selectedBet ? '0 4px 15px rgba(255, 160, 0, 0.4)' : 'none',\n          textShadow: '2px 2px 4px rgba(0, 0, 0, 0.3)'\n        }}\n      >\n        Roll\n      </button>\n    </div>\n  );\n};\n\nexport default function GameScreen() {\n  const {\n    player,\n    players,\n    setPlayer,\n    setPlayers,\n    currentPlayerId,\n    socket,\n    movementDone\n  } = useContext(GameContext);\n\n  const isMyTurn = player?.socketId === currentPlayerId;\n  const [error, setError] = useState(null);\n  const [testRollInput, setTestRollInput] = useState('');\n  const [testRollMode, setTestRollMode] = useState(false);\n  const [inCasino, setInCasino] = useState(false);\n  const [hasCasinoPlayed, setHasCasinoPlayed] = useState(false);\n  const [hasChosenCorner, setHasChosenCorner] = useState(false);\n  const [rpsGame, setRpsGame] = useState(null);\n  const [rpsChoice, setRpsChoice] = useState(null);\n  const [rpsResult, setRpsResult] = useState(null);\n  const [rpsTieAmount, setRpsTieAmount] = useState(null);\n  const [activeSidePanel, setActiveSidePanel] = useState(null);\n  const [borrowAmount, setBorrowAmount] = useState(1000);\n  const [payoffAmount, setPayoffAmount] = useState(1000);\n  const [gameEvents, setGameEvents] = useState([]);\n\n  // Add socket event listener for borrow response\n  useEffect(() => {\n    if (!socket) return;\n\n    const handleBorrowResponse = ({ success, error }) => {\n      if (!success && error) {\n        setError(error);\n        setTimeout(() => setError(null), 5000);\n      }\n    };\n\n    socket.on('borrowResponse', handleBorrowResponse);\n\n    return () => {\n      socket.off('borrowResponse', handleBorrowResponse);\n    };\n  }, [socket]);\n\n  // Add socket event listener for game events\n  useEffect(() => {\n    if (!socket) return;\n\n    // Handle initial game events history\n    socket.on('gameEventsHistory', (events) => {\n      setGameEvents(events);\n    });\n\n    // Handle new game events\n    socket.on('gameEvent', (event) => {\n      setGameEvents(prev => [...prev, event]);\n    });\n\n    return () => {\n      socket.off('gameEventsHistory');\n      socket.off('gameEvent');\n    };\n  }, [socket]);\n\n  // Define panel configurations\n  const panelConfigs = {\n    info: {\n      color: '#4CAF50', // Green\n      title: 'Game Events',\n      icon: '📋'\n    },\n    bank: {\n      color: '#2196F3', // Blue\n      title: 'Bank',\n      icon: '💰'\n    },\n    chat: {\n      color: '#9C27B0', // Purple\n      title: 'Chat',\n      icon: '💬'\n    },\n    trade: {\n      color: '#FF9800', // Orange\n      title: 'Trade',\n      icon: '🔄'\n    }\n  };\n\n  // Determine metadata for the current tile\n  const tileMeta = tiles.find(t => t.id === player?.tileId);\n\n  // Reset hasChosenCorner when turn ends or tile changes\n  useEffect(() => {\n    if (!isMyTurn || !tileMeta?.name?.toLowerCase().includes('choose corner')) {\n      setHasChosenCorner(false);\n    }\n  }, [isMyTurn, tileMeta]);\n\n  // Add keyboard listener for test rolls\n  useEffect(() => {\n    const handleKeyPress = (e) => {\n      if (!isMyTurn) return;\n\n      // Build up the test roll input\n      if (e.key === 'Enter' && testRollInput.startsWith('testroll')) {\n        const rollNumber = parseInt(testRollInput.slice(8));\n        if (!isNaN(rollNumber) && rollNumber >= 2 && rollNumber <= 12) {\n          socket.emit('rollDice', { testRoll: rollNumber });\n          setTestRollInput('');\n          setTestRollMode(false);\n        }\n      } else if (e.key === 'Backspace') {\n        setTestRollInput(prev => prev.slice(0, -1));\n      } else if (e.key.length === 1) { // Regular character\n        setTestRollInput(prev => prev + e.key);\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyPress);\n    return () => window.removeEventListener('keydown', handleKeyPress);\n  }, [isMyTurn, testRollInput, socket]);\n\n  // Show current test roll input if active\n  useEffect(() => {\n    if (testRollInput.startsWith('testroll')) {\n      setTestRollMode(true);\n    } else if (testRollInput.length === 0) {\n      setTestRollMode(false);\n    }\n  }, [testRollInput]);\n\n  // Debug logging to trace condition\n  useEffect(() => {\n    console.log('[GameScreen] Debug:', {\n      isMyTurn,\n      movementDone,\n      tileMeta,\n      \"player.tileId\": player?.tileId,\n      \"tileMeta.type\": tileMeta?.type,\n      \"tileMeta.cost\": tileMeta?.cost,\n      \"player.money\": player?.money,\n      testRollMode,\n      testRollInput\n    });\n  }, [isMyTurn, movementDone, tileMeta, player, testRollMode, testRollInput]);\n\n  // Listen for purchase events\n  useEffect(() => {\n    socket.on('purchaseSuccess', ({ socketId, money, properties }) => {\n      console.log('[GameScreen] purchaseSuccess', { socketId, money, properties });\n      const updated = players.map(p =>\n        p.socketId === socketId ? { ...p, money, properties } : p\n      );\n      setPlayers(updated);\n      if (player.socketId === socketId) {\n        setPlayer({ ...player, money, properties });\n      }\n      setError(null);\n    });\n\n    // Add player disconnect handler\n    socket.on('playerDisconnected', ({ playerName, temporary }) => {\n      if (temporary) {\n        setError(`${playerName} temporarily disconnected. They can rejoin with the same name.`);\n        setTimeout(() => setError(null), 5000);\n      }\n    });\n\n    // Add property update handler\n    socket.on('propertyUpdated', ({ playerId, propertyId, action, newMoney }) => {\n      console.log('[GameScreen] propertyUpdated', { playerId, propertyId, action, newMoney });\n      \n      // Update players' properties and money\n      setPlayers(prevPlayers => {\n        return prevPlayers.map(p => {\n          if (p.socketId === playerId) {\n            return {\n              ...p,\n              properties: action === 'add'\n                ? [...(p.properties || []), propertyId]\n                : (p.properties || []).filter(id => id !== propertyId),\n              money: newMoney // Update the player's money\n            };\n          }\n          return p;\n        });\n      });\n\n      // Update current player if they're involved\n      if (player.socketId === playerId) {\n        setPlayer(prev => ({\n          ...prev,\n          properties: action === 'add'\n            ? [...(prev.properties || []), propertyId]\n            : (prev.properties || []).filter(id => id !== propertyId),\n          money: newMoney // Update the current player's money\n        }));\n\n        // Show message when selling property\n        if (action === 'remove') {\n          const property = tiles.find(t => t.id === propertyId);\n          setError(`You sold ${property.name} for $${property.cost}`);\n          setTimeout(() => setError(null), 5000);\n        }\n      }\n    });\n\n    // Add start bonus handler\n    socket.on('startBonus', ({ playerSocketId, newMoney, amount, reason }) => {\n      console.log('[GameScreen] startBonus', { playerSocketId, newMoney, amount, reason });\n      \n      // Update players' money\n      const updated = players.map(p =>\n        p.socketId === playerSocketId ? { ...p, money: newMoney } : p\n      );\n      setPlayers(updated);\n\n      // Update current player's money if they got the bonus\n      if (player.socketId === playerSocketId) {\n        setPlayer({ ...player, money: newMoney });\n        setError(`You received $${amount} for ${reason} Start!`);\n        // Clear bonus message after 7 seconds\n        setTimeout(() => setError(null), 7000);\n      }\n    });\n\n    // Add playerMoved event handler\n    socket.on('playerMoved', ({ playerId, tileId }) => {\n      console.log('[GameScreen] playerMoved', { playerId, tileId });\n      if (playerId === player?.socketId) {\n        setPlayer(prev => ({ ...prev, tileId }));\n      }\n      setPlayers(prev => \n        prev.map(p => p.socketId === playerId ? { ...p, tileId } : p)\n      );\n      // Clear any previous messages when a player moves\n      setError(null);\n    });\n\n    socket.on('purchaseFailed', ({ reason }) => {\n      console.log('[GameScreen] purchaseFailed', reason);\n      if (reason === 'insufficientFunds') {\n        setError(\"You don't have enough money.\");\n      } else if (reason === 'alreadyOwned') {\n        setError('You already own this property.');\n      } else {\n        setError('Cannot buy this property.');\n      }\n      // Clear error message after 5 seconds\n      setTimeout(() => setError(null), 5000);\n    });\n\n    // Add rent payment handler\n    socket.on('rentPaid', ({ payerSocketId, payerMoney, payerLoan, ownerSocketId, ownerMoney, amount, baseRent, multiplier, propertyName }) => {\n      console.log('[GameScreen] rentPaid', { payerSocketId, ownerSocketId, amount });\n      \n      // Update players' money and loan\n      const updated = players.map(p => {\n        if (p.socketId === payerSocketId) return { ...p, money: payerMoney, loan: payerLoan };\n        if (p.socketId === ownerSocketId) return { ...p, money: ownerMoney };\n        return p;\n      });\n      setPlayers(updated);\n\n      // Update current player if they're involved\n      if (player.socketId === payerSocketId) {\n        setPlayer(prev => ({ ...prev, money: payerMoney, loan: payerLoan }));\n      } else if (player.socketId === ownerSocketId) {\n        setPlayer(prev => ({ ...prev, money: ownerMoney }));\n      }\n\n      // Show rent payment notification with stylized multiplier\n      setError(\n        <div style={{ \n          display: 'flex', \n          alignItems: 'center', \n          gap: '4px', \n          justifyContent: 'center',\n          fontSize: '1.6em',  // Increased font size\n          padding: '15px',\n          backgroundColor: 'rgba(0, 0, 0, 0.7)',\n          borderRadius: '8px'\n        }}>\n          <span>\n            {`${players.find(p => p.socketId === payerSocketId)?.name} paid rent to ${players.find(p => p.socketId === ownerSocketId)?.name} for ${propertyName} - $${baseRent.toLocaleString()}`}\n          </span>\n          {multiplier > 1 && (\n            <span style={{ \n              color: '#FFA500', \n              fontSize: '1.5em',  // Increased multiplier size\n              fontWeight: 'bold',\n              marginLeft: '8px'\n            }}>\n              {`X${multiplier}`}\n            </span>\n          )}\n        </div>\n      );\n      setTimeout(() => setError(null), 5000);\n    });\n\n    // Add rent bonus handler\n    socket.on('rentBonus', ({ playerSocketId, newMoney, amount, propertyName }) => {\n      console.log('[GameScreen] rentBonus', { playerSocketId, amount });\n      \n      // Update player's money\n      const updated = players.map(p =>\n        p.socketId === playerSocketId ? { ...p, money: newMoney } : p\n      );\n      setPlayers(updated);\n\n      // Update current player if they got the bonus\n      if (player.socketId === playerSocketId) {\n        setPlayer({ ...player, money: newMoney });\n        setError(`You received $${amount} bonus for landing on your property ${propertyName}!`);\n        // Clear bonus message after 5 seconds\n        setTimeout(() => setError(null), 5000);\n      }\n    });\n\n    // Add casino result handler for other players\n    socket.on('casinoResult', ({ playerId, dice, amount, won, playerName, playerMoney }) => {\n      console.log('[GameScreen] casinoResult', { playerId, dice, amount, won, playerName, playerMoney });\n      \n      // Update player money in the game state\n      const updated = players.map(p =>\n        p.socketId === playerId ? { ...p, money: playerMoney } : p\n      );\n      setPlayers(updated);\n      \n      if (player.socketId === playerId) {\n        setPlayer(prev => ({ ...prev, money: playerMoney }));\n      } else {\n        setError(`${playerName} ${won ? 'won' : 'lost'} $${amount} at the casino!`);\n        setTimeout(() => setError(null), 5000);\n      }\n    });\n\n    // Add roadCash handler\n    socket.on('roadCashResult', ({ playerSocketId, newMoney, amount }) => {\n      console.log('[GameScreen] roadCashResult', { playerSocketId, newMoney, amount });\n      \n      // Update player's money\n      const updated = players.map(p =>\n        p.socketId === playerSocketId ? { ...p, money: newMoney } : p\n      );\n      setPlayers(updated);\n\n      // Update current player if they got the money\n      if (player.socketId === playerSocketId) {\n        setPlayer({ ...player, money: newMoney });\n        setError(`You received $${amount} from the road!`);\n        // Clear message after 5 seconds\n        setTimeout(() => setError(null), 5000);\n      }\n    });\n\n    // Add RPS event listeners\n    socket.on('stonePaperScissorsStart', (game) => {\n      console.log('[RPS] Game started:', game);\n      setRpsGame(game);\n      setRpsChoice(null);\n      setRpsResult(null);\n      setRpsTieAmount(null);\n    });\n\n    socket.on('stonePaperScissorsResult', (result) => {\n      console.log('[RPS] Result received:', result);\n      setRpsResult(result);\n      \n      // Update players' money in the game state\n      const updatedPlayers = players.map(p => {\n        if (p.socketId === result.landingPlayer.socketId) {\n          return { \n            ...p, \n            money: result.landingPlayer.money < 0 ? 0 : result.landingPlayer.money,\n            loan: result.landingPlayer.money < 0 ? \n              (result.landingPlayer.loan || 0) + Math.abs(result.landingPlayer.money) : \n              (result.landingPlayer.loan || 0)\n          };\n        }\n        // Update winners' money and loans\n        const winner = result.winners.find(w => w.socketId === p.socketId);\n        if (winner) {\n          return { \n            ...p, \n            money: winner.money < 0 ? 0 : winner.money,\n            loan: winner.money < 0 ? \n              (winner.loan || 0) + Math.abs(winner.money) : \n              (winner.loan || 0)\n          };\n        }\n        // Update losers' money and loans\n        const loser = result.losers.find(l => l.socketId === p.socketId);\n        if (loser) {\n          return { \n            ...p, \n            money: loser.money < 0 ? 0 : loser.money,\n            loan: loser.money < 0 ? \n              (loser.loan || 0) + Math.abs(loser.money) : \n              (loser.loan || 0)\n          };\n        }\n        return p;\n      });\n      setPlayers(updatedPlayers);\n\n      // Update current player's money and loan if they were involved\n      if (player.socketId === result.landingPlayer.socketId) {\n        setPlayer(prev => ({ \n          ...prev, \n          money: result.landingPlayer.money < 0 ? 0 : result.landingPlayer.money,\n          loan: result.landingPlayer.money < 0 ? \n            (result.landingPlayer.loan || 0) + Math.abs(result.landingPlayer.money) : \n            (result.landingPlayer.loan || 0)\n        }));\n      } else {\n        const winner = result.winners.find(w => w.socketId === player.socketId);\n        if (winner) {\n          setPlayer(prev => ({ \n            ...prev, \n            money: winner.money < 0 ? 0 : winner.money,\n            loan: winner.money < 0 ? \n              (winner.loan || 0) + Math.abs(winner.money) : \n              (winner.loan || 0)\n          }));\n        }\n        const loser = result.losers.find(l => l.socketId === player.socketId);\n        if (loser) {\n          setPlayer(prev => ({ \n            ...prev, \n            money: loser.money < 0 ? 0 : loser.money,\n            loan: loser.money < 0 ? \n              (loser.loan || 0) + Math.abs(loser.money) : \n              (loser.loan || 0)\n          }));\n        }\n      }\n\n      // Add RPS result to game events with loan information\n      result.winners.forEach(winner => {\n        result.losers.forEach(loser => {\n          const message = `${winner.name} won against ${loser.name} in RPS (${winner.choice} vs ${loser.choice}). ${winner.name} now has $${winner.money.toLocaleString()}${winner.loan ? ` and $${winner.loan.toLocaleString()} loan` : ''} and ${loser.name} has $${loser.money.toLocaleString()}${loser.loan ? ` and $${loser.loan.toLocaleString()} loan` : ''}. ${winner.name} drew $${winner.drawnAmount.toLocaleString()} from ${loser.name}.`;\n          setGameEvents(prev => [...prev, { message }]);\n        });\n      });\n\n      // Clear game state after a delay to show the result\n      setTimeout(() => {\n        setRpsGame(null);\n        setRpsResult(null);\n        setRpsChoice(null);\n      }, 3000);\n    });\n\n    socket.on('stonePaperScissorsTie', ({ landingPlayerId, tiedPlayerId, tiedPlayerName, maxAmount, gameId }) => {\n      console.log('[RPS] Tie resolution:', { landingPlayerId, tiedPlayerId, tiedPlayerName, maxAmount, gameId });\n      if (player?.socketId === landingPlayerId) {\n        setRpsTieAmount({ maxAmount, gameId, tiedPlayerId, tiedPlayerName });\n      }\n    });\n\n    socket.on('stonePaperScissorsTieResolved', (result) => {\n      console.log('[RPS] Tie resolved:', result);\n\n      // Update players' money in the game state\n      const updatedPlayers = players.map(p => {\n        if (p.socketId === result.landingPlayer.socketId) {\n          return { ...p, money: result.landingPlayer.money };\n        }\n        if (p.socketId === result.tiedPlayer.socketId) {\n          return { ...p, money: result.tiedPlayer.money };\n        }\n        return p;\n      });\n      setPlayers(updatedPlayers);\n\n      // Update current player's money if they were involved\n      if (player?.socketId === result.landingPlayer.socketId) {\n        setPlayer(prev => ({ ...prev, money: result.landingPlayer.money }));\n      } else if (player?.socketId === result.tiedPlayer.socketId) {\n        setPlayer(prev => ({ ...prev, money: result.tiedPlayer.money }));\n      }\n\n      // Add tie resolution to game events\n      const message = `${result.landingPlayer.name} and ${result.tiedPlayer.name} tied in RPS. ${result.landingPlayer.name} drew $${result.drawnAmount.toLocaleString()} from ${result.tiedPlayer.name}. ${result.landingPlayer.name} now has $${result.landingPlayer.money.toLocaleString()} and ${result.tiedPlayer.name} has $${result.tiedPlayer.money.toLocaleString()}.`;\n      setGameEvents(prev => [...prev, { message }]);\n\n      // If there are remaining ties, keep the game state\n      if (result.remainingTies > 0) {\n        setRpsTieAmount(null);\n      } else {\n        // Clear all RPS state if no more ties to resolve\n      setRpsGame(null);\n      setRpsResult(null);\n      setRpsChoice(null);\n        setRpsTieAmount(null);\n      }\n    });\n\n    return () => {\n      socket.off('purchaseSuccess');\n      socket.off('purchaseFailed');\n      socket.off('rentPaid');\n      socket.off('playerMoved');\n      socket.off('rentBonus');\n      socket.off('startBonus');\n      socket.off('casinoResult');\n      socket.off('roadCashResult');\n      socket.off('stonePaperScissorsStart');\n      socket.off('stonePaperScissorsResult');\n      socket.off('stonePaperScissorsTie');\n      socket.off('stonePaperScissorsTieResolved');\n    };\n  }, [socket, player, players, setPlayer, setPlayers]);\n\n  // Update inCasino state when tile changes\n  useEffect(() => {\n    const isCasinoTile = tileMeta?.id === 16;\n    setInCasino(isCasinoTile);\n    if (isCasinoTile) {\n      setHasCasinoPlayed(false);\n    }\n  }, [tileMeta]);\n\n  // Reset casino states when turn ends\n  useEffect(() => {\n    if (!isMyTurn) {\n      setInCasino(false);\n      setHasCasinoPlayed(false);\n    }\n  }, [isMyTurn]);\n\n  const handleBuy = () => {\n    console.log('[GameScreen] handleBuy invoked');\n    setError(null);\n    socket.emit('buyProperty');\n  };\n\n  return (\n    <div style={{\n      position: 'relative'\n    }}>\n      {/* Side Panel Buttons */}\n      {Object.entries(panelConfigs).map(([panelId, config], index) => (\n        <div \n          key={panelId}\n          onClick={() => setActiveSidePanel(activeSidePanel === panelId ? null : panelId)}\n          style={{\n            position: 'fixed',\n            right: activeSidePanel === panelId ? '540px' : '0',\n            top: `${25 + (index * 130)}px`,\n            width: activeSidePanel === panelId ? '60px' : '120px',\n            height: '120px',\n            backgroundColor: config.color,\n            display: activeSidePanel && activeSidePanel !== panelId ? 'none' : 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            cursor: 'pointer',\n            clipPath: activeSidePanel === panelId\n              ? 'polygon(0 0, 100% 0, 100% 100%, 0 100%)'\n              : 'polygon(20% 0, 100% 0, 100% 100%, 20% 100%, 0 70%, 0 30%)',\n            transition: 'all 0.3s ease',\n            zIndex: 1001\n          }}\n        >\n          <div style={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            color: 'white',\n            fontSize: '1.2em',\n            transform: activeSidePanel === panelId ? 'rotate(180deg)' : 'none',\n            transition: 'transform 0.3s ease',\n            width: '100%',\n            padding: '0 10px',\n            textAlign: 'center'\n          }}>\n            {activeSidePanel === panelId ? '←' : config.title}\n          </div>\n        </div>\n      ))}\n\n      {/* Side Panels */}\n      {Object.entries(panelConfigs).map(([panelId, config]) => (\n        <div\n          key={panelId}\n          style={{\n            position: 'fixed',\n            right: activeSidePanel === panelId ? '0' : '-550px',\n            top: '0',\n            width: '500px',\n            height: '100vh',\n            backgroundColor: `${config.color}dd`,\n            boxShadow: '-2px 0 5px rgba(0, 0, 0, 0.48)',\n            transition: 'right 0.3s ease',\n        zIndex: 1000,\n            padding: '20px',\n            color: 'white',\n            overflowY: 'auto',\n            fontSize: '1.5em',\n            alignItems: 'center',\n            justifyContent: 'center',\n            textAlign: 'center',\n            marginLeft: '10px'\n          }}\n        >\n          <h2 style={{ marginBottom: '20px' }}>{config.title}</h2>\n          {/* Panel specific content */}\n          {panelId === 'info' && (\n            <div style={{\n              height: 'calc(100vh - 250px)',\n              overflowY: 'auto',\n              padding: '15px',\n              display: 'flex',\n              flexDirection: 'column-reverse',\n              backgroundColor: 'rgba(0, 0, 0, 0.4)',\n        borderRadius: '8px',\n              gap: '15px'\n            }}>\n              {gameEvents.map((event, index) => {\n                // Process the message to color-code money amounts\n                const message = event.message.replace(\n                  /\\$(\\d+,?\\d*)/g,\n                  (match, amount) => {\n                    // Determine if this is a gain or loss\n                    const isGain = event.message.includes('received') || \n                                 event.message.includes('won') ||\n                                 event.message.includes('bonus');\n                    const isLoss = event.message.includes('paid') || \n                                 event.message.includes('lost');\n                    \n                    return `<span style=\"color: ${isGain ? '#4CAF50' : isLoss ? '#f44336' : 'white'}\">${match}</span>`;\n                  }\n                );\n\n                return (\n                  <div\n                    key={index}\n                    style={{\n                      backgroundColor: 'rgba(0, 0, 0, 0.6)',\n                      padding: '12px 15px',\n                      borderRadius: '8px',\n                      fontSize: '1.2em',\n                      lineHeight: '1.4'\n                    }}\n                    dangerouslySetInnerHTML={{ __html: message }}\n                  />\n                );\n              })}\n            </div>\n          )}\n          {panelId === 'bank' && (\n            <div>\n              {/* Borrow Section */}\n              <div style={{\n                backgroundColor: 'rgba(0, 0, 0, 0.33)',\n                padding: '20px',\n                borderRadius: '8px',\n                marginTop: '70px'\n              }}>\n                <h4 style={{ marginBottom: '15px' , fontSize: '1em', }}>Borrow Money</h4>\n                <div style={{\n                  display: 'flex',\n                  alignItems: 'center',\n                  gap: '10px',\n                  fontSize: '1em',\n                  marginBottom: '20px',\n                  justifyContent: 'center',\n                  alignItems: 'center'\n      }}>\n        <button\n                    onClick={() => setBorrowAmount(Math.max(500, borrowAmount - 500))}\n          style={{\n            padding: '8px 12px',\n                      fontSize: '1.7em',\n                      cursor: 'pointer',\n                      backgroundColor: 'rgba(255, 255, 255, 0.2)',\n            border: 'none',\n                      color: 'white',\n            borderRadius: '4px',\n          }}\n        >\n                    -\n        </button>\n                  <div style={{\n                    padding: '8px 16px',\n                    backgroundColor: 'rgba(255, 255, 255, 0.15)',\n                    borderRadius: '4px',\n                    minWidth: '100px',\n                    textAlign: 'center',\n                    fontSize: '1.7em'\n                  }}>\n                    ${borrowAmount}\n                  </div>\n        <button\n                    onClick={() => setBorrowAmount(Math.min(100000, borrowAmount + 500))}\n      style={{\n            padding: '8px 12px',\n                      fontSize: '1.7em',\n                      cursor: 'pointer',\n                      backgroundColor: 'rgba(255, 255, 255, 0.2)',\n                      border: 'none',\n            color: 'white',\n                      borderRadius: '4px'\n                    }}\n                  >\n                    +\n                  </button>\n                </div>\n                <button\n                  onClick={() => {\n                    if (socket) {\n                      socket.emit('borrowMoney', { amount: borrowAmount });\n                      setBorrowAmount(500); // Reset to default\n                    }\n                  }}\n                  style={{\n                    width: '100%',\n                    padding: '12px',\n                    backgroundColor: 'rgba(255, 255, 255, 0.3)',\n            border: 'none',\n                    color: 'white',\n            borderRadius: '4px',\n                    cursor: 'pointer',\n                    fontSize: '1.1em',\n                    transition: 'background-color 0.2s'\n                  }}\n                >\n                  Borrow\n                </button>\n              </div>\n\n              {/* Pay Off Section */}\n              <div style={{\n                backgroundColor: 'rgba(0, 0, 0, 0.33)',\n                padding: '20px',\n                borderRadius: '8px',\n                marginTop: '20px',\n                \n              }}>\n                <h4 style={{ marginBottom: '15px' }}>Pay Off Loan</h4>\n                <div style={{\n            display: 'flex',\n                  gap: '10px',\n                  marginBottom: '20px',\n            alignItems: 'center',\n                  justifyContent: 'center',\n                  fontSize: '1em'\n                }}>\n                  <button\n                    onClick={() => setPayoffAmount(Math.max(500, payoffAmount - 500))}\n                    disabled={!player?.loan}\n                    style={{\n                      padding: '8px 12px',\n                      fontSize: '1.2em',\n                      cursor: player?.loan ? 'pointer' : 'not-allowed',\n                      backgroundColor: player?.loan ? 'rgba(255, 255, 255, 0.2)' : 'rgba(255, 255, 255, 0.1)',\n                      border: 'none',\n                      color: 'white',\n                      borderRadius: '4px',\n                      fontSize: '1.7em'\n          }}\n        >\n          -\n        </button>\n        <div style={{\n                    padding: '8px 16px',\n                    backgroundColor: 'rgba(255, 255, 255, 0.15)',\n                    borderRadius: '4px',\n                    minWidth: '100px',\n                    textAlign: 'center',\n                    fontSize: '1.7em'\n                  }}>\n                    ${Math.min(payoffAmount, player?.loan || 0)}\n                  </div>\n                  <button\n                    onClick={() => setPayoffAmount(Math.min(player?.loan || 0, payoffAmount + 500))}\n                    disabled={!player?.loan}\n                    style={{\n          padding: '8px 12px',\n                      fontSize: '1.7em',\n                      cursor: player?.loan ? 'pointer' : 'not-allowed',\n                      backgroundColor: player?.loan ? 'rgba(255, 255, 255, 0.2)' : 'rgba(255, 255, 255, 0.1)',\n                      border: 'none',\n                      color: 'white',\n                      borderRadius: '4px'\n                    }}\n                  >\n                    +\n                  </button>\n                </div>\n                <button\n                  onClick={() => {\n                    if (socket && player?.loan && player?.money >= payoffAmount) {\n                      socket.emit('payoffLoan', { amount: Math.min(payoffAmount, player.loan) });\n                      setPayoffAmount(1000); // Reset to default\n                    }\n                  }}\n                  disabled={!player?.loan || player?.money < payoffAmount}\n                  style={{\n                    width: '100%',\n                    padding: '12px',\n                    backgroundColor: player?.loan && player?.money >= payoffAmount \n                      ? 'rgba(255, 255, 255, 0.3)' \n                      : 'rgba(255, 255, 255, 0.1)',\n                    border: 'none',\n                    color: 'white',\n          borderRadius: '4px',\n                    cursor: player?.loan && player?.money >= payoffAmount ? 'pointer' : 'not-allowed',\n                    fontSize: '1.1em',\n                    transition: 'background-color 0.2s'\n                  }}\n                >\n                  Pay Off\n                </button>\n                {player?.money < payoffAmount && (\n                  <div style={{\n                    color: '#ff6b6b',\n                    marginTop: '10px',\n          textAlign: 'center',\n                    fontSize: '0.9em'\n        }}>\n                    Insufficient funds\n        </div>\n                )}\n      </div>\n\n              {/* Status Section */}\n              <div style={{\n                marginTop: '20px',\n                padding: '20px',\n                backgroundColor: 'rgba(0, 0, 0, 0.33)',\n                borderRadius: '8px',\n              }}>\n                <h4>Current Status</h4>\n                <div style={{ \n                  marginTop: '10px',\n                  fontSize: '1.2em'\n                }}>\n                  <div style={{ marginBottom: '5px' }}>Money: ${player?.money || 0}</div>\n                  <div> Loan: ${player?.loan || 0}</div>\n                </div>\n              </div>\n              {error && (\n                <div style={{\n                  color: '#ff6b6b',\n                  marginTop: '10px',\n                  textAlign: 'center'\n                }}>\n                  {error}\n                </div>\n              )}\n            </div>\n          )}\n          {panelId === 'chat' && (\n            <div style={{\n              height: '100%',\n              padding: '20px'\n            }}>\n              <Chat />\n            </div>\n          )}\n          {panelId === 'trade' && (\n            <TradePanel />\n          )}\n        </div>\n      ))}\n\n      {/* Main content */}\n      <div style={{\n        display: 'flex',\n        flexDirection: 'column',\n        minHeight: '100vh',\n        minWidth: '1200px',\n        position: 'relative',\n        backgroundImage: `url(${bgImage})`,\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n        backgroundRepeat: 'no-repeat',\n        overflow: 'auto'\n      }}>\n        {/* RPS Tie Resolver - Positioned absolutely over the board */}\n        {rpsTieAmount && (\n          <RPSTieResolver\n            maxAmount={rpsTieAmount.maxAmount}\n            gameId={rpsTieAmount.gameId}\n            tiedPlayerId={rpsTieAmount.tiedPlayerId}\n            tiedPlayerName={rpsTieAmount.tiedPlayerName}\n            socket={socket}\n            onResolved={() => {\n              setRpsTieAmount(null);\n            }}\n          />\n        )}\n        {/* Main content (board & player stats) */}\n        <div style={{\n          flex: 1,\n          display: 'flex',\n          flexDirection: 'row',\n          alignItems: 'center',\n          justifyContent: 'center',\n          position: 'relative',\n          minWidth: '1080px',\n          padding: '20px',\n          marginTop: '220px',\n          marginBottom: '20px'\n        }}>\n          {/* Board with centered positioning */}\n          <div style={{ \n            position: 'relative',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n          width: '100%',\n            height: '100%',\n            minHeight: '600px' // Ensure minimum height for the board container\n          }}>\n            <div style={{ \n              position: 'relative',\n              margin: '200px' // Add margin around the board to make space for player stats\n            }}>\n              <Board />\n              <PlayerStats />\n            </div>\n          </div>\n        </div>\n\n        {/* Bottom sections (not fixed anymore) */}\n        <div style={{\n          width: '60%',\n          minWidth: '800px',\n          height: '240px',\n          minHeight: '400px',\n          background: 'rgba(80, 80, 80, 0.9)',\n          borderTop: '2px solid #bbb',\n          boxShadow: '0 -2px 10px rgba(0, 0, 0, 0.2)',\n          zIndex: 100,\n          display: 'flex',\n          border: '2px solid #666',\n          borderRadius: '30px 30px 0 0',\n          margin: '80px auto 0 auto'\n        }}>\n          {/* Dice Roller Section */}\n          <div style={{\n            flex: 1,\n            position: 'relative',\n            borderRight: '2px solid #666',\n            padding: '10px',\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            justifyContent: 'center',\n            background: 'rgba(60, 60, 60, 0.3)',\n            borderRadius: '30px 30px 30px 30px',\n            overflow: 'hidden'\n          }}>\n          {isMyTurn && (\n              <>\n            <img\n              src={Dicebox}\n              alt=\"Dice Board\"\n              style={{\n                position: 'absolute',\n                top: 0,\n                left: 0,\n                width: '100%',\n                height: '100%',\n                objectFit: 'fill',\n                    objectPosition: 'center',\n                pointerEvents: 'none'\n              }}\n            />\n                {testRollMode && (\n                  <div style={{\n                    position: 'absolute',\n                    top: '50%',\n                    left: '50%',\n                    transform: 'translate(-50%, -50%)',\n                    backgroundColor: 'rgba(0, 0, 0, 0.8)',\n                    color: '#fff',\n                    padding: '8px 16px',\n                    borderRadius: '4px',\n                    zIndex: 100\n                  }}>\n                    {testRollInput}\n                  </div>\n                )}\n              </>\n            )}\n            <DiceRoller \n              testRollMode={testRollMode} \n              hasCasinoPlayed={hasCasinoPlayed}\n              style={{ position: 'relative', zIndex: 1 }}\n            />\n          </div>\n\n          {/* Dashboard Section */}\n          <div style={{\n            flex: 1,\n            borderRight: '2px solid #666',\n            padding: '10px',\n            display: 'flex',\n            flexDirection: 'column',\n            background: 'rgba(60, 60, 60, 0.3)'\n          }}>\n            <Dashboard />\n        </div>\n\n          {/* Events Section */}\n          <div style={{\n            flex: 1,\n            padding: '10px',\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            justifyContent: 'center',\n            background: 'rgba(60, 60, 60, 0.3)',\n            borderRadius: '0 10px 0 0'\n          }}>\n          {(() => {\n              // Show RPS game if active\n              if (rpsGame) {\n                return (\n                  <div style={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'center',\n                    gap: '15px'\n                  }}>\n                    {rpsResult ? (\n                      // Show result for multiple players\n                      <div style={{\n                        textAlign: 'center',\n                        color: '#fff',\n                        fontSize: '1.4em'\n                      }}>\n                        <div>\n                          {rpsResult.landingPlayer.name}'s choice: {rpsResult.landingPlayer.choice}\n                        </div>\n                        {rpsResult.winners.map(winner => (\n                          <div key={winner.socketId} style={{ color: '#f44336' }}>\n                            Lost against {winner.name} ({winner.choice})\n                          </div>\n                        ))}\n                        {rpsResult.losers.map(loser => (\n                          <div key={loser.socketId} style={{ color: '#4CAF50' }}>\n                            Won against {loser.name} ({loser.choice})\n                          </div>\n                        ))}\n                      </div>\n                    ) : rpsTieAmount ? (\n                      <RPSTieResolver\n                        maxAmount={rpsTieAmount.maxAmount}\n                        gameId={rpsTieAmount.gameId}\n                        tiedPlayerId={rpsTieAmount.tiedPlayerId}\n                        tiedPlayerName={rpsTieAmount.tiedPlayerName}\n                        socket={socket}\n                        onResolved={() => {\n                          setRpsTieAmount(null);\n                          setRpsGame(null);\n                        }}\n                      />\n                    ) : (\n                      // Show RPS buttons for all involved players\n                      <div style={{\n                        display: 'flex',\n                        flexDirection: 'column',\n                        alignItems: 'center',\n                        gap: '15px'\n                      }}>\n                        {((player?.socketId === rpsGame.landingPlayer.socketId) ||\n                          rpsGame.closestPlayers.some(p => p.socketId === player?.socketId)) && !rpsChoice && (\n                          <>\n                            <div style={{ color: '#fff', fontSize: '1.2em', textAlign: 'center' }}>\n                              {player?.socketId === rpsGame.landingPlayer.socketId ? (\n                                <>\n                                  Playing against {rpsGame.closestPlayers.map(p => p.name).join(', ')}\n                                  <br />Choose your move:\n                                </>\n                              ) : (\n                                <>\n                                  Playing against {rpsGame.landingPlayer.name}\n                                  <br />Choose your move:\n                                </>\n                              )}\n                            </div>\n                            <div style={{\n                              display: 'flex',\n                              gap: '10px'\n                            }}>\n                              {['rock', 'paper', 'scissors'].map(choice => (\n                                <button\n                                  key={choice}\n                                  onClick={() => {\n                                    setRpsChoice(choice);\n                                    socket.emit('stonePaperScissorsChoice', {\n                                      choice,\n                                      gameId: rpsGame.gameId\n                                    });\n                                  }}\n                                  style={{\n                                    padding: '12px 24px',\n                                    fontSize: '1.1em',\n                                    backgroundColor: '#2196F3',\n                                    color: 'white',\n                                    border: 'none',\n                                    borderRadius: '4px',\n                                    cursor: 'pointer',\n                                    textTransform: 'capitalize'\n                                  }}\n                                >\n                                  {choice}\n                                </button>\n                              ))}\n                            </div>\n                          </>\n                        )}\n                        {rpsChoice && (\n                          <div style={{ color: '#fff', fontSize: '1.2em' }}>\n                            You chose: {rpsChoice}\n                          </div>\n                        )}\n                      </div>\n                    )}\n                  </div>\n                );\n              }\n\n              // Show \"Your Turn\" for current player before landing\n              if (isMyTurn && !movementDone) {\n                return (\n                  <div style={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    height: '100%',\n                    color: '#fff',\n                    fontSize: '1.6em',\n                    fontWeight: 'bold',\n                    textShadow: '2px 2px 4px rgba(0,0,0,0.5)'\n                  }}>\n                    Your Turn\n                  </div>\n                );\n              }\n\n              // Buy Property\n              if (isMyTurn && tileMeta?.type === 'property' && \n                  !players.some(p => p.properties.includes(tileMeta?.id))) {\n                return (\n                  <div style={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'center',\n                    gap: '10px'\n                  }}>\n                <button\n                  onClick={handleBuy}\n                  disabled={player.money < tileMeta.cost || (player.loan || 0) > 10000}\n                      style={{\n                    padding: '15px 30px',  // Increased padding\n                    fontSize: '1.4em',     // Increased font size\n                    backgroundColor: player.money >= tileMeta.cost && (player.loan || 0) <= 10000 ? '#4CAF50' : '#ccc',\n                    color: player.money >= tileMeta.cost && (player.loan || 0) <= 10000 ? 'white' : '#ff0000',\n                        border: 'none',\n                    borderRadius: '12px',  // Increased border radius\n                    cursor: player.money >= tileMeta.cost && (player.loan || 0) <= 10000 ? 'pointer' : 'not-allowed',\n                    fontWeight: 'bold',\n                    boxShadow: '0 4px 8px rgba(0,0,0,0.2)',  // Added shadow\n                    transition: 'transform 0.2s',\n                    ':hover': {\n                      transform: 'scale(1.05)'\n                    }\n                      }}\n                >\n                  Buy (${tileMeta.cost})\n                </button>\n                {error && (\n                      <p style={{ color: 'tomato', margin: 0 }}>{error}</p>\n                )}\n                {(player.loan || 0) > 10000 && (\n                  <p style={{ color: 'tomato', margin: 0 }}>Cannot buy property when loan exceeds $10,000</p>\n                )}\n        </div>\n                );\n              }\n\n              // Road Cash Game\n              if (isMyTurn && tileMeta?.id === 22) {\n                return <RoadCash isMyTurn={isMyTurn} socket={socket} />;\n              }\n\n              // Casino\n              if (inCasino && isMyTurn) {\n                return (\n                  <CasinoBetting \n                    isMyTurn={isMyTurn} \n                    currentMoney={player?.money || 0}\n                    socket={socket}\n                    player={player}\n                    onCasinoPlayed={() => setHasCasinoPlayed(true)}\n                  />\n                );\n              }\n\n              // Corner Choice\n              if (isMyTurn && tileMeta?.name?.toLowerCase().includes('choose corner')) {\n                return (\n                  <div style={{\n                    display: 'grid',\n                    gridTemplateColumns: '1fr 1fr',\n                    gridTemplateRows: '1fr 1fr',\n                    gap: '20px',\n                    width: '100%',\n                    maxWidth: '600px',\n                    padding: '20px',\n                    margin: '0 auto'\n                  }}>\n                    <button\n                      onClick={() => {\n                        socket.emit('teleport', { toTile: 1, prevTile: 30 });\n                        setError(null);\n                        setHasChosenCorner(true);\n                      }}\n                      style={{\n                        margin: 0,\n                        padding: 0,\n                        border: '3px solid #666',\n                        borderRadius: '12px',\n                        backgroundImage: `url(${startIcon})`,\n                        backgroundSize: '80%',\n                        backgroundRepeat: 'no-repeat',\n                        backgroundPosition: 'center 40%',\n                        cursor: 'pointer',\n                        display: 'flex',\n                        alignItems: 'flex-end',\n                        justifyContent: 'center',\n                        width: '100%',\n                        height: '100%',\n                        minHeight: '180px',\n                        position: 'relative',\n                        backgroundColor: 'rgba(255, 255, 255, 0.15)',\n                        transition: 'transform 0.2s, background-color 0.2s',\n                        ':hover': {\n                          transform: 'scale(1.02)',\n                          backgroundColor: 'rgba(255, 255, 255, 0.2)'\n                        }\n                      }}\n                    >\n                      <span style={{\n                        padding: '8px 16px',\n                        backgroundColor: 'rgba(0,0,0,0.6)',\n                        borderRadius: '0 0 9px 9px',\n                        color: '#fff',\n                        fontWeight: 'bold',\n                        fontSize: '1.4em',\n                        textShadow: '2px 2px 4px rgba(0,0,0,0.7)',\n                        position: 'absolute',\n                        bottom: 0,\n                        width: '100%',\n                        textAlign: 'center'\n                      }}>Start</span>\n                    </button>\n                    <button\n                      onClick={() => {\n                        socket.emit('teleport', { toTile: 22, prevTile: 21 });\n                        setError(null);\n                        setHasChosenCorner(true);\n                      }}\n                      style={{\n                        margin: 0,\n                        padding: 0,\n                        border: '3px solid #666',\n                        borderRadius: '12px',\n                        backgroundImage: `url(${roadIcon})`,\n                        backgroundSize: '80%',\n                        backgroundRepeat: 'no-repeat',\n                        backgroundPosition: 'center 40%',\n                        cursor: 'pointer',\n                        display: 'flex',\n                        alignItems: 'flex-end',\n                        justifyContent: 'center',\n                        width: '100%',\n                        height: '100%',\n                        minHeight: '180px',\n                        position: 'relative',\n                        backgroundColor: 'rgba(255, 255, 255, 0.15)',\n                        transition: 'transform 0.2s, background-color 0.2s',\n                        ':hover': {\n                          transform: 'scale(1.02)',\n                          backgroundColor: 'rgba(255, 255, 255, 0.2)'\n                        }\n                      }}\n                    >\n                      <span style={{\n                        padding: '8px 16px',\n                        backgroundColor: 'rgba(0,0,0,0.6)',\n                        borderRadius: '0 0 9px 9px',\n                        color: '#fff',\n                        fontWeight: 'bold',\n                        fontSize: '1.4em',\n                        textShadow: '2px 2px 4px rgba(0,0,0,0.7)',\n                        position: 'absolute',\n                        bottom: 0,\n                        width: '100%',\n                        textAlign: 'center'\n                      }}>Road</span>\n                    </button>\n                    <button\n                      onClick={() => {\n                        socket.emit('teleport', { toTile: 7, prevTile: 6 });\n                        setError(null);\n                        setHasChosenCorner(true);\n                      }}\n        style={{\n                        margin: 0,\n                        padding: 0,\n                        border: '3px solid #666',\n                        borderRadius: '12px',\n                        backgroundImage: `url(${hotelIcon})`,\n                        backgroundSize: '80%',\n                        backgroundRepeat: 'no-repeat',\n                        backgroundPosition: 'center 40%',\n                        cursor: 'pointer',\n            display: 'flex',\n                        alignItems: 'flex-end',\n            justifyContent: 'center',\n                        width: '100%',\n                        height: '100%',\n                        minHeight: '180px',\n                        position: 'relative',\n                        backgroundColor: 'rgba(255, 255, 255, 0.15)',\n                        transition: 'transform 0.2s, background-color 0.2s',\n                        ':hover': {\n                          transform: 'scale(1.02)',\n                          backgroundColor: 'rgba(255, 255, 255, 0.2)'\n                        }\n                      }}\n                    >\n                      <span style={{\n                        padding: '8px 16px',\n                        backgroundColor: 'rgba(0,0,0,0.6)',\n                        borderRadius: '0 0 9px 9px',\n                        color: '#fff',\n                        fontWeight: 'bold',\n                        fontSize: '1.4em',\n                        textShadow: '2px 2px 4px rgba(0,0,0,0.7)',\n                        position: 'absolute',\n                        bottom: 0,\n                        width: '100%',\n                        textAlign: 'center'\n                      }}>Hotel</span>\n                    </button>\n                    <button\n                      onClick={() => {\n                        socket.emit('teleport', { toTile: 16, prevTile: 15 });\n                        setError(null);\n                        setHasChosenCorner(true);\n                      }}\n          style={{\n                        margin: 0,\n                        padding: 0,\n                        border: '3px solid #666',\n                        borderRadius: '12px',\n                        backgroundImage: `url(${casinoIcon})`,\n                        backgroundSize: '80%',\n                        backgroundRepeat: 'no-repeat',\n                        backgroundPosition: 'center 40%',\n                        cursor: 'pointer',\n            display: 'flex',\n                        alignItems: 'flex-end',\n                        justifyContent: 'center',\n                        width: '100%',\n                        height: '100%',\n                        minHeight: '180px',\n                        position: 'relative',\n                        backgroundColor: 'rgba(255, 255, 255, 0.15)',\n                        transition: 'transform 0.2s, background-color 0.2s',\n                        ':hover': {\n                          transform: 'scale(1.02)',\n                          backgroundColor: 'rgba(255, 255, 255, 0.2)'\n                        }\n                      }}\n                    >\n                      <span style={{\n                        padding: '8px 16px',\n                        backgroundColor: 'rgba(0,0,0,0.6)',\n                        borderRadius: '0 0 9px 9px',\n                        color: '#fff',\n                        fontWeight: 'bold',\n                        fontSize: '1.4em',\n                        textShadow: '2px 2px 4px rgba(0,0,0,0.7)',\n                        position: 'absolute',\n                        bottom: 0,\n                        width: '100%',\n                        textAlign: 'center'\n                      }}>Casino</span>\n                    </button>\n        </div>\n                );\n              }\n\n              // Show error message if any\n              if (error) {\n                return (\n                  <p style={{ color: 'tomato', margin: 0 }}>{error}</p>\n                );\n              }\n\n              // Show empty state for non-turn players or when no action is needed\n              return (\n                <div style={{\n                  display: 'flex',\n                  flexDirection: 'column',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  height: '100%',\n                  gap: '20px'\n                }}>\n                  {rpsGame && (\n                    <div style={{\n                      display: 'flex',\n                      flexDirection: 'column',\n                      alignItems: 'center',\n                      gap: '15px'\n                    }}>\n                      {rpsResult ? (\n                        // Show result for multiple players\n                        <div style={{\n                          textAlign: 'center',\n                          color: '#fff',\n                          fontSize: '1.4em'\n                        }}>\n                          <div>\n                            {rpsResult.landingPlayer.name}'s choice: {rpsResult.landingPlayer.choice}\n                          </div>\n                          {rpsResult.winners.map(winner => (\n                            <div key={winner.socketId} style={{ color: '#f44336' }}>\n                              Lost against {winner.name} ({winner.choice})\n                          </div>\n                          ))}\n                          {rpsResult.losers.map(loser => (\n                            <div key={loser.socketId} style={{ color: '#4CAF50' }}>\n                              Won against {loser.name} ({loser.choice})\n        </div>\n                          ))}\n      </div>\n                      ) : rpsTieAmount ? (\n                        <RPSTieResolver\n                          maxAmount={rpsTieAmount.maxAmount}\n                          gameId={rpsTieAmount.gameId}\n                          tiedPlayerId={rpsTieAmount.tiedPlayerId}\n                          tiedPlayerName={rpsTieAmount.tiedPlayerName}\n                          socket={socket}\n                          onResolved={() => {\n                            setRpsTieAmount(null);\n                            setRpsGame(null);\n                          }}\n                        />\n                      ) : (\n                        // Show RPS buttons for all involved players\n                        <div style={{\n                          display: 'flex',\n                          flexDirection: 'column',\n                          alignItems: 'center',\n                          gap: '15px'\n                        }}>\n                          {((player?.socketId === rpsGame.landingPlayer.socketId) ||\n                            rpsGame.closestPlayers.some(p => p.socketId === player?.socketId)) && !rpsChoice && (\n                            <>\n                              <div style={{ color: '#fff', fontSize: '1.2em', textAlign: 'center' }}>\n                                {player?.socketId === rpsGame.landingPlayer.socketId ? (\n                                  <>\n                                    Playing against {rpsGame.closestPlayers.map(p => p.name).join(', ')}\n                                    <br />Choose your move:\n                                  </>\n                                ) : (\n                                  <>\n                                    Playing against {rpsGame.landingPlayer.name}\n                                    <br />Choose your move:\n                                  </>\n                                )}\n                              </div>\n                              <div style={{\n                                display: 'flex',\n                                gap: '10px'\n                              }}>\n                                {['rock', 'paper', 'scissors'].map(choice => (\n                                  <button\n                                    key={choice}\n                                    onClick={() => {\n                                      setRpsChoice(choice);\n                                      socket.emit('stonePaperScissorsChoice', {\n                                        choice,\n                                        gameId: rpsGame.gameId\n                                      });\n                                    }}\n        style={{\n                                      padding: '12px 24px',\n                                      fontSize: '1.1em',\n                                      backgroundColor: '#2196F3',\n                                      color: 'white',\n                                      border: 'none',\n                                      borderRadius: '4px',\n                                      cursor: 'pointer',\n                                      textTransform: 'capitalize'\n                                    }}\n                                  >\n                                    {choice}\n                                  </button>\n                                ))}\n                              </div>\n                            </>\n                          )}\n                          {rpsChoice && (\n                            <div style={{ color: '#fff', fontSize: '1.2em' }}>\n                              You chose: {rpsChoice}\n                            </div>\n                          )}\n                        </div>\n                      )}\n                    </div>\n                  )}\n                </div>\n              );\n            })()}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}