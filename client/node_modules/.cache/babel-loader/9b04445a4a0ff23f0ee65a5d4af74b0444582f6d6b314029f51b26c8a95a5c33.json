{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\addhy\\\\Desktop\\\\Business_web\\\\client\\\\src\\\\context\\\\GameContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport socket from '../socket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GameContext = /*#__PURE__*/createContext();\nexport function GameProvider({\n  children\n}) {\n  _s();\n  const [player, setPlayer] = useState(null);\n  const [players, setPlayers] = useState([]);\n  const [currentPlayerId, setCurrentPlayerId] = useState(null);\n  const [sessionId, setSessionId] = useState(null);\n  const [gameState, setGameState] = useState('lobby');\n\n  // Utility: update \"player\" context when player list changes\n  const updateLocalPlayer = list => {\n    const me = list.find(p => p.socketId === socket.id);\n    setPlayer(me || null);\n  };\n  useEffect(() => {\n    socket.on('lobbyUpdate', newPlayers => {\n      setPlayers(newPlayers);\n      updateLocalPlayer(newPlayers);\n      console.log(\"[GameContext] Received lobbyUpdate:\", newPlayers);\n    });\n    socket.on('gameStart', payload => {\n      console.log('[GameContext] gameStart payload:', payload);\n      setPlayers(payload.players);\n      updateLocalPlayer(payload.players);\n      setSessionId(payload.sessionId);\n      setGameState('playing');\n      setCurrentPlayerId(payload.currentPlayerId);\n      console.log(\"[GameContext] gameStart - setCurrentPlayerId:\", payload.currentPlayerId);\n    });\n    socket.on('turnEnded', ({\n      nextPlayerId\n    }) => {\n      setCurrentPlayerId(nextPlayerId);\n      console.log(\"[GameContext] turnEnded - setCurrentPlayerId:\", nextPlayerId);\n    });\n    socket.on('playerMoved', ({\n      playerId,\n      tileId\n    }) => {\n      setPlayers(prev => prev.map(p => p.socketId === playerId ? {\n        ...p,\n        tileId\n      } : p));\n    });\n    return () => {\n      socket.off('lobbyUpdate');\n      socket.off('gameStart');\n      socket.off('turnEnded');\n      socket.off('playerMoved');\n    };\n  }, []);\n\n  // Debug: log context on every render\n  useEffect(() => {\n    console.log('[GameContext.js Render]', {\n      player,\n      currentPlayerId,\n      gameState,\n      players\n    });\n  }, [player, currentPlayerId, gameState, players]);\n  return /*#__PURE__*/_jsxDEV(GameContext.Provider, {\n    value: {\n      player,\n      setPlayer,\n      players,\n      setPlayers,\n      currentPlayerId,\n      setCurrentPlayerId,\n      sessionId,\n      setSessionId,\n      socket,\n      gameState,\n      setGameState\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(GameProvider, \"yrUUd88IFVBQdK8adq4H2aNSktU=\");\n_c = GameProvider;\nvar _c;\n$RefreshReg$(_c, \"GameProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","socket","jsxDEV","_jsxDEV","GameContext","GameProvider","children","_s","player","setPlayer","players","setPlayers","currentPlayerId","setCurrentPlayerId","sessionId","setSessionId","gameState","setGameState","updateLocalPlayer","list","me","find","p","socketId","id","on","newPlayers","console","log","payload","nextPlayerId","playerId","tileId","prev","map","off","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/addhy/Desktop/Business_web/client/src/context/GameContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nimport socket from '../socket';\r\n\r\nexport const GameContext = createContext();\r\n\r\nexport function GameProvider({ children }) {\r\n  const [player, setPlayer] = useState(null);\r\n  const [players, setPlayers] = useState([]);\r\n  const [currentPlayerId, setCurrentPlayerId] = useState(null);\r\n  const [sessionId, setSessionId] = useState(null);\r\n  const [gameState, setGameState] = useState('lobby');\r\n\r\n  // Utility: update \"player\" context when player list changes\r\n  const updateLocalPlayer = (list) => {\r\n    const me = list.find(p => p.socketId === socket.id);\r\n    setPlayer(me || null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket.on('lobbyUpdate', (newPlayers) => {\r\n      setPlayers(newPlayers);\r\n      updateLocalPlayer(newPlayers);\r\n      console.log(\"[GameContext] Received lobbyUpdate:\", newPlayers);\r\n    });\r\n\r\n    socket.on('gameStart', (payload) => {\r\n      console.log('[GameContext] gameStart payload:', payload);\r\n      setPlayers(payload.players);\r\n      updateLocalPlayer(payload.players);\r\n      setSessionId(payload.sessionId);\r\n      setGameState('playing');\r\n      setCurrentPlayerId(payload.currentPlayerId);\r\n      console.log(\"[GameContext] gameStart - setCurrentPlayerId:\", payload.currentPlayerId);\r\n    });\r\n\r\n    socket.on('turnEnded', ({ nextPlayerId }) => {\r\n      setCurrentPlayerId(nextPlayerId);\r\n      console.log(\"[GameContext] turnEnded - setCurrentPlayerId:\", nextPlayerId);\r\n    });\r\n\r\n    socket.on('playerMoved', ({ playerId, tileId }) => {\r\n      setPlayers((prev) =>\r\n        prev.map((p) =>\r\n          p.socketId === playerId ? { ...p, tileId } : p\r\n        )\r\n      );\r\n    });\r\n\r\n    return () => {\r\n      socket.off('lobbyUpdate');\r\n      socket.off('gameStart');\r\n      socket.off('turnEnded');\r\n      socket.off('playerMoved');\r\n    };\r\n  }, []);\r\n\r\n  // Debug: log context on every render\r\n  useEffect(() => {\r\n    console.log('[GameContext.js Render]', {\r\n      player,\r\n      currentPlayerId,\r\n      gameState,\r\n      players\r\n    });\r\n  }, [player, currentPlayerId, gameState, players]);\r\n\r\n  return (\r\n    <GameContext.Provider\r\n      value={{\r\n        player,\r\n        setPlayer,\r\n        players,\r\n        setPlayers,\r\n        currentPlayerId,\r\n        setCurrentPlayerId,\r\n        sessionId,\r\n        setSessionId,\r\n        socket,\r\n        gameState,\r\n        setGameState,\r\n      }}\r\n    >\r\n      {children}\r\n    </GameContext.Provider>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}