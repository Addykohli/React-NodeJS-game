{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\addhy\\\\Desktop\\\\Business_web\\\\client\\\\src\\\\components\\\\DiceRoller.js\",\n  _s = $RefreshSig$();\n// src/components/DiceRoller.js\nimport React, { useState, useEffect, useContext } from 'react';\nimport { GameContext } from '../context/GameContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DiceRoller() {\n  _s();\n  const {\n    player,\n    currentPlayerId,\n    socket\n  } = useContext(GameContext);\n\n  // local UI state\n  const [dice, setDice] = useState(null);\n  const [moving, setMoving] = useState(false);\n  const [done, setDone] = useState(false);\n  const [branchOptions, setBranchOptions] = useState(null);\n\n  // register all socket listeners up front\n  useEffect(() => {\n    const onDiceResult = ({\n      playerId,\n      die1,\n      die2\n    }) => {\n      if (playerId === (player === null || player === void 0 ? void 0 : player.socketId)) {\n        console.log(`[DiceRoller] diceResult = ${die1}+${die2}`);\n        setDice([die1, die2]);\n        setMoving(true);\n        setDone(false);\n      }\n    };\n    const onMovementDone = () => {\n      console.log('[DiceRoller] movementDone');\n      setMoving(false);\n      setDone(true);\n    };\n    const onBranchChoices = ({\n      options\n    }) => {\n      console.log('[DiceRoller] branchChoices =', options);\n      setBranchOptions(options);\n    };\n    socket.on('diceResult', onDiceResult);\n    socket.on('movementDone', onMovementDone);\n    socket.on('branchChoices', onBranchChoices);\n    return () => {\n      socket.off('diceResult', onDiceResult);\n      socket.off('movementDone', onMovementDone);\n      socket.off('branchChoices', onBranchChoices);\n    };\n  }, [player, socket]);\n\n  // only show for the active player\n  if (!player || player.socketId !== currentPlayerId) {\n    return null;\n  }\n  const handleRoll = () => {\n    console.log('[DiceRoller] emit rollDice');\n    socket.emit('rollDice');\n    setBranchOptions(null);\n  };\n  const handleDone = () => {\n    console.log('[DiceRoller] emit endTurn');\n    socket.emit('endTurn');\n    setDice(null);\n    setDone(false);\n  };\n  const chooseBranch = idx => {\n    console.log('[DiceRoller] emit branchChoice =', idx);\n    socket.emit('branchChoice', idx);\n    // clear options so buttons disappear\n    setBranchOptions(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'absolute',\n      top: '12%',\n      left: '50%',\n      transform: 'translateX(-50%)',\n      background: '#fff',\n      border: '2px solid #333',\n      borderRadius: '12px',\n      padding: '1rem',\n      boxShadow: '0 4px 10px rgba(0,0,0,0.2)',\n      zIndex: 1000,\n      textAlign: 'center'\n    },\n    children: [!dice && !moving && !done && !branchOptions && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRoll,\n      children: \"Roll Dice\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this), dice && !moving && !done && !branchOptions && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        gap: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: `/dice/dice${dice[0]}.png`,\n        alt: `Die ${dice[0]}`,\n        width: 50\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `/dice/dice${dice[1]}.png`,\n        alt: `Die ${dice[1]}`,\n        width: 50\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this), branchOptions && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Select your path:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), branchOptions.map((to, idx) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => chooseBranch(idx),\n        style: {\n          margin: '0 0.5rem'\n        },\n        children: [\"Go to \", to]\n      }, to, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this), done && !branchOptions && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDone,\n      children: \"Done\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(DiceRoller, \"99peldg5SBsxbQGK8GVG0Wqw0Fs=\");\n_c = DiceRoller;\nvar _c;\n$RefreshReg$(_c, \"DiceRoller\");","map":{"version":3,"names":["React","useState","useEffect","useContext","GameContext","jsxDEV","_jsxDEV","DiceRoller","_s","player","currentPlayerId","socket","dice","setDice","moving","setMoving","done","setDone","branchOptions","setBranchOptions","onDiceResult","playerId","die1","die2","socketId","console","log","onMovementDone","onBranchChoices","options","on","off","handleRoll","emit","handleDone","chooseBranch","idx","style","position","top","left","transform","background","border","borderRadius","padding","boxShadow","zIndex","textAlign","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","gap","src","alt","width","marginTop","map","to","margin","_c","$RefreshReg$"],"sources":["C:/Users/addhy/Desktop/Business_web/client/src/components/DiceRoller.js"],"sourcesContent":["// src/components/DiceRoller.js\r\nimport React, { useState, useEffect, useContext } from 'react';\r\nimport { GameContext } from '../context/GameContext';\r\n\r\nexport default function DiceRoller() {\r\n  const { player, currentPlayerId, socket } = useContext(GameContext);\r\n\r\n  // local UI state\r\n  const [dice, setDice] = useState(null);\r\n  const [moving, setMoving] = useState(false);\r\n  const [done, setDone] = useState(false);\r\n  const [branchOptions, setBranchOptions] = useState(null);\r\n\r\n  // register all socket listeners up front\r\n  useEffect(() => {\r\n    const onDiceResult = ({ playerId, die1, die2 }) => {\r\n      if (playerId === player?.socketId) {\r\n        console.log(`[DiceRoller] diceResult = ${die1}+${die2}`);\r\n        setDice([die1, die2]);\r\n        setMoving(true);\r\n        setDone(false);\r\n      }\r\n    };\r\n\r\n    const onMovementDone = () => {\r\n      console.log('[DiceRoller] movementDone');\r\n      setMoving(false);\r\n      setDone(true);\r\n    };\r\n\r\n    const onBranchChoices = ({ options }) => {\r\n      console.log('[DiceRoller] branchChoices =', options);\r\n      setBranchOptions(options);\r\n    };\r\n\r\n    socket.on('diceResult', onDiceResult);\r\n    socket.on('movementDone', onMovementDone);\r\n    socket.on('branchChoices', onBranchChoices);\r\n\r\n    return () => {\r\n      socket.off('diceResult', onDiceResult);\r\n      socket.off('movementDone', onMovementDone);\r\n      socket.off('branchChoices', onBranchChoices);\r\n    };\r\n  }, [player, socket]);\r\n\r\n  // only show for the active player\r\n  if (!player || player.socketId !== currentPlayerId) {\r\n    return null;\r\n  }\r\n\r\n  const handleRoll = () => {\r\n    console.log('[DiceRoller] emit rollDice');\r\n    socket.emit('rollDice');\r\n    setBranchOptions(null);\r\n  };\r\n\r\n  const handleDone = () => {\r\n    console.log('[DiceRoller] emit endTurn');\r\n    socket.emit('endTurn');\r\n    setDice(null);\r\n    setDone(false);\r\n  };\r\n\r\n  const chooseBranch = idx => {\r\n    console.log('[DiceRoller] emit branchChoice =', idx);\r\n    socket.emit('branchChoice', idx);\r\n    // clear options so buttons disappear\r\n    setBranchOptions(null);\r\n  };\r\n\r\n  return (\r\n    <div style={{\r\n      position: 'absolute',\r\n      top: '12%',\r\n      left: '50%',\r\n      transform: 'translateX(-50%)',\r\n      background: '#fff',\r\n      border: '2px solid #333',\r\n      borderRadius: '12px',\r\n      padding: '1rem',\r\n      boxShadow: '0 4px 10px rgba(0,0,0,0.2)',\r\n      zIndex: 1000,\r\n      textAlign: 'center'\r\n    }}>\r\n      {/* Roll button */}\r\n      {!dice && !moving && !done && !branchOptions && (\r\n        <button onClick={handleRoll}>Roll Dice</button>\r\n      )}\r\n\r\n      {/* Show dice faces once rolled */}\r\n      {dice && !moving && !done && !branchOptions && (\r\n        <div style={{ display: 'flex', justifyContent: 'center', gap: '10px' }}>\r\n          <img\r\n            src={`/dice/dice${dice[0]}.png`}\r\n            alt={`Die ${dice[0]}`}\r\n            width={50}\r\n          />\r\n          <img\r\n            src={`/dice/dice${dice[1]}.png`}\r\n            alt={`Die ${dice[1]}`}\r\n            width={50}\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      {/* Branch choice buttons */}\r\n      {branchOptions && (\r\n        <div style={{ marginTop: '1rem' }}>\r\n          <p>Select your path:</p>\r\n          {branchOptions.map((to, idx) => (\r\n            <button\r\n              key={to}\r\n              onClick={() => chooseBranch(idx)}\r\n              style={{ margin: '0 0.5rem' }}\r\n            >\r\n              Go to {to}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {/* Done button after movement completes */}\r\n      {done && !branchOptions && (\r\n        <button onClick={handleDone}>Done</button>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}