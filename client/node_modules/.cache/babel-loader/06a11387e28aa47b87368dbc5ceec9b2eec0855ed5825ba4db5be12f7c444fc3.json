{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\addhy\\\\Desktop\\\\Business_web\\\\client\\\\src\\\\context\\\\GameContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport socket from '../socket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GameContext = /*#__PURE__*/createContext();\nexport function GameProvider({\n  children\n}) {\n  _s();\n  const [player, setPlayer] = useState(null);\n  const [players, setPlayers] = useState([]);\n  const [currentPlayerId, setCurrentPlayerId] = useState(null);\n  const [sessionId, setSessionId] = useState(null);\n  const [gameState, setGameState] = useState('lobby');\n  useEffect(() => {\n    // Handle lobby updates\n    const handleLobbyUpdate = newPlayers => {\n      setPlayers(newPlayers);\n      const me = newPlayers.find(p => p.socketId === socket.id);\n      setPlayer(me || null);\n    };\n\n    // Handle the start of the game\n    const handleGameStart = ({\n      players: newPlayers,\n      sessionId: newSessionId,\n      currentPlayerId: firstPlayer\n    }) => {\n      setPlayers(newPlayers);\n      const me = newPlayers.find(p => p.socketId === socket.id);\n      setPlayer(me || null);\n      setSessionId(newSessionId);\n      setCurrentPlayerId(firstPlayer);\n      setGameState('playing');\n    };\n\n    // Handle turn changes\n    const handleTurnEnded = ({\n      nextPlayerId\n    }) => {\n      setCurrentPlayerId(nextPlayerId);\n    };\n\n    // Handle piece movement\n    const handlePlayerMoved = ({\n      playerId,\n      tileId\n    }) => {\n      setPlayers(prev => prev.map(p => p.socketId === playerId ? {\n        ...p,\n        tileId\n      } : p));\n    };\n    socket.on('lobbyUpdate', handleLobbyUpdate);\n    socket.on('gameStart', handleGameStart);\n    socket.on('turnEnded', handleTurnEnded);\n    socket.on('playerMoved', handlePlayerMoved);\n    return () => {\n      socket.off('lobbyUpdate', handleLobbyUpdate);\n      socket.off('gameStart', handleGameStart);\n      socket.off('turnEnded', handleTurnEnded);\n      socket.off('playerMoved', handlePlayerMoved);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(GameContext.Provider, {\n    value: {\n      player,\n      setPlayer,\n      players,\n      currentPlayerId,\n      sessionId,\n      gameState,\n      socket\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(GameProvider, \"5Sax7kgSwsvgMQJHrEiN+e3KynA=\");\n_c = GameProvider;\nvar _c;\n$RefreshReg$(_c, \"GameProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","socket","jsxDEV","_jsxDEV","GameContext","GameProvider","children","_s","player","setPlayer","players","setPlayers","currentPlayerId","setCurrentPlayerId","sessionId","setSessionId","gameState","setGameState","handleLobbyUpdate","newPlayers","me","find","p","socketId","id","handleGameStart","newSessionId","firstPlayer","handleTurnEnded","nextPlayerId","handlePlayerMoved","playerId","tileId","prev","map","on","off","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/addhy/Desktop/Business_web/client/src/context/GameContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nimport socket from '../socket';\r\n\r\nexport const GameContext = createContext();\r\n\r\nexport function GameProvider({ children }) {\r\n  const [player, setPlayer] = useState(null);\r\n  const [players, setPlayers] = useState([]);\r\n  const [currentPlayerId, setCurrentPlayerId] = useState(null);\r\n  const [sessionId, setSessionId] = useState(null);\r\n  const [gameState, setGameState] = useState('lobby');\r\n\r\n  useEffect(() => {\r\n    // Handle lobby updates\r\n    const handleLobbyUpdate = (newPlayers) => {\r\n      setPlayers(newPlayers);\r\n      const me = newPlayers.find(p => p.socketId === socket.id);\r\n      setPlayer(me || null);\r\n    };\r\n\r\n    // Handle the start of the game\r\n    const handleGameStart = ({ players: newPlayers, sessionId: newSessionId, currentPlayerId: firstPlayer }) => {\r\n      setPlayers(newPlayers);\r\n      const me = newPlayers.find(p => p.socketId === socket.id);\r\n      setPlayer(me || null);\r\n      setSessionId(newSessionId);\r\n      setCurrentPlayerId(firstPlayer);\r\n      setGameState('playing');\r\n    };\r\n\r\n    // Handle turn changes\r\n    const handleTurnEnded = ({ nextPlayerId }) => {\r\n      setCurrentPlayerId(nextPlayerId);\r\n    };\r\n\r\n    // Handle piece movement\r\n    const handlePlayerMoved = ({ playerId, tileId }) => {\r\n      setPlayers(prev =>\r\n        prev.map(p =>\r\n          p.socketId === playerId ? { ...p, tileId } : p\r\n        )\r\n      );\r\n    };\r\n\r\n    socket.on('lobbyUpdate', handleLobbyUpdate);\r\n    socket.on('gameStart', handleGameStart);\r\n    socket.on('turnEnded', handleTurnEnded);\r\n    socket.on('playerMoved', handlePlayerMoved);\r\n\r\n    return () => {\r\n      socket.off('lobbyUpdate', handleLobbyUpdate);\r\n      socket.off('gameStart', handleGameStart);\r\n      socket.off('turnEnded', handleTurnEnded);\r\n      socket.off('playerMoved', handlePlayerMoved);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <GameContext.Provider\r\n      value={{\r\n        player,\r\n        setPlayer,\r\n        players,\r\n        currentPlayerId,\r\n        sessionId,\r\n        gameState,\r\n        socket,\r\n      }}\r\n    >\r\n      {children}\r\n    </GameContext.Provider>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}