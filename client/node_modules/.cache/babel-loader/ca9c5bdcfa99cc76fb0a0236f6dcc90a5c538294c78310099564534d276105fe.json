{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\addhy\\\\Desktop\\\\Business_web\\\\client\\\\src\\\\components\\\\DiceRoller.js\",\n  _s = $RefreshSig$();\n// src/components/DiceRoller.js\nimport React, { useContext } from 'react';\nimport { GameContext } from '../context/GameContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DiceRoller = () => {\n  _s();\n  var _players$currentPlaye;\n  const {\n    player,\n    players,\n    currentPlayerIndex,\n    isMoving,\n    diceRoll,\n    setOriginalCount,\n    setDiceRoll,\n    setIsMoving\n  } = useContext(GameContext);\n\n  // Only render on your turn\n  if (!player || ((_players$currentPlaye = players[currentPlayerIndex]) === null || _players$currentPlaye === void 0 ? void 0 : _players$currentPlaye.name) !== player.name) {\n    return null;\n  }\n  const rollDice = () => {\n    const d1 = Math.ceil(Math.random() * 6);\n    const d2 = Math.ceil(Math.random() * 6);\n    const total = d1 + d2;\n    console.log(`[DiceRoller] ${player.name} rolled ${d1} + ${d2} = ${total}`);\n    setOriginalCount(total);\n    setDiceRoll([d1, d2]);\n    setIsMoving(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'absolute',\n      top: '10%',\n      left: '50%',\n      transform: 'translateX(-50%)',\n      background: '#fff',\n      border: '2px solid #333',\n      borderRadius: '12px',\n      padding: '1rem',\n      boxShadow: '0 4px 10px rgba(0,0,0,0.2)',\n      zIndex: 1000,\n      textAlign: 'center'\n    },\n    children: [!diceRoll && !isMoving && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: rollDice,\n      children: \"Roll Dice\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), diceRoll && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '1rem',\n        display: 'flex',\n        justifyContent: 'center',\n        gap: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: `/dice/dice${diceRoll[0]}.png`,\n        alt: `Die ${diceRoll[0]}`,\n        width: 50\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `/dice/dice${diceRoll[1]}.png`,\n        alt: `Die ${diceRoll[1]}`,\n        width: 50\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(DiceRoller, \"V674owHNZTLPBw49/lTWyU62Q+I=\");\n_c = DiceRoller;\nexport default DiceRoller;\nvar _c;\n$RefreshReg$(_c, \"DiceRoller\");","map":{"version":3,"names":["React","useContext","GameContext","jsxDEV","_jsxDEV","DiceRoller","_s","_players$currentPlaye","player","players","currentPlayerIndex","isMoving","diceRoll","setOriginalCount","setDiceRoll","setIsMoving","name","rollDice","d1","Math","ceil","random","d2","total","console","log","style","position","top","left","transform","background","border","borderRadius","padding","boxShadow","zIndex","textAlign","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","marginTop","display","justifyContent","gap","src","alt","width","_c","$RefreshReg$"],"sources":["C:/Users/addhy/Desktop/Business_web/client/src/components/DiceRoller.js"],"sourcesContent":["// src/components/DiceRoller.js\nimport React, { useContext } from 'react';\nimport { GameContext } from '../context/GameContext';\n\nconst DiceRoller = () => {\n  const {\n    player,\n    players,\n    currentPlayerIndex,\n    isMoving,\n    diceRoll,\n    setOriginalCount,\n    setDiceRoll,\n    setIsMoving,\n  } = useContext(GameContext);\n\n  // Only render on your turn\n  if (!player || players[currentPlayerIndex]?.name !== player.name) {\n    return null;\n  }\n\n  const rollDice = () => {\n    const d1 = Math.ceil(Math.random() * 6);\n    const d2 = Math.ceil(Math.random() * 6);\n    const total = d1 + d2;\n\n    console.log(`[DiceRoller] ${player.name} rolled ${d1} + ${d2} = ${total}`);\n    setOriginalCount(total);\n    setDiceRoll([d1, d2]);\n    setIsMoving(true);\n  };\n\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        top: '10%',\n        left: '50%',\n        transform: 'translateX(-50%)',\n        background: '#fff',\n        border: '2px solid #333',\n        borderRadius: '12px',\n        padding: '1rem',\n        boxShadow: '0 4px 10px rgba(0,0,0,0.2)',\n        zIndex: 1000,\n        textAlign: 'center',\n      }}\n    >\n      {/* Roll button only if no roll yet */}\n      {!diceRoll && !isMoving && (\n        <button onClick={rollDice}>Roll Dice</button>\n      )}\n\n      {/* Once rolled, show the two dice */}\n      {diceRoll && (\n        <div\n          style={{\n            marginTop: '1rem',\n            display: 'flex',\n            justifyContent: 'center',\n            gap: '10px',\n          }}\n        >\n          <img\n            src={`/dice/dice${diceRoll[0]}.png`}\n            alt={`Die ${diceRoll[0]}`}\n            width={50}\n          />\n          <img\n            src={`/dice/dice${diceRoll[1]}.png`}\n            alt={`Die ${diceRoll[1]}`}\n            width={50}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default DiceRoller;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}