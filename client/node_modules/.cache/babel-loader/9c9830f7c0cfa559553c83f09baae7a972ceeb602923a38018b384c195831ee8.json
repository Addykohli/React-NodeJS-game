{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\addhy\\\\Desktop\\\\Business_web\\\\client\\\\src\\\\components\\\\Board.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from 'react';\nimport { GameContext } from '../context/GameContext';\nimport boardImage from '../assets/board.png';\nimport piece1 from '../assets/pieces/piece1.png';\nimport piece2 from '../assets/pieces/piece2.png';\nimport piece3 from '../assets/pieces/piece3.png';\nimport piece4 from '../assets/pieces/piece4.png';\nimport piece5 from '../assets/pieces/piece5.png';\nimport piece6 from '../assets/pieces/piece6.png';\nimport piece7 from '../assets/pieces/piece7.png';\nimport piece8 from '../assets/pieces/piece8.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst pieceMap = {\n  piece1,\n  piece2,\n  piece3,\n  piece4,\n  piece5,\n  piece6,\n  piece7,\n  piece8\n};\nconst Board = () => {\n  _s();\n  const {\n    players\n  } = useContext(GameContext);\n  const [zoom, setZoom] = useState(1);\n  const zoomIn = () => setZoom(z => Math.min(z + 0.1, 2));\n  const zoomOut = () => setZoom(z => Math.max(z - 0.1, 0.5));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center',\n      marginTop: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: zoomOut,\n        style: {\n          marginRight: '10px'\n        },\n        children: \"\\u2796 Zoom Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: zoomIn,\n        children: \"\\u2795 Zoom In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: e => {\n        const rect = e.currentTarget.getBoundingClientRect();\n        const x = e.clientX - rect.left;\n        const y = e.clientY - rect.top;\n        console.log('Clicked at:', Math.round(x / zoom), Math.round(y / zoom));\n      },\n      style: {\n        position: 'relative',\n        width: `${600 * zoom}px`,\n        height: `${600 * zoom}px`,\n        backgroundImage: `url(${boardImage})`,\n        backgroundSize: '100% 100%',\n        backgroundRepeat: 'no-repeat',\n        backgroundPosition: 'center',\n        border: '3px solid #333',\n        overflow: 'visible',\n        margin: '0 auto'\n      },\n      children: players.map((p, i) => {\n        const pieceImg = pieceMap[p.piece];\n        if (!pieceImg) return null;\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          src: pieceImg,\n          alt: p.name,\n          title: p.name,\n          style: {\n            position: 'absolute',\n            top: (520 + i * 10) * zoom,\n            left: (20 + i * 10) * zoom,\n            width: 30 * zoom,\n            height: 30 * zoom,\n            transition: 'top 0.3s, left 0.3s'\n          }\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(Board, \"i2owGPkt6yj5xxPX/IZ5a2AVVAI=\");\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useContext","useState","GameContext","boardImage","piece1","piece2","piece3","piece4","piece5","piece6","piece7","piece8","jsxDEV","_jsxDEV","pieceMap","Board","_s","players","zoom","setZoom","zoomIn","z","Math","min","zoomOut","max","style","textAlign","marginTop","children","marginBottom","onClick","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","e","rect","currentTarget","getBoundingClientRect","x","clientX","left","y","clientY","top","console","log","round","position","width","height","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","border","overflow","margin","map","p","i","pieceImg","piece","src","alt","name","title","transition","_c","$RefreshReg$"],"sources":["C:/Users/addhy/Desktop/Business_web/client/src/components/Board.js"],"sourcesContent":["import React, { useContext, useState } from 'react';\r\nimport { GameContext } from '../context/GameContext';\r\nimport boardImage from '../assets/board.png';\r\n\r\nimport piece1 from '../assets/pieces/piece1.png';\r\nimport piece2 from '../assets/pieces/piece2.png';\r\nimport piece3 from '../assets/pieces/piece3.png';\r\nimport piece4 from '../assets/pieces/piece4.png';\r\nimport piece5 from '../assets/pieces/piece5.png';\r\nimport piece6 from '../assets/pieces/piece6.png';\r\nimport piece7 from '../assets/pieces/piece7.png';\r\nimport piece8 from '../assets/pieces/piece8.png';\r\n\r\nconst pieceMap = {\r\n  piece1, piece2, piece3, piece4, piece5, piece6, piece7, piece8,\r\n};\r\n\r\nconst Board = () => {\r\n  const { players } = useContext(GameContext);\r\n  const [zoom, setZoom] = useState(1);\r\n\r\n  const zoomIn = () => setZoom((z) => Math.min(z + 0.1, 2));\r\n  const zoomOut = () => setZoom((z) => Math.max(z - 0.1, 0.5));\r\n\r\n  return (\r\n    <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n      <div style={{ marginBottom: '10px' }}>\r\n        <button onClick={zoomOut} style={{ marginRight: '10px' }}>➖ Zoom Out</button>\r\n        <button onClick={zoomIn}>➕ Zoom In</button>\r\n      </div>\r\n\r\n      <div\r\n        onClick={(e) => {\r\n          const rect = e.currentTarget.getBoundingClientRect();\r\n          const x = e.clientX - rect.left;\r\n          const y = e.clientY - rect.top;\r\n          console.log('Clicked at:', Math.round(x / zoom), Math.round(y / zoom));\r\n        }}\r\n        style={{\r\n          position: 'relative',\r\n          width: `${600 * zoom}px`,\r\n          height: `${600 * zoom}px`,\r\n          backgroundImage: `url(${boardImage})`,\r\n          backgroundSize: '100% 100%',\r\n          backgroundRepeat: 'no-repeat',\r\n          backgroundPosition: 'center',\r\n          border: '3px solid #333',\r\n          overflow: 'visible',\r\n          margin: '0 auto',\r\n        }}\r\n      >\r\n        {players.map((p, i) => {\r\n          const pieceImg = pieceMap[p.piece];\r\n          if (!pieceImg) return null;\r\n\r\n          return (\r\n            <img\r\n              key={i}\r\n              src={pieceImg}\r\n              alt={p.name}\r\n              title={p.name}\r\n              style={{\r\n                position: 'absolute',\r\n                top: (520 + i * 10) * zoom,\r\n                left: (20 + i * 10) * zoom,\r\n                width: 30 * zoom,\r\n                height: 30 * zoom,\r\n                transition: 'top 0.3s, left 0.3s',\r\n              }}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}