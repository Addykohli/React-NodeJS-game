{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\addhy\\\\Desktop\\\\Business_web - Copy (2)\\\\client\\\\src\\\\components\\\\GameScreen.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useContext, useState, useEffect } from 'react';\nimport bgImage from '../assets/bg.png';\nimport Dicebox from '../assets/diceBoard.png';\nimport startIcon from '../assets/start.png';\nimport hotelIcon from '../assets/hotel.png';\nimport casinoIcon from '../assets/casino.png';\nimport roadIcon from '../assets/road.png';\nimport Board from './Board';\nimport DiceRoller from './DiceRoller';\nimport Dashboard from './Dashboard';\nimport PlayerStats from './PlayerStats';\nimport RoadCash from './RoadCash';\nimport RPSTieResolver from './RPSTieResolver';\nimport { GameContext } from '../context/GameContext';\nimport { tiles } from '../data/tiles';\nimport Chat from './Chat';\nimport TradePanel from './TradePanel';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CasinoBetting = ({\n  isMyTurn,\n  currentMoney,\n  socket,\n  player,\n  onCasinoPlayed\n}) => {\n  _s();\n  const [betAmount, setBetAmount] = useState(1000);\n  const [selectedBet, setSelectedBet] = useState(null);\n  const [showResult, setShowResult] = useState(null);\n  const [diceResult, setDiceResult] = useState(null);\n  const [isActive, setIsActive] = useState(true);\n  const handleAmountChange = delta => {\n    const newAmount = Math.max(1000, Math.min(currentMoney, betAmount + delta));\n    setBetAmount(newAmount);\n  };\n  const handleBetSelect = bet => {\n    setSelectedBet(bet);\n  };\n  const handleRoll = () => {\n    if (selectedBet && betAmount >= 1000 && betAmount <= currentMoney) {\n      socket.emit('casinoRoll', {\n        betAmount,\n        betType: selectedBet\n      });\n    }\n  };\n  useEffect(() => {\n    const handleCasinoResult = ({\n      playerId,\n      dice,\n      amount,\n      won,\n      playerMoney\n    }) => {\n      if (playerId === player.socketId) {\n        setDiceResult(dice);\n        setShowResult({\n          won,\n          amount\n        });\n        setIsActive(false);\n        onCasinoPlayed();\n      }\n    };\n    socket.on('casinoResult', handleCasinoResult);\n    return () => socket.off('casinoResult', handleCasinoResult);\n  }, [socket, player.socketId, onCasinoPlayed]);\n\n  // If not active (after result), show result screen\n  if (!isActive) {\n    if (showResult && diceResult) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n          height: '100%',\n          gap: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            gap: '10px',\n            justifyContent: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `/dice/dice${diceResult[0]}.png`,\n            alt: `Die ${diceResult[0]}`,\n            width: 125,\n            height: 125\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `/dice/dice${diceResult[1]}.png`,\n            alt: `Die ${diceResult[1]}`,\n            width: 125,\n            height: 125\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: showResult.won ? '#4CAF50' : '#f44336',\n            fontWeight: 'bold',\n            fontSize: '1.2em',\n            padding: '15px 25px',\n            backgroundColor: 'rgba(0, 0, 0, 0.6)',\n            borderRadius: '8px',\n            textAlign: 'center'\n          },\n          children: showResult.won ? `You won $${showResult.amount}!` : `You lost $${showResult.amount}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this);\n    }\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: '100%',\n      gap: '25px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        gap: '15px',\n        backgroundColor: 'rgba(0, 0, 0, 0.3)',\n        padding: '15px 20px',\n        borderRadius: '12px',\n        border: '1px solid rgba(255, 255, 255, 0.1)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAmountChange(-500),\n        disabled: !isMyTurn || betAmount <= 1000,\n        style: {\n          padding: '12px 20px',\n          fontSize: '1.8em',\n          cursor: isMyTurn ? 'pointer' : 'not-allowed',\n          backgroundColor: isMyTurn && betAmount > 1000 ? '#ff4444' : 'rgba(255, 68, 68, 0.5)',\n          color: 'white',\n          border: 'none',\n          borderRadius: '8px',\n          width: '60px',\n          transition: 'all 0.2s ease',\n          boxShadow: '0 2px 4px rgba(0, 0, 0, 0.2)'\n        },\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '12px 20px',\n          border: '2px solid rgba(255, 255, 255, 0.2)',\n          borderRadius: '8px',\n          minWidth: '150px',\n          textAlign: 'center',\n          fontSize: '1.6em',\n          color: 'white',\n          backgroundColor: 'rgba(0, 0, 0, 0.2)'\n        },\n        children: [\"$\", betAmount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAmountChange(500),\n        disabled: !isMyTurn || betAmount >= currentMoney,\n        style: {\n          padding: '12px 20px',\n          fontSize: '1.8em',\n          cursor: isMyTurn ? 'pointer' : 'not-allowed',\n          backgroundColor: isMyTurn && betAmount < currentMoney ? '#4CAF50' : 'rgba(76, 175, 80, 0.5)',\n          color: 'white',\n          border: 'none',\n          borderRadius: '8px',\n          width: '60px',\n          transition: 'all 0.2s ease',\n          boxShadow: '0 2px 4px rgba(0, 0, 0, 0.2)'\n        },\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        gap: '15px',\n        backgroundColor: 'rgba(0, 0, 0, 0.3)',\n        padding: '15px 20px',\n        borderRadius: '12px',\n        border: '1px solid rgba(255, 255, 255, 0.1)'\n      },\n      children: ['above', '7', 'below'].map(bet => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleBetSelect(bet),\n        disabled: !isMyTurn,\n        style: {\n          padding: '15px 25px',\n          backgroundColor: selectedBet === bet ? '#2196F3' : 'rgba(33, 150, 243, 0.3)',\n          color: '#fff',\n          border: selectedBet === bet ? '2px solid #90CAF9' : '1px solid rgba(255, 255, 255, 0.1)',\n          borderRadius: '8px',\n          cursor: isMyTurn ? 'pointer' : 'not-allowed',\n          fontSize: '1.4em',\n          fontWeight: 'bold',\n          textTransform: 'uppercase',\n          minWidth: '120px',\n          transition: 'all 0.2s ease',\n          boxShadow: selectedBet === bet ? '0 0 10px rgba(33, 150, 243, 0.5)' : 'none'\n        },\n        children: bet\n      }, bet, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRoll,\n      disabled: !isMyTurn || !selectedBet || betAmount < 1000 || betAmount > currentMoney,\n      style: {\n        padding: '15px 40px',\n        backgroundColor: isMyTurn && selectedBet && betAmount >= 1000 && betAmount <= currentMoney ? '#FFA000' : 'rgba(255, 160, 0, 0.3)',\n        color: '#fff',\n        border: 'none',\n        borderRadius: '12px',\n        marginTop: '10px',\n        cursor: isMyTurn && selectedBet ? 'pointer' : 'not-allowed',\n        fontSize: '1.8em',\n        fontWeight: 'bold',\n        letterSpacing: '2px',\n        textTransform: 'uppercase',\n        transition: 'all 0.3s ease',\n        boxShadow: isMyTurn && selectedBet ? '0 4px 15px rgba(255, 160, 0, 0.4)' : 'none',\n        textShadow: '2px 2px 4px rgba(0, 0, 0, 0.3)'\n      },\n      children: \"Roll\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n_s(CasinoBetting, \"1erwuWbl18mQT2wIK6glrgWb/ks=\");\n_c = CasinoBetting;\nexport default function GameScreen() {\n  _s2();\n  const {\n    player,\n    players,\n    setPlayer,\n    setPlayers,\n    currentPlayerId,\n    socket,\n    movementDone\n  } = useContext(GameContext);\n  const isMyTurn = (player === null || player === void 0 ? void 0 : player.socketId) === currentPlayerId;\n  const [error, setError] = useState(null);\n  const [testRollInput, setTestRollInput] = useState('');\n  const [testRollMode, setTestRollMode] = useState(false);\n  const [inCasino, setInCasino] = useState(false);\n  const [hasCasinoPlayed, setHasCasinoPlayed] = useState(false);\n  const [hasChosenCorner, setHasChosenCorner] = useState(false);\n  const [rpsGame, setRpsGame] = useState(null);\n  const [rpsChoice, setRpsChoice] = useState(null);\n  const [rpsResult, setRpsResult] = useState(null);\n  const [rpsTieAmount, setRpsTieAmount] = useState(null);\n  const [activeSidePanel, setActiveSidePanel] = useState(null);\n  const [borrowAmount, setBorrowAmount] = useState(1000);\n  const [payoffAmount, setPayoffAmount] = useState(1000);\n  const [gameEvents, setGameEvents] = useState([]);\n\n  // Add socket event listener for borrow response\n  useEffect(() => {\n    if (!socket) return;\n    const handleBorrowResponse = ({\n      success,\n      error\n    }) => {\n      if (!success && error) {\n        setError(error);\n        setTimeout(() => setError(null), 5000);\n      }\n    };\n    socket.on('borrowResponse', handleBorrowResponse);\n    return () => {\n      socket.off('borrowResponse', handleBorrowResponse);\n    };\n  }, [socket]);\n\n  // Add socket event listener for game events\n  useEffect(() => {\n    if (!socket) return;\n\n    // Handle initial game events history\n    socket.on('gameEventsHistory', events => {\n      setGameEvents(events);\n    });\n\n    // Handle new game events\n    socket.on('gameEvent', event => {\n      setGameEvents(prev => [...prev, event]);\n    });\n    return () => {\n      socket.off('gameEventsHistory');\n      socket.off('gameEvent');\n    };\n  }, [socket]);\n\n  // Define panel configurations\n  const panelConfigs = {\n    info: {\n      color: '#4CAF50',\n      // Green\n      title: 'Game Events',\n      icon: '📋'\n    },\n    bank: {\n      color: '#2196F3',\n      // Blue\n      title: 'Bank',\n      icon: '💰'\n    },\n    chat: {\n      color: '#9C27B0',\n      // Purple\n      title: 'Chat',\n      icon: '💬'\n    },\n    trade: {\n      color: '#FF9800',\n      // Orange\n      title: 'Trade',\n      icon: '🔄'\n    }\n  };\n\n  // Determine metadata for the current tile\n  const tileMeta = tiles.find(t => t.id === (player === null || player === void 0 ? void 0 : player.tileId));\n\n  // Reset hasChosenCorner when turn ends or tile changes\n  useEffect(() => {\n    var _tileMeta$name;\n    if (!isMyTurn || !(tileMeta !== null && tileMeta !== void 0 && (_tileMeta$name = tileMeta.name) !== null && _tileMeta$name !== void 0 && _tileMeta$name.toLowerCase().includes('choose corner'))) {\n      setHasChosenCorner(false);\n    }\n  }, [isMyTurn, tileMeta]);\n\n  // Add keyboard listener for test rolls\n  useEffect(() => {\n    const handleKeyPress = e => {\n      if (!isMyTurn) return;\n\n      // Build up the test roll input\n      if (e.key === 'Enter' && testRollInput.startsWith('testroll')) {\n        const rollNumber = parseInt(testRollInput.slice(8));\n        if (!isNaN(rollNumber) && rollNumber >= 2 && rollNumber <= 12) {\n          socket.emit('rollDice', {\n            testRoll: rollNumber\n          });\n          setTestRollInput('');\n          setTestRollMode(false);\n        }\n      } else if (e.key === 'Backspace') {\n        setTestRollInput(prev => prev.slice(0, -1));\n      } else if (e.key.length === 1) {\n        // Regular character\n        setTestRollInput(prev => prev + e.key);\n      }\n    };\n    window.addEventListener('keydown', handleKeyPress);\n    return () => window.removeEventListener('keydown', handleKeyPress);\n  }, [isMyTurn, testRollInput, socket]);\n\n  // Show current test roll input if active\n  useEffect(() => {\n    if (testRollInput.startsWith('testroll')) {\n      setTestRollMode(true);\n    } else if (testRollInput.length === 0) {\n      setTestRollMode(false);\n    }\n  }, [testRollInput]);\n\n  // Debug logging to trace condition\n  useEffect(() => {\n    console.log('[GameScreen] Debug:', {\n      isMyTurn,\n      movementDone,\n      tileMeta,\n      \"player.tileId\": player === null || player === void 0 ? void 0 : player.tileId,\n      \"tileMeta.type\": tileMeta === null || tileMeta === void 0 ? void 0 : tileMeta.type,\n      \"tileMeta.cost\": tileMeta === null || tileMeta === void 0 ? void 0 : tileMeta.cost,\n      \"player.money\": player === null || player === void 0 ? void 0 : player.money,\n      testRollMode,\n      testRollInput\n    });\n  }, [isMyTurn, movementDone, tileMeta, player, testRollMode, testRollInput]);\n\n  // Listen for purchase events\n  useEffect(() => {\n    socket.on('purchaseSuccess', ({\n      socketId,\n      money,\n      properties\n    }) => {\n      console.log('[GameScreen] purchaseSuccess', {\n        socketId,\n        money,\n        properties\n      });\n      const updated = players.map(p => p.socketId === socketId ? {\n        ...p,\n        money,\n        properties\n      } : p);\n      setPlayers(updated);\n      if (player.socketId === socketId) {\n        setPlayer({\n          ...player,\n          money,\n          properties\n        });\n      }\n      setError(null);\n    });\n\n    // Add player disconnect handler\n    socket.on('playerDisconnected', ({\n      playerName,\n      temporary\n    }) => {\n      if (temporary) {\n        setError(`${playerName} temporarily disconnected. They can rejoin with the same name.`);\n        setTimeout(() => setError(null), 5000);\n      }\n    });\n\n    // Add property update handler\n    socket.on('propertyUpdated', ({\n      playerId,\n      propertyId,\n      action,\n      newMoney\n    }) => {\n      console.log('[GameScreen] propertyUpdated', {\n        playerId,\n        propertyId,\n        action,\n        newMoney\n      });\n\n      // Update players' properties and money\n      setPlayers(prevPlayers => {\n        return prevPlayers.map(p => {\n          if (p.socketId === playerId) {\n            return {\n              ...p,\n              properties: action === 'add' ? [...(p.properties || []), propertyId] : (p.properties || []).filter(id => id !== propertyId),\n              money: newMoney // Update the player's money\n            };\n          }\n          return p;\n        });\n      });\n\n      // Update current player if they're involved\n      if (player.socketId === playerId) {\n        setPlayer(prev => ({\n          ...prev,\n          properties: action === 'add' ? [...(prev.properties || []), propertyId] : (prev.properties || []).filter(id => id !== propertyId),\n          money: newMoney // Update the current player's money\n        }));\n\n        // Show message when selling property\n        if (action === 'remove') {\n          const property = tiles.find(t => t.id === propertyId);\n          setError(`You sold ${property.name} for $${property.cost}`);\n          setTimeout(() => setError(null), 5000);\n        }\n      }\n    });\n\n    // Add rent payment handler\n    socket.on('rentPaid', ({\n      payerSocketId,\n      payerMoney,\n      payerLoan,\n      ownerSocketId,\n      ownerMoney,\n      amount,\n      baseRent,\n      multiplier,\n      propertyName\n    }) => {\n      var _players$find, _players$find2;\n      console.log('[GameScreen] rentPaid', {\n        payerSocketId,\n        ownerSocketId,\n        amount\n      });\n\n      // Update players' money and loan synchronously\n      setPlayers(prevPlayers => {\n        const updatedPlayers = prevPlayers.map(p => {\n          if (p.socketId === payerSocketId) {\n            return {\n              ...p,\n              money: payerMoney,\n              loan: payerLoan\n            };\n          }\n          if (p.socketId === ownerSocketId) {\n            return {\n              ...p,\n              money: ownerMoney\n            };\n          }\n          return p;\n        });\n\n        // Update current player if they're involved\n        if (player.socketId === payerSocketId) {\n          setPlayer(prev => ({\n            ...prev,\n            money: payerMoney,\n            loan: payerLoan\n          }));\n        } else if (player.socketId === ownerSocketId) {\n          setPlayer(prev => ({\n            ...prev,\n            money: ownerMoney\n          }));\n        }\n        return updatedPlayers;\n      });\n\n      // Show rent payment notification with stylized multiplier\n      setError(/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: '4px',\n          justifyContent: 'center',\n          fontSize: '1.6em',\n          padding: '15px',\n          backgroundColor: 'rgba(0, 0, 0, 0.7)',\n          borderRadius: '8px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: `${(_players$find = players.find(p => p.socketId === payerSocketId)) === null || _players$find === void 0 ? void 0 : _players$find.name} paid rent to ${(_players$find2 = players.find(p => p.socketId === ownerSocketId)) === null || _players$find2 === void 0 ? void 0 : _players$find2.name} for ${propertyName} - $${baseRent.toLocaleString()}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 11\n        }, this), multiplier > 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: '#FFA500',\n            fontSize: '1.5em',\n            fontWeight: 'bold',\n            marginLeft: '8px'\n          },\n          children: `X${multiplier}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 9\n      }, this));\n      setTimeout(() => setError(null), 5000);\n    });\n\n    // Add start bonus handler\n    socket.on('startBonus', ({\n      playerSocketId,\n      newMoney,\n      amount,\n      reason\n    }) => {\n      console.log('[GameScreen] startBonus', {\n        playerSocketId,\n        newMoney,\n        amount,\n        reason\n      });\n\n      // Update players' money synchronously\n      setPlayers(prevPlayers => {\n        const updatedPlayers = prevPlayers.map(p => p.socketId === playerSocketId ? {\n          ...p,\n          money: newMoney\n        } : p);\n\n        // Update current player if they got the bonus\n        if (player.socketId === playerSocketId) {\n          setPlayer(prev => ({\n            ...prev,\n            money: newMoney\n          }));\n          setError(`You received $${amount} for ${reason} Start!`);\n          setTimeout(() => setError(null), 7000);\n        }\n        return updatedPlayers;\n      });\n    });\n\n    // Add road cash handler\n    socket.on('roadCashResult', ({\n      playerSocketId,\n      newMoney,\n      amount\n    }) => {\n      console.log('[GameScreen] roadCashResult', {\n        playerSocketId,\n        newMoney,\n        amount\n      });\n\n      // Update players' money synchronously\n      setPlayers(prevPlayers => {\n        const updatedPlayers = prevPlayers.map(p => p.socketId === playerSocketId ? {\n          ...p,\n          money: newMoney\n        } : p);\n\n        // Update current player if they got the money\n        if (player.socketId === playerSocketId) {\n          setPlayer(prev => ({\n            ...prev,\n            money: newMoney\n          }));\n          setError(`You won $${amount} on the road!`);\n          setTimeout(() => setError(null), 5000);\n        }\n        return updatedPlayers;\n      });\n    });\n\n    // Add casino result handler\n    socket.on('casinoResult', ({\n      playerId,\n      dice,\n      amount,\n      won,\n      playerName,\n      playerMoney\n    }) => {\n      console.log('[GameScreen] casinoResult', {\n        playerId,\n        dice,\n        amount,\n        won,\n        playerName,\n        playerMoney\n      });\n\n      // Update players' money synchronously\n      setPlayers(prevPlayers => {\n        const updatedPlayers = prevPlayers.map(p => p.socketId === playerId ? {\n          ...p,\n          money: playerMoney\n        } : p);\n\n        // Update current player if they're involved\n        if (player.socketId === playerId) {\n          setPlayer(prev => ({\n            ...prev,\n            money: playerMoney\n          }));\n        } else {\n          setError(`${playerName} ${won ? 'won' : 'lost'} $${amount} at the casino!`);\n          setTimeout(() => setError(null), 5000);\n        }\n        return updatedPlayers;\n      });\n    });\n\n    // Add trade accepted handler\n    socket.on('tradeAccepted', ({\n      fromPlayer,\n      toPlayer\n    }) => {\n      console.log('[GameScreen] tradeAccepted', {\n        fromPlayer,\n        toPlayer\n      });\n\n      // Update players' money and properties synchronously\n      setPlayers(prevPlayers => {\n        const updatedPlayers = prevPlayers.map(p => {\n          if (p.socketId === fromPlayer.socketId) {\n            return {\n              ...p,\n              money: fromPlayer.money,\n              properties: fromPlayer.properties\n            };\n          }\n          if (p.socketId === toPlayer.socketId) {\n            return {\n              ...p,\n              money: toPlayer.money,\n              properties: toPlayer.properties\n            };\n          }\n          return p;\n        });\n\n        // Update current player if they were involved\n        if (player.socketId === fromPlayer.socketId) {\n          setPlayer(prev => ({\n            ...prev,\n            money: fromPlayer.money,\n            properties: fromPlayer.properties\n          }));\n        } else if (player.socketId === toPlayer.socketId) {\n          setPlayer(prev => ({\n            ...prev,\n            money: toPlayer.money,\n            properties: toPlayer.properties\n          }));\n        }\n        return updatedPlayers;\n      });\n    });\n\n    // Add playerMoved event handler\n    socket.on('playerMoved', ({\n      playerId,\n      tileId\n    }) => {\n      console.log('[GameScreen] playerMoved', {\n        playerId,\n        tileId\n      });\n      if (playerId === (player === null || player === void 0 ? void 0 : player.socketId)) {\n        setPlayer(prev => ({\n          ...prev,\n          tileId\n        }));\n      }\n      setPlayers(prev => prev.map(p => p.socketId === playerId ? {\n        ...p,\n        tileId\n      } : p));\n      // Clear any previous messages when a player moves\n      setError(null);\n    });\n    socket.on('purchaseFailed', ({\n      reason\n    }) => {\n      console.log('[GameScreen] purchaseFailed', reason);\n      if (reason === 'insufficientFunds') {\n        setError(\"You don't have enough money.\");\n      } else if (reason === 'alreadyOwned') {\n        setError('You already own this property.');\n      } else {\n        setError('Cannot buy this property.');\n      }\n      // Clear error message after 5 seconds\n      setTimeout(() => setError(null), 5000);\n    });\n\n    // Add rent bonus handler\n    socket.on('rentBonus', ({\n      playerSocketId,\n      newMoney,\n      amount,\n      propertyName\n    }) => {\n      console.log('[GameScreen] rentBonus', {\n        playerSocketId,\n        amount\n      });\n\n      // Update player's money\n      const updated = players.map(p => p.socketId === playerSocketId ? {\n        ...p,\n        money: newMoney\n      } : p);\n      setPlayers(updated);\n\n      // Update current player if they got the bonus\n      if (player.socketId === playerSocketId) {\n        setPlayer(prev => ({\n          ...player,\n          money: newMoney\n        }));\n        setError(`You received $${amount} bonus for landing on your property ${propertyName}!`);\n        // Clear bonus message after 5 seconds\n        setTimeout(() => setError(null), 5000);\n      }\n    });\n\n    // Add RPS event listeners\n    socket.on('stonePaperScissorsStart', game => {\n      console.log('[RPS] Game started:', game);\n      setRpsGame(game);\n      setRpsChoice(null);\n      setRpsResult(null);\n      setRpsTieAmount(null);\n    });\n    socket.on('stonePaperScissorsResult', result => {\n      console.log('[RPS] Result received:', result);\n      setRpsResult(result);\n\n      // Update players' money in the game state\n      const updatedPlayers = players.map(p => {\n        if (p.socketId === result.landingPlayer.socketId) {\n          return {\n            ...p,\n            money: result.landingPlayer.money < 0 ? 0 : result.landingPlayer.money,\n            loan: result.landingPlayer.money < 0 ? (result.landingPlayer.loan || 0) + Math.abs(result.landingPlayer.money) : result.landingPlayer.loan || 0\n          };\n        }\n        // Update winners' money and loans\n        const winner = result.winners.find(w => w.socketId === p.socketId);\n        if (winner) {\n          return {\n            ...p,\n            money: winner.money < 0 ? 0 : winner.money,\n            loan: winner.money < 0 ? (winner.loan || 0) + Math.abs(winner.money) : winner.loan || 0\n          };\n        }\n        // Update losers' money and loans\n        const loser = result.losers.find(l => l.socketId === p.socketId);\n        if (loser) {\n          return {\n            ...p,\n            money: loser.money < 0 ? 0 : loser.money,\n            loan: loser.money < 0 ? (loser.loan || 0) + Math.abs(loser.money) : loser.loan || 0\n          };\n        }\n        return p;\n      });\n      setPlayers(updatedPlayers);\n\n      // Update current player's money and loan if they were involved\n      if (player.socketId === result.landingPlayer.socketId) {\n        setPlayer(prev => ({\n          ...prev,\n          money: result.landingPlayer.money < 0 ? 0 : result.landingPlayer.money,\n          loan: result.landingPlayer.money < 0 ? (result.landingPlayer.loan || 0) + Math.abs(result.landingPlayer.money) : result.landingPlayer.loan || 0\n        }));\n      } else {\n        const winner = result.winners.find(w => w.socketId === player.socketId);\n        if (winner) {\n          setPlayer(prev => ({\n            ...prev,\n            money: winner.money < 0 ? 0 : winner.money,\n            loan: winner.money < 0 ? (winner.loan || 0) + Math.abs(winner.money) : winner.loan || 0\n          }));\n        }\n        const loser = result.losers.find(l => l.socketId === player.socketId);\n        if (loser) {\n          setPlayer(prev => ({\n            ...prev,\n            money: loser.money < 0 ? 0 : loser.money,\n            loan: loser.money < 0 ? (loser.loan || 0) + Math.abs(loser.money) : loser.loan || 0\n          }));\n        }\n      }\n\n      // Add RPS result to game events with loan information\n      result.winners.forEach(winner => {\n        result.losers.forEach(loser => {\n          const message = `${winner.name} won against ${loser.name} in RPS (${winner.choice} vs ${loser.choice}). ${winner.name} now has $${winner.money.toLocaleString()}${winner.loan ? ` and $${winner.loan.toLocaleString()} loan` : ''} and ${loser.name} has $${loser.money.toLocaleString()}${loser.loan ? ` and $${loser.loan.toLocaleString()} loan` : ''}. ${winner.name} drew $${winner.drawnAmount.toLocaleString()} from ${loser.name}.`;\n          setGameEvents(prev => [...prev, {\n            message\n          }]);\n        });\n      });\n\n      // Clear game state after a delay to show the result\n      setTimeout(() => {\n        setRpsGame(null);\n        setRpsResult(null);\n        setRpsChoice(null);\n      }, 3000);\n    });\n    socket.on('stonePaperScissorsTie', ({\n      landingPlayerId,\n      tiedPlayerId,\n      tiedPlayerName,\n      maxAmount,\n      gameId\n    }) => {\n      console.log('[RPS] Tie resolution:', {\n        landingPlayerId,\n        tiedPlayerId,\n        tiedPlayerName,\n        maxAmount,\n        gameId\n      });\n      if ((player === null || player === void 0 ? void 0 : player.socketId) === landingPlayerId) {\n        setRpsTieAmount({\n          maxAmount,\n          gameId,\n          tiedPlayerId,\n          tiedPlayerName\n        });\n      }\n    });\n    socket.on('stonePaperScissorsTieResolved', result => {\n      console.log('[RPS] Tie resolved:', result);\n\n      // Update players' money in the game state\n      const updatedPlayers = players.map(p => {\n        if (p.socketId === result.landingPlayer.socketId) {\n          return {\n            ...p,\n            money: result.landingPlayer.money\n          };\n        }\n        if (p.socketId === result.tiedPlayer.socketId) {\n          return {\n            ...p,\n            money: result.tiedPlayer.money\n          };\n        }\n        return p;\n      });\n      setPlayers(updatedPlayers);\n\n      // Update current player's money if they were involved\n      if ((player === null || player === void 0 ? void 0 : player.socketId) === result.landingPlayer.socketId) {\n        setPlayer(prev => ({\n          ...prev,\n          money: result.landingPlayer.money\n        }));\n      } else if ((player === null || player === void 0 ? void 0 : player.socketId) === result.tiedPlayer.socketId) {\n        setPlayer(prev => ({\n          ...prev,\n          money: result.tiedPlayer.money\n        }));\n      }\n\n      // Add tie resolution to game events\n      const message = `${result.landingPlayer.name} and ${result.tiedPlayer.name} tied in RPS. ${result.landingPlayer.name} drew $${result.drawnAmount.toLocaleString()} from ${result.tiedPlayer.name}. ${result.landingPlayer.name} now has $${result.landingPlayer.money.toLocaleString()} and ${result.tiedPlayer.name} has $${result.tiedPlayer.money.toLocaleString()}.`;\n      setGameEvents(prev => [...prev, {\n        message\n      }]);\n\n      // If there are remaining ties, keep the game state\n      if (result.remainingTies > 0) {\n        setRpsTieAmount(null);\n      } else {\n        // Clear all RPS state if no more ties to resolve\n        setRpsGame(null);\n        setRpsResult(null);\n        setRpsChoice(null);\n        setRpsTieAmount(null);\n      }\n    });\n    return () => {\n      socket.off('purchaseSuccess');\n      socket.off('purchaseFailed');\n      socket.off('rentPaid');\n      socket.off('playerMoved');\n      socket.off('rentBonus');\n      socket.off('startBonus');\n      socket.off('casinoResult');\n      socket.off('roadCashResult');\n      socket.off('stonePaperScissorsStart');\n      socket.off('stonePaperScissorsResult');\n      socket.off('stonePaperScissorsTie');\n      socket.off('stonePaperScissorsTieResolved');\n      socket.off('tradeAccepted');\n    };\n  }, [socket, player, players, setPlayer, setPlayers]);\n\n  // Update inCasino state when tile changes\n  useEffect(() => {\n    const isCasinoTile = (tileMeta === null || tileMeta === void 0 ? void 0 : tileMeta.id) === 16;\n    setInCasino(isCasinoTile);\n    if (isCasinoTile) {\n      setHasCasinoPlayed(false);\n    }\n  }, [tileMeta]);\n\n  // Reset casino states when turn ends\n  useEffect(() => {\n    if (!isMyTurn) {\n      setInCasino(false);\n      setHasCasinoPlayed(false);\n    }\n  }, [isMyTurn]);\n  const handleBuy = () => {\n    console.log('[GameScreen] handleBuy invoked');\n    setError(null);\n    socket.emit('buyProperty');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'relative',\n      minHeight: '100vh',\n      overflow: 'hidden'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        right: 0,\n        top: 0,\n        height: '100vh',\n        width: activeSidePanel ? '600px' : '120px',\n        zIndex: 1000,\n        transition: 'width 0.3s ease',\n        display: 'flex'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '120px',\n          height: '100%',\n          display: 'flex',\n          flexDirection: 'column',\n          gap: '10px',\n          padding: '30px 0',\n          backgroundColor: 'rgba(0, 0, 0, 0.85)',\n          borderLeft: '4px solid rgb(52, 52, 52)'\n        },\n        children: Object.entries(panelConfigs).map(([panelId, config], index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => setActiveSidePanel(activeSidePanel === panelId ? null : panelId),\n          style: {\n            width: '100%',\n            height: '150px',\n            backgroundColor: activeSidePanel === panelId ? config.color + '44' : 'transparent',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            cursor: 'pointer',\n            transition: 'all 0.3s ease',\n            borderLeft: activeSidePanel === panelId ? `4px solid ${config.color}` : 'none'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              color: 'white',\n              fontSize: '1.2em',\n              width: '100%',\n              padding: '0 10px',\n              textAlign: 'center'\n            },\n            children: config.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 861,\n            columnNumber: 15\n          }, this)\n        }, panelId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 846,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 835,\n        columnNumber: 9\n      }, this), Object.entries(panelConfigs).map(([panelId, config]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          left: '120px',\n          top: '0',\n          width: '480px',\n          height: '100vh',\n          backgroundColor: `${config.color}dd`,\n          transform: activeSidePanel === panelId ? 'translateX(0)' : 'translateX(100%)',\n          transition: 'transform 0.3s ease',\n          padding: '20px',\n          color: 'white',\n          overflowY: 'auto',\n          display: 'flex',\n          flexDirection: 'column'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            marginBottom: '20px'\n          },\n          children: config.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 897,\n          columnNumber: 13\n        }, this), panelId === 'info' && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: 'calc(100vh - 250px)',\n            overflowY: 'auto',\n            padding: '15px',\n            display: 'flex',\n            flexDirection: 'column-reverse',\n            backgroundColor: 'rgba(0, 0, 0, 0.4)',\n            borderRadius: '8px',\n            gap: '15px'\n          },\n          children: gameEvents.map((event, index) => {\n            // Process the message to color-code money amounts\n            const message = event.message.replace(/\\$(\\d+,?\\d*)/g, (match, amount) => {\n              // Determine if this is a gain or loss\n              const isGain = event.message.includes('received') || event.message.includes('won') || event.message.includes('bonus');\n              const isLoss = event.message.includes('paid') || event.message.includes('lost');\n              return `<span style=\"color: ${isGain ? '#4CAF50' : isLoss ? '#f44336' : 'white'}\">${match}</span>`;\n            });\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                backgroundColor: 'rgba(0, 0, 0, 0.6)',\n                padding: '12px 15px',\n                borderRadius: '8px',\n                fontSize: '1.2em',\n                lineHeight: '1.4'\n              },\n              dangerouslySetInnerHTML: {\n                __html: message\n              }\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 927,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 900,\n          columnNumber: 15\n        }, this), panelId === 'bank' && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              backgroundColor: 'rgba(0, 0, 0, 0.33)',\n              padding: '20px',\n              borderRadius: '8px',\n              marginTop: '70px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              style: {\n                marginBottom: '15px',\n                fontSize: '1em'\n              },\n              children: \"Borrow Money\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 951,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                alignItems: 'center',\n                gap: '10px',\n                fontSize: '1em',\n                marginBottom: '20px',\n                justifyContent: 'center',\n                alignItems: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setBorrowAmount(Math.max(500, borrowAmount - 500)),\n                style: {\n                  padding: '8px 12px',\n                  fontSize: '1.7em',\n                  cursor: 'pointer',\n                  backgroundColor: 'rgba(255, 255, 255, 0.2)',\n                  border: 'none',\n                  color: 'white',\n                  borderRadius: '4px'\n                },\n                children: \"-\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 961,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  padding: '8px 16px',\n                  backgroundColor: 'rgba(255, 255, 255, 0.15)',\n                  borderRadius: '4px',\n                  minWidth: '100px',\n                  textAlign: 'center',\n                  fontSize: '1.7em'\n                },\n                children: [\"$\", borrowAmount]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 975,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setBorrowAmount(Math.min(100000, borrowAmount + 500)),\n                style: {\n                  padding: '8px 12px',\n                  fontSize: '1.7em',\n                  cursor: 'pointer',\n                  backgroundColor: 'rgba(255, 255, 255, 0.2)',\n                  border: 'none',\n                  color: 'white',\n                  borderRadius: '4px'\n                },\n                children: \"+\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 985,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 952,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                if (socket) {\n                  socket.emit('borrowMoney', {\n                    amount: borrowAmount\n                  });\n                  setBorrowAmount(500); // Reset to default\n                }\n              },\n              style: {\n                width: '100%',\n                padding: '12px',\n                backgroundColor: 'rgba(255, 255, 255, 0.3)',\n                border: 'none',\n                color: 'white',\n                borderRadius: '4px',\n                cursor: 'pointer',\n                fontSize: '1.1em',\n                transition: 'background-color 0.2s'\n              },\n              children: \"Borrow\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1000,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 945,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              backgroundColor: 'rgba(0, 0, 0, 0.33)',\n              padding: '20px',\n              borderRadius: '8px',\n              marginTop: '20px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              style: {\n                marginBottom: '15px'\n              },\n              children: \"Pay Off Loan\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1030,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                gap: '10px',\n                marginBottom: '20px',\n                alignItems: 'center',\n                justifyContent: 'center',\n                fontSize: '1em'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setPayoffAmount(Math.max(500, payoffAmount - 500)),\n                disabled: !(player !== null && player !== void 0 && player.loan),\n                style: {\n                  padding: '8px 12px',\n                  fontSize: '1.2em',\n                  cursor: player !== null && player !== void 0 && player.loan ? 'pointer' : 'not-allowed',\n                  backgroundColor: player !== null && player !== void 0 && player.loan ? 'rgba(255, 255, 255, 0.2)' : 'rgba(255, 255, 255, 0.1)',\n                  border: 'none',\n                  color: 'white',\n                  borderRadius: '4px',\n                  fontSize: '1.7em'\n                },\n                children: \"-\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1039,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  padding: '8px 16px',\n                  backgroundColor: 'rgba(255, 255, 255, 0.15)',\n                  borderRadius: '4px',\n                  minWidth: '100px',\n                  textAlign: 'center',\n                  fontSize: '1.7em'\n                },\n                children: [\"$\", Math.min(payoffAmount, (player === null || player === void 0 ? void 0 : player.loan) || 0)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1055,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setPayoffAmount(Math.min((player === null || player === void 0 ? void 0 : player.loan) || 0, payoffAmount + 500)),\n                disabled: !(player !== null && player !== void 0 && player.loan),\n                style: {\n                  padding: '8px 12px',\n                  fontSize: '1.7em',\n                  cursor: player !== null && player !== void 0 && player.loan ? 'pointer' : 'not-allowed',\n                  backgroundColor: player !== null && player !== void 0 && player.loan ? 'rgba(255, 255, 255, 0.2)' : 'rgba(255, 255, 255, 0.1)',\n                  border: 'none',\n                  color: 'white',\n                  borderRadius: '4px'\n                },\n                children: \"+\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1065,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1031,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                if (socket && player !== null && player !== void 0 && player.loan && (player === null || player === void 0 ? void 0 : player.money) >= payoffAmount) {\n                  socket.emit('payoffLoan', {\n                    amount: Math.min(payoffAmount, player.loan)\n                  });\n                  setPayoffAmount(1000); // Reset to default\n                }\n              },\n              disabled: !(player !== null && player !== void 0 && player.loan) || (player === null || player === void 0 ? void 0 : player.money) < payoffAmount,\n              style: {\n                width: '100%',\n                padding: '12px',\n                backgroundColor: player !== null && player !== void 0 && player.loan && (player === null || player === void 0 ? void 0 : player.money) >= payoffAmount ? 'rgba(255, 255, 255, 0.3)' : 'rgba(255, 255, 255, 0.1)',\n                border: 'none',\n                color: 'white',\n                borderRadius: '4px',\n                cursor: player !== null && player !== void 0 && player.loan && (player === null || player === void 0 ? void 0 : player.money) >= payoffAmount ? 'pointer' : 'not-allowed',\n                fontSize: '1.1em',\n                transition: 'background-color 0.2s'\n              },\n              children: \"Pay Off\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1081,\n              columnNumber: 19\n            }, this), (player === null || player === void 0 ? void 0 : player.money) < payoffAmount && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                color: '#ff6b6b',\n                marginTop: '10px',\n                textAlign: 'center',\n                fontSize: '0.9em'\n              },\n              children: \"Insufficient funds\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1106,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1024,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: '20px',\n              padding: '20px',\n              backgroundColor: 'rgba(0, 0, 0, 0.33)',\n              borderRadius: '8px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Current Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1124,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginTop: '10px',\n                fontSize: '1.2em'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginBottom: '5px'\n                },\n                children: [\"Money: $\", (player === null || player === void 0 ? void 0 : player.money) || 0]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1129,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\" Loan: $\", (player === null || player === void 0 ? void 0 : player.loan) || 0]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1130,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1125,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1118,\n            columnNumber: 17\n          }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: '#ff6b6b',\n              marginTop: '10px',\n              textAlign: 'center'\n            },\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1134,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 943,\n          columnNumber: 15\n        }, this), panelId === 'chat' && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: '100%',\n            padding: '20px'\n          },\n          children: /*#__PURE__*/_jsxDEV(Chat, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1149,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1145,\n          columnNumber: 15\n        }, this), panelId === 'trade' && /*#__PURE__*/_jsxDEV(TradePanel, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1153,\n          columnNumber: 15\n        }, this)]\n      }, panelId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 879,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 824,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        minHeight: '100vh',\n        paddingRight: activeSidePanel ? '600px' : '120px',\n        transition: 'padding-right 0.3s ease'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1,\n          display: 'flex',\n          flexDirection: 'row',\n          alignItems: 'center',\n          justifyContent: 'center',\n          position: 'relative',\n          padding: '20px',\n          paddingBottom: '300px' // Space for footer\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'relative',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            width: '100%',\n            height: '100%',\n            minHeight: '600px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'relative',\n              margin: '200px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Board, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1191,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(PlayerStats, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1192,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1187,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1178,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'fixed',\n          bottom: 0,\n          left: 0,\n          right: activeSidePanel ? '600px' : '120px',\n          height: '300px',\n          backgroundColor: 'rgba(0, 0, 0, 0.9)',\n          borderTop: '2px solid #666',\n          transition: 'right 0.3s ease',\n          display: 'flex',\n          zIndex: 100\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: 1,\n            position: 'relative',\n            borderRight: '2px solid #666',\n            padding: '20px',\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            justifyContent: 'center',\n            background: 'rgba(60, 60, 60, 0.3)',\n            overflow: 'hidden'\n          },\n          children: [isMyTurn && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: Dicebox,\n              alt: \"Dice Board\",\n              style: {\n                position: 'absolute',\n                top: 0,\n                left: 0,\n                width: '100%',\n                height: '100%',\n                objectFit: 'fill',\n                objectPosition: 'center',\n                pointerEvents: 'none'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1225,\n              columnNumber: 17\n            }, this), testRollMode && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                position: 'absolute',\n                top: '50%',\n                left: '50%',\n                transform: 'translate(-50%, -50%)',\n                backgroundColor: 'rgba(0, 0, 0, 0.8)',\n                color: '#fff',\n                padding: '8px 16px',\n                borderRadius: '4px',\n                zIndex: 100\n              },\n              children: testRollInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1240,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(DiceRoller, {\n            testRollMode: testRollMode,\n            hasCasinoPlayed: hasCasinoPlayed,\n            style: {\n              position: 'relative',\n              zIndex: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1256,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: 1,\n            borderRight: '2px solid #666',\n            padding: '20px',\n            display: 'flex',\n            flexDirection: 'column',\n            background: 'rgba(60, 60, 60, 0.3)'\n          },\n          children: /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1272,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1264,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: 1,\n            padding: '20px',\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            justifyContent: 'center',\n            background: 'rgba(60, 60, 60, 0.3)'\n          },\n          children: (_tileMeta$name2 => {\n            // Show RPS game if active\n            if (rpsGame) {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  flexDirection: 'column',\n                  alignItems: 'center',\n                  gap: '15px'\n                },\n                children: rpsResult ?\n                /*#__PURE__*/\n                // Show result for multiple players\n                _jsxDEV(\"div\", {\n                  style: {\n                    textAlign: 'center',\n                    color: '#fff',\n                    fontSize: '1.4em'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [rpsResult.landingPlayer.name, \"'s choice: \", rpsResult.landingPlayer.choice]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1302,\n                    columnNumber: 25\n                  }, this), rpsResult.winners.map(winner => /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      color: '#f44336'\n                    },\n                    children: [\"Lost against \", winner.name, \" (\", winner.choice, \")\"]\n                  }, winner.socketId, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1306,\n                    columnNumber: 27\n                  }, this)), rpsResult.losers.map(loser => /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      color: '#4CAF50'\n                    },\n                    children: [\"Won against \", loser.name, \" (\", loser.choice, \")\"]\n                  }, loser.socketId, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1311,\n                    columnNumber: 27\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1297,\n                  columnNumber: 23\n                }, this) : rpsTieAmount ? /*#__PURE__*/_jsxDEV(RPSTieResolver, {\n                  maxAmount: rpsTieAmount.maxAmount,\n                  gameId: rpsTieAmount.gameId,\n                  tiedPlayerId: rpsTieAmount.tiedPlayerId,\n                  tiedPlayerName: rpsTieAmount.tiedPlayerName,\n                  socket: socket,\n                  onResolved: () => {\n                    setRpsTieAmount(null);\n                    setRpsGame(null);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1317,\n                  columnNumber: 23\n                }, this) :\n                /*#__PURE__*/\n                // Show RPS buttons for all involved players\n                _jsxDEV(\"div\", {\n                  style: {\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'center',\n                    gap: '15px'\n                  },\n                  children: [((player === null || player === void 0 ? void 0 : player.socketId) === rpsGame.landingPlayer.socketId || rpsGame.closestPlayers.some(p => p.socketId === (player === null || player === void 0 ? void 0 : player.socketId))) && !rpsChoice && /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        color: '#fff',\n                        fontSize: '1.2em',\n                        textAlign: 'center'\n                      },\n                      children: (player === null || player === void 0 ? void 0 : player.socketId) === rpsGame.landingPlayer.socketId ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                        children: [\"Playing against \", rpsGame.closestPlayers.map(p => p.name).join(', '), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1343,\n                          columnNumber: 35\n                        }, this), \"Choose your move:\"]\n                      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                        children: [\"Playing against \", rpsGame.landingPlayer.name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1348,\n                          columnNumber: 35\n                        }, this), \"Choose your move:\"]\n                      }, void 0, true)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1339,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        display: 'flex',\n                        gap: '10px'\n                      },\n                      children: ['rock', 'paper', 'scissors'].map(choice => /*#__PURE__*/_jsxDEV(\"button\", {\n                        onClick: () => {\n                          setRpsChoice(choice);\n                          socket.emit('stonePaperScissorsChoice', {\n                            choice,\n                            gameId: rpsGame.gameId\n                          });\n                        },\n                        style: {\n                          padding: '12px 24px',\n                          fontSize: '1.1em',\n                          backgroundColor: '#2196F3',\n                          color: 'white',\n                          border: 'none',\n                          borderRadius: '4px',\n                          cursor: 'pointer',\n                          textTransform: 'capitalize'\n                        },\n                        children: choice\n                      }, choice, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1357,\n                        columnNumber: 33\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1352,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true), rpsChoice && /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      color: '#fff',\n                      fontSize: '1.2em'\n                    },\n                    children: [\"You chose: \", rpsChoice]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1384,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1330,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1289,\n                columnNumber: 19\n              }, this);\n            }\n\n            // Show \"Your Turn\" for current player before landing\n            if (isMyTurn && !movementDone) {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  height: '100%',\n                  color: '#fff',\n                  fontSize: '1.6em',\n                  fontWeight: 'bold',\n                  textShadow: '2px 2px 4px rgba(0,0,0,0.5)'\n                },\n                children: \"Your Turn\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1397,\n                columnNumber: 19\n              }, this);\n            }\n\n            // Buy Property\n            if (isMyTurn && (tileMeta === null || tileMeta === void 0 ? void 0 : tileMeta.type) === 'property' && !players.some(p => p.properties.includes(tileMeta === null || tileMeta === void 0 ? void 0 : tileMeta.id))) {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  flexDirection: 'column',\n                  alignItems: 'center',\n                  gap: '10px'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: handleBuy,\n                  disabled: player.money < tileMeta.cost || (player.loan || 0) > 10000,\n                  style: {\n                    padding: '15px 30px',\n                    // Increased padding\n                    fontSize: '1.4em',\n                    // Increased font size\n                    backgroundColor: player.money >= tileMeta.cost && (player.loan || 0) <= 10000 ? '#4CAF50' : '#ccc',\n                    color: player.money >= tileMeta.cost && (player.loan || 0) <= 10000 ? 'white' : '#ff0000',\n                    border: 'none',\n                    borderRadius: '12px',\n                    // Increased border radius\n                    cursor: player.money >= tileMeta.cost && (player.loan || 0) <= 10000 ? 'pointer' : 'not-allowed',\n                    fontWeight: 'bold',\n                    boxShadow: '0 4px 8px rgba(0,0,0,0.2)',\n                    // Added shadow\n                    transition: 'transform 0.2s',\n                    ':hover': {\n                      transform: 'scale(1.05)'\n                    }\n                  },\n                  children: [\"Buy ($\", tileMeta.cost, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1422,\n                  columnNumber: 21\n                }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    color: 'tomato',\n                    margin: 0\n                  },\n                  children: error\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1444,\n                  columnNumber: 23\n                }, this), (player.loan || 0) > 10000 && /*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    color: 'tomato',\n                    margin: 0\n                  },\n                  children: \"Cannot buy property when loan exceeds $10,000\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1447,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1416,\n                columnNumber: 19\n              }, this);\n            }\n\n            // Road Cash Game\n            if (isMyTurn && (tileMeta === null || tileMeta === void 0 ? void 0 : tileMeta.id) === 22) {\n              return /*#__PURE__*/_jsxDEV(RoadCash, {\n                isMyTurn: isMyTurn,\n                socket: socket\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1455,\n                columnNumber: 24\n              }, this);\n            }\n\n            // Casino\n            if (inCasino && isMyTurn) {\n              return /*#__PURE__*/_jsxDEV(CasinoBetting, {\n                isMyTurn: isMyTurn,\n                currentMoney: (player === null || player === void 0 ? void 0 : player.money) || 0,\n                socket: socket,\n                player: player,\n                onCasinoPlayed: () => setHasCasinoPlayed(true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1461,\n                columnNumber: 19\n              }, this);\n            }\n\n            // Corner Choice\n            if (isMyTurn && tileMeta !== null && tileMeta !== void 0 && (_tileMeta$name2 = tileMeta.name) !== null && _tileMeta$name2 !== void 0 && _tileMeta$name2.toLowerCase().includes('choose corner')) {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'grid',\n                  gridTemplateColumns: '1fr 1fr',\n                  gridTemplateRows: '1fr 1fr',\n                  gap: '20px',\n                  width: '100%',\n                  maxWidth: '600px',\n                  padding: '20px',\n                  margin: '0 auto'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => {\n                    socket.emit('teleport', {\n                      toTile: 1,\n                      prevTile: 30\n                    });\n                    setError(null);\n                    setHasChosenCorner(true);\n                  },\n                  style: {\n                    margin: 0,\n                    padding: 0,\n                    border: '3px solid #666',\n                    borderRadius: '12px',\n                    backgroundImage: `url(${startIcon})`,\n                    backgroundSize: '80%',\n                    backgroundRepeat: 'no-repeat',\n                    backgroundPosition: 'center 40%',\n                    cursor: 'pointer',\n                    display: 'flex',\n                    alignItems: 'flex-end',\n                    justifyContent: 'center',\n                    width: '100%',\n                    height: '100%',\n                    minHeight: '180px',\n                    position: 'relative',\n                    backgroundColor: 'rgba(255, 255, 255, 0.15)',\n                    transition: 'transform 0.2s, background-color 0.2s',\n                    ':hover': {\n                      transform: 'scale(1.02)',\n                      backgroundColor: 'rgba(255, 255, 255, 0.2)'\n                    }\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      padding: '8px 16px',\n                      backgroundColor: 'rgba(0,0,0,0.6)',\n                      borderRadius: '0 0 9px 9px',\n                      color: '#fff',\n                      fontWeight: 'bold',\n                      fontSize: '1.4em',\n                      textShadow: '2px 2px 4px rgba(0,0,0,0.7)',\n                      position: 'absolute',\n                      bottom: 0,\n                      width: '100%',\n                      textAlign: 'center'\n                    },\n                    children: \"Start\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1515,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1484,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => {\n                    socket.emit('teleport', {\n                      toTile: 22,\n                      prevTile: 21\n                    });\n                    setError(null);\n                    setHasChosenCorner(true);\n                  },\n                  style: {\n                    margin: 0,\n                    padding: 0,\n                    border: '3px solid #666',\n                    borderRadius: '12px',\n                    backgroundImage: `url(${roadIcon})`,\n                    backgroundSize: '80%',\n                    backgroundRepeat: 'no-repeat',\n                    backgroundPosition: 'center 40%',\n                    cursor: 'pointer',\n                    display: 'flex',\n                    alignItems: 'flex-end',\n                    justifyContent: 'center',\n                    width: '100%',\n                    height: '100%',\n                    minHeight: '180px',\n                    position: 'relative',\n                    backgroundColor: 'rgba(255, 255, 255, 0.15)',\n                    transition: 'transform 0.2s, background-color 0.2s',\n                    ':hover': {\n                      transform: 'scale(1.02)',\n                      backgroundColor: 'rgba(255, 255, 255, 0.2)'\n                    }\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      padding: '8px 16px',\n                      backgroundColor: 'rgba(0,0,0,0.6)',\n                      borderRadius: '0 0 9px 9px',\n                      color: '#fff',\n                      fontWeight: 'bold',\n                      fontSize: '1.4em',\n                      textShadow: '2px 2px 4px rgba(0,0,0,0.7)',\n                      position: 'absolute',\n                      bottom: 0,\n                      width: '100%',\n                      textAlign: 'center'\n                    },\n                    children: \"Road\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1560,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1529,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => {\n                    socket.emit('teleport', {\n                      toTile: 7,\n                      prevTile: 6\n                    });\n                    setError(null);\n                    setHasChosenCorner(true);\n                  },\n                  style: {\n                    margin: 0,\n                    padding: 0,\n                    border: '3px solid #666',\n                    borderRadius: '12px',\n                    backgroundImage: `url(${hotelIcon})`,\n                    backgroundSize: '80%',\n                    backgroundRepeat: 'no-repeat',\n                    backgroundPosition: 'center 40%',\n                    cursor: 'pointer',\n                    display: 'flex',\n                    alignItems: 'flex-end',\n                    justifyContent: 'center',\n                    width: '100%',\n                    height: '100%',\n                    minHeight: '180px',\n                    position: 'relative',\n                    backgroundColor: 'rgba(255, 255, 255, 0.15)',\n                    transition: 'transform 0.2s, background-color 0.2s',\n                    ':hover': {\n                      transform: 'scale(1.02)',\n                      backgroundColor: 'rgba(255, 255, 255, 0.2)'\n                    }\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      padding: '8px 16px',\n                      backgroundColor: 'rgba(0,0,0,0.6)',\n                      borderRadius: '0 0 9px 9px',\n                      color: '#fff',\n                      fontWeight: 'bold',\n                      fontSize: '1.4em',\n                      textShadow: '2px 2px 4px rgba(0,0,0,0.7)',\n                      position: 'absolute',\n                      bottom: 0,\n                      width: '100%',\n                      textAlign: 'center'\n                    },\n                    children: \"Hotel\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1605,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1574,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => {\n                    socket.emit('teleport', {\n                      toTile: 16,\n                      prevTile: 15\n                    });\n                    setError(null);\n                    setHasChosenCorner(true);\n                  },\n                  style: {\n                    margin: 0,\n                    padding: 0,\n                    border: '3px solid #666',\n                    borderRadius: '12px',\n                    backgroundImage: `url(${casinoIcon})`,\n                    backgroundSize: '80%',\n                    backgroundRepeat: 'no-repeat',\n                    backgroundPosition: 'center 40%',\n                    cursor: 'pointer',\n                    display: 'flex',\n                    alignItems: 'flex-end',\n                    justifyContent: 'center',\n                    width: '100%',\n                    height: '100%',\n                    minHeight: '180px',\n                    position: 'relative',\n                    backgroundColor: 'rgba(255, 255, 255, 0.15)',\n                    transition: 'transform 0.2s, background-color 0.2s',\n                    ':hover': {\n                      transform: 'scale(1.02)',\n                      backgroundColor: 'rgba(255, 255, 255, 0.2)'\n                    }\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      padding: '8px 16px',\n                      backgroundColor: 'rgba(0,0,0,0.6)',\n                      borderRadius: '0 0 9px 9px',\n                      color: '#fff',\n                      fontWeight: 'bold',\n                      fontSize: '1.4em',\n                      textShadow: '2px 2px 4px rgba(0,0,0,0.7)',\n                      position: 'absolute',\n                      bottom: 0,\n                      width: '100%',\n                      textAlign: 'center'\n                    },\n                    children: \"Casino\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1650,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1619,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1474,\n                columnNumber: 19\n              }, this);\n            }\n\n            // Show error message if any\n            if (error) {\n              return /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  color: 'tomato',\n                  margin: 0\n                },\n                children: error\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1671,\n                columnNumber: 19\n              }, this);\n            }\n\n            // Show empty state for non-turn players or when no action is needed\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center',\n                justifyContent: 'center',\n                height: '100%',\n                gap: '20px'\n              },\n              children: rpsGame && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  flexDirection: 'column',\n                  alignItems: 'center',\n                  gap: '15px'\n                },\n                children: rpsResult ?\n                /*#__PURE__*/\n                // Show result for multiple players\n                _jsxDEV(\"div\", {\n                  style: {\n                    textAlign: 'center',\n                    color: '#fff',\n                    fontSize: '1.4em'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [rpsResult.landingPlayer.name, \"'s choice: \", rpsResult.landingPlayer.choice]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1699,\n                    columnNumber: 27\n                  }, this), rpsResult.winners.map(winner => /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      color: '#f44336'\n                    },\n                    children: [\"Lost against \", winner.name, \" (\", winner.choice, \")\"]\n                  }, winner.socketId, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1703,\n                    columnNumber: 29\n                  }, this)), rpsResult.losers.map(loser => /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      color: '#4CAF50'\n                    },\n                    children: [\"Won against \", loser.name, \" (\", loser.choice, \")\"]\n                  }, loser.socketId, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1708,\n                    columnNumber: 29\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1694,\n                  columnNumber: 25\n                }, this) : rpsTieAmount ? /*#__PURE__*/_jsxDEV(RPSTieResolver, {\n                  maxAmount: rpsTieAmount.maxAmount,\n                  gameId: rpsTieAmount.gameId,\n                  tiedPlayerId: rpsTieAmount.tiedPlayerId,\n                  tiedPlayerName: rpsTieAmount.tiedPlayerName,\n                  socket: socket,\n                  onResolved: () => {\n                    setRpsTieAmount(null);\n                    setRpsGame(null);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1714,\n                  columnNumber: 25\n                }, this) :\n                /*#__PURE__*/\n                // Show RPS buttons for all involved players\n                _jsxDEV(\"div\", {\n                  style: {\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'center',\n                    gap: '15px'\n                  },\n                  children: [((player === null || player === void 0 ? void 0 : player.socketId) === rpsGame.landingPlayer.socketId || rpsGame.closestPlayers.some(p => p.socketId === (player === null || player === void 0 ? void 0 : player.socketId))) && !rpsChoice && /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        color: '#fff',\n                        fontSize: '1.2em',\n                        textAlign: 'center'\n                      },\n                      children: (player === null || player === void 0 ? void 0 : player.socketId) === rpsGame.landingPlayer.socketId ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                        children: [\"Playing against \", rpsGame.closestPlayers.map(p => p.name).join(', '), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1740,\n                          columnNumber: 37\n                        }, this), \"Choose your move:\"]\n                      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                        children: [\"Playing against \", rpsGame.landingPlayer.name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1745,\n                          columnNumber: 37\n                        }, this), \"Choose your move:\"]\n                      }, void 0, true)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1736,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        display: 'flex',\n                        gap: '10px'\n                      },\n                      children: ['rock', 'paper', 'scissors'].map(choice => /*#__PURE__*/_jsxDEV(\"button\", {\n                        onClick: () => {\n                          setRpsChoice(choice);\n                          socket.emit('stonePaperScissorsChoice', {\n                            choice,\n                            gameId: rpsGame.gameId\n                          });\n                        },\n                        style: {\n                          padding: '12px 24px',\n                          fontSize: '1.1em',\n                          backgroundColor: '#2196F3',\n                          color: 'white',\n                          border: 'none',\n                          borderRadius: '4px',\n                          cursor: 'pointer',\n                          textTransform: 'capitalize'\n                        },\n                        children: choice\n                      }, choice, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1754,\n                        columnNumber: 35\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1749,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true), rpsChoice && /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      color: '#fff',\n                      fontSize: '1.2em'\n                    },\n                    children: [\"You chose: \", rpsChoice]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1781,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1727,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1686,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1677,\n              columnNumber: 17\n            }, this);\n          })()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1276,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1198,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1160,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 818,\n    columnNumber: 5\n  }, this);\n}\n_s2(GameScreen, \"ZhabWvAsFlEno20k+6EZ7LdHM7s=\");\n_c2 = GameScreen;\nvar _c, _c2;\n$RefreshReg$(_c, \"CasinoBetting\");\n$RefreshReg$(_c2, \"GameScreen\");","map":{"version":3,"names":["React","useContext","useState","useEffect","bgImage","Dicebox","startIcon","hotelIcon","casinoIcon","roadIcon","Board","DiceRoller","Dashboard","PlayerStats","RoadCash","RPSTieResolver","GameContext","tiles","Chat","TradePanel","jsxDEV","_jsxDEV","Fragment","_Fragment","CasinoBetting","isMyTurn","currentMoney","socket","player","onCasinoPlayed","_s","betAmount","setBetAmount","selectedBet","setSelectedBet","showResult","setShowResult","diceResult","setDiceResult","isActive","setIsActive","handleAmountChange","delta","newAmount","Math","max","min","handleBetSelect","bet","handleRoll","emit","betType","handleCasinoResult","playerId","dice","amount","won","playerMoney","socketId","on","off","style","display","flexDirection","alignItems","justifyContent","height","gap","children","src","alt","width","fileName","_jsxFileName","lineNumber","columnNumber","color","fontWeight","fontSize","padding","backgroundColor","borderRadius","textAlign","border","onClick","disabled","cursor","transition","boxShadow","minWidth","map","textTransform","marginTop","letterSpacing","textShadow","_c","GameScreen","_s2","players","setPlayer","setPlayers","currentPlayerId","movementDone","error","setError","testRollInput","setTestRollInput","testRollMode","setTestRollMode","inCasino","setInCasino","hasCasinoPlayed","setHasCasinoPlayed","hasChosenCorner","setHasChosenCorner","rpsGame","setRpsGame","rpsChoice","setRpsChoice","rpsResult","setRpsResult","rpsTieAmount","setRpsTieAmount","activeSidePanel","setActiveSidePanel","borrowAmount","setBorrowAmount","payoffAmount","setPayoffAmount","gameEvents","setGameEvents","handleBorrowResponse","success","setTimeout","events","event","prev","panelConfigs","info","title","icon","bank","chat","trade","tileMeta","find","t","id","tileId","_tileMeta$name","name","toLowerCase","includes","handleKeyPress","e","key","startsWith","rollNumber","parseInt","slice","isNaN","testRoll","length","window","addEventListener","removeEventListener","console","log","type","cost","money","properties","updated","p","playerName","temporary","propertyId","action","newMoney","prevPlayers","filter","property","payerSocketId","payerMoney","payerLoan","ownerSocketId","ownerMoney","baseRent","multiplier","propertyName","_players$find","_players$find2","updatedPlayers","loan","toLocaleString","marginLeft","playerSocketId","reason","fromPlayer","toPlayer","game","result","landingPlayer","abs","winner","winners","w","loser","losers","l","forEach","message","choice","drawnAmount","landingPlayerId","tiedPlayerId","tiedPlayerName","maxAmount","gameId","tiedPlayer","remainingTies","isCasinoTile","handleBuy","position","minHeight","overflow","right","top","zIndex","borderLeft","Object","entries","panelId","config","index","left","transform","overflowY","marginBottom","replace","match","isGain","isLoss","lineHeight","dangerouslySetInnerHTML","__html","paddingRight","flex","paddingBottom","margin","bottom","borderTop","borderRight","background","objectFit","objectPosition","pointerEvents","_tileMeta$name2","onResolved","closestPlayers","some","join","gridTemplateColumns","gridTemplateRows","maxWidth","toTile","prevTile","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","_c2","$RefreshReg$"],"sources":["C:/Users/addhy/Desktop/Business_web - Copy (2)/client/src/components/GameScreen.js"],"sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\nimport bgImage from '../assets/bg.png';\nimport Dicebox from '../assets/diceBoard.png';\nimport startIcon from '../assets/start.png';\nimport hotelIcon from '../assets/hotel.png';\nimport casinoIcon from '../assets/casino.png';\nimport roadIcon from '../assets/road.png';\nimport Board from './Board';\nimport DiceRoller from './DiceRoller';\nimport Dashboard from './Dashboard';\nimport PlayerStats from './PlayerStats';\nimport RoadCash from './RoadCash';\nimport RPSTieResolver from './RPSTieResolver';\nimport { GameContext } from '../context/GameContext';\nimport { tiles } from '../data/tiles';\nimport Chat from './Chat';\nimport TradePanel from './TradePanel';\n\nconst CasinoBetting = ({ isMyTurn, currentMoney, socket, player, onCasinoPlayed }) => {\n  const [betAmount, setBetAmount] = useState(1000);\n  const [selectedBet, setSelectedBet] = useState(null);\n  const [showResult, setShowResult] = useState(null);\n  const [diceResult, setDiceResult] = useState(null);\n  const [isActive, setIsActive] = useState(true);\n\n  const handleAmountChange = (delta) => {\n    const newAmount = Math.max(1000, Math.min(currentMoney, betAmount + delta));\n    setBetAmount(newAmount);\n  };\n\n  const handleBetSelect = (bet) => {\n    setSelectedBet(bet);\n  };\n\n  const handleRoll = () => {\n    if (selectedBet && betAmount >= 1000 && betAmount <= currentMoney) {\n      socket.emit('casinoRoll', { betAmount, betType: selectedBet });\n    }\n  };\n\n  useEffect(() => {\n    const handleCasinoResult = ({ playerId, dice, amount, won, playerMoney }) => {\n      if (playerId === player.socketId) {\n        setDiceResult(dice);\n        setShowResult({ won, amount });\n        setIsActive(false);\n        onCasinoPlayed();\n      }\n    };\n\n    socket.on('casinoResult', handleCasinoResult);\n    return () => socket.off('casinoResult', handleCasinoResult);\n  }, [socket, player.socketId, onCasinoPlayed]);\n\n  // If not active (after result), show result screen\n  if (!isActive) {\n    if (showResult && diceResult) {\n      return (\n        <div style={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n          height: '100%',\n          gap: '20px'\n        }}>\n          <div style={{\n            display: 'flex',\n            gap: '10px',\n            justifyContent: 'center'\n          }}>\n            <img \n              src={`/dice/dice${diceResult[0]}.png`} \n              alt={`Die ${diceResult[0]}`} \n              width={125}\n              height={125}\n            />\n            <img \n              src={`/dice/dice${diceResult[1]}.png`} \n              alt={`Die ${diceResult[1]}`} \n              width={125}\n              height={125}\n            />\n          </div>\n          <div style={{\n            color: showResult.won ? '#4CAF50' : '#f44336',\n            fontWeight: 'bold',\n            fontSize: '1.2em',\n            padding: '15px 25px',\n            backgroundColor: 'rgba(0, 0, 0, 0.6)',\n            borderRadius: '8px',\n            textAlign: 'center'\n          }}>\n            {showResult.won ? `You won $${showResult.amount}!` : `You lost $${showResult.amount}`}\n          </div>\n        </div>\n      );\n    }\n    return null;\n  }\n\n  return (\n    <div style={{\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: '100%',\n      gap: '25px'\n    }}>\n      {/* Bet amount control */}\n      <div style={{\n        display: 'flex',\n        alignItems: 'center',\n        gap: '15px',\n        backgroundColor: 'rgba(0, 0, 0, 0.3)',\n        padding: '15px 20px',\n        borderRadius: '12px',\n        border: '1px solid rgba(255, 255, 255, 0.1)'\n      }}>\n        <button\n          onClick={() => handleAmountChange(-500)}\n          disabled={!isMyTurn || betAmount <= 1000}\n          style={{\n            padding: '12px 20px',\n            fontSize: '1.8em',\n            cursor: isMyTurn ? 'pointer' : 'not-allowed',\n            backgroundColor: isMyTurn && betAmount > 1000 ? '#ff4444' : 'rgba(255, 68, 68, 0.5)',\n            color: 'white',\n            border: 'none',\n            borderRadius: '8px',\n            width: '60px',\n            transition: 'all 0.2s ease',\n            boxShadow: '0 2px 4px rgba(0, 0, 0, 0.2)'\n          }}\n        >\n          -\n        </button>\n        <div style={{\n          padding: '12px 20px',\n          border: '2px solid rgba(255, 255, 255, 0.2)',\n          borderRadius: '8px',\n          minWidth: '150px',\n          textAlign: 'center',\n          fontSize: '1.6em',\n          color: 'white',\n          backgroundColor: 'rgba(0, 0, 0, 0.2)'\n        }}>\n          ${betAmount}\n        </div>\n        <button\n          onClick={() => handleAmountChange(500)}\n          disabled={!isMyTurn || betAmount >= currentMoney}\n          style={{\n            padding: '12px 20px',\n            fontSize: '1.8em',\n            cursor: isMyTurn ? 'pointer' : 'not-allowed',\n            backgroundColor: isMyTurn && betAmount < currentMoney ? '#4CAF50' : 'rgba(76, 175, 80, 0.5)',\n            color: 'white',\n            border: 'none',\n            borderRadius: '8px',\n            width: '60px',\n            transition: 'all 0.2s ease',\n            boxShadow: '0 2px 4px rgba(0, 0, 0, 0.2)'\n          }}\n        >\n          +\n        </button>\n      </div>\n\n      {/* Bet type buttons */}\n      <div style={{\n        display: 'flex',\n        gap: '15px',\n        backgroundColor: 'rgba(0, 0, 0, 0.3)',\n        padding: '15px 20px',\n        borderRadius: '12px',\n        border: '1px solid rgba(255, 255, 255, 0.1)'\n      }}>\n        {['above', '7', 'below'].map(bet => (\n          <button\n            key={bet}\n            onClick={() => handleBetSelect(bet)}\n            disabled={!isMyTurn}\n            style={{\n              padding: '15px 25px',\n              backgroundColor: selectedBet === bet ? '#2196F3' : 'rgba(33, 150, 243, 0.3)',\n              color: '#fff',\n              border: selectedBet === bet ? '2px solid #90CAF9' : '1px solid rgba(255, 255, 255, 0.1)',\n              borderRadius: '8px',\n              cursor: isMyTurn ? 'pointer' : 'not-allowed',\n              fontSize: '1.4em',\n              fontWeight: 'bold',\n              textTransform: 'uppercase',\n              minWidth: '120px',\n              transition: 'all 0.2s ease',\n              boxShadow: selectedBet === bet ? '0 0 10px rgba(33, 150, 243, 0.5)' : 'none'\n            }}\n          >\n            {bet}\n          </button>\n        ))}\n      </div>\n\n      {/* Roll button */}\n      <button\n        onClick={handleRoll}\n        disabled={!isMyTurn || !selectedBet || betAmount < 1000 || betAmount > currentMoney}\n        style={{\n          padding: '15px 40px',\n          backgroundColor: isMyTurn && selectedBet && betAmount >= 1000 && betAmount <= currentMoney \n            ? '#FFA000' \n            : 'rgba(255, 160, 0, 0.3)',\n          color: '#fff',\n          border: 'none',\n          borderRadius: '12px',\n          marginTop: '10px',\n          cursor: isMyTurn && selectedBet ? 'pointer' : 'not-allowed',\n          fontSize: '1.8em',\n          fontWeight: 'bold',\n          letterSpacing: '2px',\n          textTransform: 'uppercase',\n          transition: 'all 0.3s ease',\n          boxShadow: isMyTurn && selectedBet ? '0 4px 15px rgba(255, 160, 0, 0.4)' : 'none',\n          textShadow: '2px 2px 4px rgba(0, 0, 0, 0.3)'\n        }}\n      >\n        Roll\n      </button>\n    </div>\n  );\n};\n\nexport default function GameScreen() {\n  const {\n    player,\n    players,\n    setPlayer,\n    setPlayers,\n    currentPlayerId,\n    socket,\n    movementDone\n  } = useContext(GameContext);\n\n  const isMyTurn = player?.socketId === currentPlayerId;\n  const [error, setError] = useState(null);\n  const [testRollInput, setTestRollInput] = useState('');\n  const [testRollMode, setTestRollMode] = useState(false);\n  const [inCasino, setInCasino] = useState(false);\n  const [hasCasinoPlayed, setHasCasinoPlayed] = useState(false);\n  const [hasChosenCorner, setHasChosenCorner] = useState(false);\n  const [rpsGame, setRpsGame] = useState(null);\n  const [rpsChoice, setRpsChoice] = useState(null);\n  const [rpsResult, setRpsResult] = useState(null);\n  const [rpsTieAmount, setRpsTieAmount] = useState(null);\n  const [activeSidePanel, setActiveSidePanel] = useState(null);\n  const [borrowAmount, setBorrowAmount] = useState(1000);\n  const [payoffAmount, setPayoffAmount] = useState(1000);\n  const [gameEvents, setGameEvents] = useState([]);\n\n  // Add socket event listener for borrow response\n  useEffect(() => {\n    if (!socket) return;\n\n    const handleBorrowResponse = ({ success, error }) => {\n      if (!success && error) {\n        setError(error);\n        setTimeout(() => setError(null), 5000);\n      }\n    };\n\n    socket.on('borrowResponse', handleBorrowResponse);\n\n    return () => {\n      socket.off('borrowResponse', handleBorrowResponse);\n    };\n  }, [socket]);\n\n  // Add socket event listener for game events\n  useEffect(() => {\n    if (!socket) return;\n\n    // Handle initial game events history\n    socket.on('gameEventsHistory', (events) => {\n      setGameEvents(events);\n    });\n\n    // Handle new game events\n    socket.on('gameEvent', (event) => {\n      setGameEvents(prev => [...prev, event]);\n    });\n\n    return () => {\n      socket.off('gameEventsHistory');\n      socket.off('gameEvent');\n    };\n  }, [socket]);\n\n  // Define panel configurations\n  const panelConfigs = {\n    info: {\n      color: '#4CAF50', // Green\n      title: 'Game Events',\n      icon: '📋'\n    },\n    bank: {\n      color: '#2196F3', // Blue\n      title: 'Bank',\n      icon: '💰'\n    },\n    chat: {\n      color: '#9C27B0', // Purple\n      title: 'Chat',\n      icon: '💬'\n    },\n    trade: {\n      color: '#FF9800', // Orange\n      title: 'Trade',\n      icon: '🔄'\n    }\n  };\n\n  // Determine metadata for the current tile\n  const tileMeta = tiles.find(t => t.id === player?.tileId);\n\n  // Reset hasChosenCorner when turn ends or tile changes\n  useEffect(() => {\n    if (!isMyTurn || !tileMeta?.name?.toLowerCase().includes('choose corner')) {\n      setHasChosenCorner(false);\n    }\n  }, [isMyTurn, tileMeta]);\n\n  // Add keyboard listener for test rolls\n  useEffect(() => {\n    const handleKeyPress = (e) => {\n      if (!isMyTurn) return;\n\n      // Build up the test roll input\n      if (e.key === 'Enter' && testRollInput.startsWith('testroll')) {\n        const rollNumber = parseInt(testRollInput.slice(8));\n        if (!isNaN(rollNumber) && rollNumber >= 2 && rollNumber <= 12) {\n          socket.emit('rollDice', { testRoll: rollNumber });\n          setTestRollInput('');\n          setTestRollMode(false);\n        }\n      } else if (e.key === 'Backspace') {\n        setTestRollInput(prev => prev.slice(0, -1));\n      } else if (e.key.length === 1) { // Regular character\n        setTestRollInput(prev => prev + e.key);\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyPress);\n    return () => window.removeEventListener('keydown', handleKeyPress);\n  }, [isMyTurn, testRollInput, socket]);\n\n  // Show current test roll input if active\n  useEffect(() => {\n    if (testRollInput.startsWith('testroll')) {\n      setTestRollMode(true);\n    } else if (testRollInput.length === 0) {\n      setTestRollMode(false);\n    }\n  }, [testRollInput]);\n\n  // Debug logging to trace condition\n  useEffect(() => {\n    console.log('[GameScreen] Debug:', {\n      isMyTurn,\n      movementDone,\n      tileMeta,\n      \"player.tileId\": player?.tileId,\n      \"tileMeta.type\": tileMeta?.type,\n      \"tileMeta.cost\": tileMeta?.cost,\n      \"player.money\": player?.money,\n      testRollMode,\n      testRollInput\n    });\n  }, [isMyTurn, movementDone, tileMeta, player, testRollMode, testRollInput]);\n\n  // Listen for purchase events\n  useEffect(() => {\n    socket.on('purchaseSuccess', ({ socketId, money, properties }) => {\n      console.log('[GameScreen] purchaseSuccess', { socketId, money, properties });\n      const updated = players.map(p =>\n        p.socketId === socketId ? { ...p, money, properties } : p\n      );\n      setPlayers(updated);\n      if (player.socketId === socketId) {\n        setPlayer({ ...player, money, properties });\n      }\n      setError(null);\n    });\n\n    // Add player disconnect handler\n    socket.on('playerDisconnected', ({ playerName, temporary }) => {\n      if (temporary) {\n        setError(`${playerName} temporarily disconnected. They can rejoin with the same name.`);\n        setTimeout(() => setError(null), 5000);\n      }\n    });\n\n    // Add property update handler\n    socket.on('propertyUpdated', ({ playerId, propertyId, action, newMoney }) => {\n      console.log('[GameScreen] propertyUpdated', { playerId, propertyId, action, newMoney });\n      \n      // Update players' properties and money\n      setPlayers(prevPlayers => {\n        return prevPlayers.map(p => {\n          if (p.socketId === playerId) {\n            return {\n              ...p,\n              properties: action === 'add'\n                ? [...(p.properties || []), propertyId]\n                : (p.properties || []).filter(id => id !== propertyId),\n              money: newMoney // Update the player's money\n            };\n          }\n          return p;\n        });\n      });\n\n      // Update current player if they're involved\n      if (player.socketId === playerId) {\n        setPlayer(prev => ({\n          ...prev,\n          properties: action === 'add'\n            ? [...(prev.properties || []), propertyId]\n            : (prev.properties || []).filter(id => id !== propertyId),\n          money: newMoney // Update the current player's money\n        }));\n\n        // Show message when selling property\n        if (action === 'remove') {\n          const property = tiles.find(t => t.id === propertyId);\n          setError(`You sold ${property.name} for $${property.cost}`);\n          setTimeout(() => setError(null), 5000);\n        }\n      }\n    });\n\n    // Add rent payment handler\n    socket.on('rentPaid', ({ payerSocketId, payerMoney, payerLoan, ownerSocketId, ownerMoney, amount, baseRent, multiplier, propertyName }) => {\n      console.log('[GameScreen] rentPaid', { payerSocketId, ownerSocketId, amount });\n      \n      // Update players' money and loan synchronously\n      setPlayers(prevPlayers => {\n        const updatedPlayers = prevPlayers.map(p => {\n          if (p.socketId === payerSocketId) {\n            return { ...p, money: payerMoney, loan: payerLoan };\n          }\n          if (p.socketId === ownerSocketId) {\n            return { ...p, money: ownerMoney };\n          }\n          return p;\n        });\n\n        // Update current player if they're involved\n        if (player.socketId === payerSocketId) {\n          setPlayer(prev => ({ ...prev, money: payerMoney, loan: payerLoan }));\n        } else if (player.socketId === ownerSocketId) {\n          setPlayer(prev => ({ ...prev, money: ownerMoney }));\n        }\n\n        return updatedPlayers;\n      });\n\n      // Show rent payment notification with stylized multiplier\n      setError(\n        <div style={{ \n          display: 'flex', \n          alignItems: 'center', \n          gap: '4px', \n          justifyContent: 'center',\n          fontSize: '1.6em',  \n          padding: '15px',\n          backgroundColor: 'rgba(0, 0, 0, 0.7)',\n          borderRadius: '8px'\n        }}>\n          <span>\n            {`${players.find(p => p.socketId === payerSocketId)?.name} paid rent to ${players.find(p => p.socketId === ownerSocketId)?.name} for ${propertyName} - $${baseRent.toLocaleString()}`}\n          </span>\n          {multiplier > 1 && (\n            <span style={{ \n              color: '#FFA500', \n              fontSize: '1.5em',  \n              fontWeight: 'bold',\n              marginLeft: '8px'\n            }}>\n              {`X${multiplier}`}\n            </span>\n          )}\n        </div>\n      );\n      setTimeout(() => setError(null), 5000);\n    });\n\n    // Add start bonus handler\n    socket.on('startBonus', ({ playerSocketId, newMoney, amount, reason }) => {\n      console.log('[GameScreen] startBonus', { playerSocketId, newMoney, amount, reason });\n      \n      // Update players' money synchronously\n      setPlayers(prevPlayers => {\n        const updatedPlayers = prevPlayers.map(p =>\n          p.socketId === playerSocketId ? { ...p, money: newMoney } : p\n        );\n\n        // Update current player if they got the bonus\n        if (player.socketId === playerSocketId) {\n          setPlayer(prev => ({ ...prev, money: newMoney }));\n          setError(`You received $${amount} for ${reason} Start!`);\n          setTimeout(() => setError(null), 7000);\n        }\n\n        return updatedPlayers;\n      });\n    });\n\n    // Add road cash handler\n    socket.on('roadCashResult', ({ playerSocketId, newMoney, amount }) => {\n      console.log('[GameScreen] roadCashResult', { playerSocketId, newMoney, amount });\n      \n      // Update players' money synchronously\n      setPlayers(prevPlayers => {\n        const updatedPlayers = prevPlayers.map(p =>\n          p.socketId === playerSocketId ? { ...p, money: newMoney } : p\n        );\n\n        // Update current player if they got the money\n        if (player.socketId === playerSocketId) {\n          setPlayer(prev => ({ ...prev, money: newMoney }));\n          setError(`You won $${amount} on the road!`);\n          setTimeout(() => setError(null), 5000);\n        }\n\n        return updatedPlayers;\n      });\n    });\n\n    // Add casino result handler\n    socket.on('casinoResult', ({ playerId, dice, amount, won, playerName, playerMoney }) => {\n      console.log('[GameScreen] casinoResult', { playerId, dice, amount, won, playerName, playerMoney });\n      \n      // Update players' money synchronously\n      setPlayers(prevPlayers => {\n        const updatedPlayers = prevPlayers.map(p =>\n          p.socketId === playerId ? { ...p, money: playerMoney } : p\n        );\n\n        // Update current player if they're involved\n        if (player.socketId === playerId) {\n          setPlayer(prev => ({ ...prev, money: playerMoney }));\n        } else {\n          setError(`${playerName} ${won ? 'won' : 'lost'} $${amount} at the casino!`);\n          setTimeout(() => setError(null), 5000);\n        }\n\n        return updatedPlayers;\n      });\n    });\n\n    // Add trade accepted handler\n    socket.on('tradeAccepted', ({ fromPlayer, toPlayer }) => {\n      console.log('[GameScreen] tradeAccepted', { fromPlayer, toPlayer });\n      \n      // Update players' money and properties synchronously\n      setPlayers(prevPlayers => {\n        const updatedPlayers = prevPlayers.map(p => {\n          if (p.socketId === fromPlayer.socketId) {\n            return { ...p, money: fromPlayer.money, properties: fromPlayer.properties };\n          }\n          if (p.socketId === toPlayer.socketId) {\n            return { ...p, money: toPlayer.money, properties: toPlayer.properties };\n          }\n          return p;\n        });\n\n        // Update current player if they were involved\n        if (player.socketId === fromPlayer.socketId) {\n          setPlayer(prev => ({ ...prev, money: fromPlayer.money, properties: fromPlayer.properties }));\n        } else if (player.socketId === toPlayer.socketId) {\n          setPlayer(prev => ({ ...prev, money: toPlayer.money, properties: toPlayer.properties }));\n        }\n\n        return updatedPlayers;\n      });\n    });\n\n    // Add playerMoved event handler\n    socket.on('playerMoved', ({ playerId, tileId }) => {\n      console.log('[GameScreen] playerMoved', { playerId, tileId });\n      if (playerId === player?.socketId) {\n        setPlayer(prev => ({ ...prev, tileId }));\n      }\n      setPlayers(prev => \n        prev.map(p => p.socketId === playerId ? { ...p, tileId } : p)\n      );\n      // Clear any previous messages when a player moves\n      setError(null);\n    });\n\n    socket.on('purchaseFailed', ({ reason }) => {\n      console.log('[GameScreen] purchaseFailed', reason);\n      if (reason === 'insufficientFunds') {\n        setError(\"You don't have enough money.\");\n      } else if (reason === 'alreadyOwned') {\n        setError('You already own this property.');\n      } else {\n        setError('Cannot buy this property.');\n      }\n      // Clear error message after 5 seconds\n      setTimeout(() => setError(null), 5000);\n    });\n\n    // Add rent bonus handler\n    socket.on('rentBonus', ({ playerSocketId, newMoney, amount, propertyName }) => {\n      console.log('[GameScreen] rentBonus', { playerSocketId, amount });\n      \n      // Update player's money\n      const updated = players.map(p =>\n        p.socketId === playerSocketId ? { ...p, money: newMoney } : p\n      );\n      setPlayers(updated);\n\n      // Update current player if they got the bonus\n      if (player.socketId === playerSocketId) {\n        setPlayer(prev => ({ ...player, money: newMoney }));\n        setError(`You received $${amount} bonus for landing on your property ${propertyName}!`);\n        // Clear bonus message after 5 seconds\n        setTimeout(() => setError(null), 5000);\n      }\n    });\n\n    // Add RPS event listeners\n    socket.on('stonePaperScissorsStart', (game) => {\n      console.log('[RPS] Game started:', game);\n      setRpsGame(game);\n      setRpsChoice(null);\n      setRpsResult(null);\n      setRpsTieAmount(null);\n    });\n\n    socket.on('stonePaperScissorsResult', (result) => {\n      console.log('[RPS] Result received:', result);\n      setRpsResult(result);\n      \n      // Update players' money in the game state\n      const updatedPlayers = players.map(p => {\n        if (p.socketId === result.landingPlayer.socketId) {\n          return { \n            ...p, \n            money: result.landingPlayer.money < 0 ? 0 : result.landingPlayer.money,\n            loan: result.landingPlayer.money < 0 ? \n              (result.landingPlayer.loan || 0) + Math.abs(result.landingPlayer.money) : \n              (result.landingPlayer.loan || 0)\n          };\n        }\n        // Update winners' money and loans\n        const winner = result.winners.find(w => w.socketId === p.socketId);\n        if (winner) {\n          return { \n            ...p, \n            money: winner.money < 0 ? 0 : winner.money,\n            loan: winner.money < 0 ? \n              (winner.loan || 0) + Math.abs(winner.money) : \n              (winner.loan || 0)\n          };\n        }\n        // Update losers' money and loans\n        const loser = result.losers.find(l => l.socketId === p.socketId);\n        if (loser) {\n          return { \n            ...p, \n            money: loser.money < 0 ? 0 : loser.money,\n            loan: loser.money < 0 ? \n              (loser.loan || 0) + Math.abs(loser.money) : \n              (loser.loan || 0)\n          };\n        }\n        return p;\n      });\n      setPlayers(updatedPlayers);\n\n      // Update current player's money and loan if they were involved\n      if (player.socketId === result.landingPlayer.socketId) {\n        setPlayer(prev => ({ \n          ...prev, \n          money: result.landingPlayer.money < 0 ? 0 : result.landingPlayer.money,\n          loan: result.landingPlayer.money < 0 ? \n            (result.landingPlayer.loan || 0) + Math.abs(result.landingPlayer.money) : \n            (result.landingPlayer.loan || 0)\n        }));\n      } else {\n        const winner = result.winners.find(w => w.socketId === player.socketId);\n        if (winner) {\n          setPlayer(prev => ({ \n            ...prev, \n            money: winner.money < 0 ? 0 : winner.money,\n            loan: winner.money < 0 ? \n              (winner.loan || 0) + Math.abs(winner.money) : \n              (winner.loan || 0)\n          }));\n        }\n        const loser = result.losers.find(l => l.socketId === player.socketId);\n        if (loser) {\n          setPlayer(prev => ({ \n            ...prev, \n            money: loser.money < 0 ? 0 : loser.money,\n            loan: loser.money < 0 ? \n              (loser.loan || 0) + Math.abs(loser.money) : \n              (loser.loan || 0)\n          }));\n        }\n      }\n\n      // Add RPS result to game events with loan information\n      result.winners.forEach(winner => {\n        result.losers.forEach(loser => {\n          const message = `${winner.name} won against ${loser.name} in RPS (${winner.choice} vs ${loser.choice}). ${winner.name} now has $${winner.money.toLocaleString()}${winner.loan ? ` and $${winner.loan.toLocaleString()} loan` : ''} and ${loser.name} has $${loser.money.toLocaleString()}${loser.loan ? ` and $${loser.loan.toLocaleString()} loan` : ''}. ${winner.name} drew $${winner.drawnAmount.toLocaleString()} from ${loser.name}.`;\n          setGameEvents(prev => [...prev, { message }]);\n        });\n      });\n\n      // Clear game state after a delay to show the result\n      setTimeout(() => {\n        setRpsGame(null);\n        setRpsResult(null);\n        setRpsChoice(null);\n      }, 3000);\n    });\n\n    socket.on('stonePaperScissorsTie', ({ landingPlayerId, tiedPlayerId, tiedPlayerName, maxAmount, gameId }) => {\n      console.log('[RPS] Tie resolution:', { landingPlayerId, tiedPlayerId, tiedPlayerName, maxAmount, gameId });\n      if (player?.socketId === landingPlayerId) {\n        setRpsTieAmount({ maxAmount, gameId, tiedPlayerId, tiedPlayerName });\n      }\n    });\n\n    socket.on('stonePaperScissorsTieResolved', (result) => {\n      console.log('[RPS] Tie resolved:', result);\n\n      // Update players' money in the game state\n      const updatedPlayers = players.map(p => {\n        if (p.socketId === result.landingPlayer.socketId) {\n          return { ...p, money: result.landingPlayer.money };\n        }\n        if (p.socketId === result.tiedPlayer.socketId) {\n          return { ...p, money: result.tiedPlayer.money };\n        }\n        return p;\n      });\n      setPlayers(updatedPlayers);\n\n      // Update current player's money if they were involved\n      if (player?.socketId === result.landingPlayer.socketId) {\n        setPlayer(prev => ({ ...prev, money: result.landingPlayer.money }));\n      } else if (player?.socketId === result.tiedPlayer.socketId) {\n        setPlayer(prev => ({ ...prev, money: result.tiedPlayer.money }));\n      }\n\n      // Add tie resolution to game events\n      const message = `${result.landingPlayer.name} and ${result.tiedPlayer.name} tied in RPS. ${result.landingPlayer.name} drew $${result.drawnAmount.toLocaleString()} from ${result.tiedPlayer.name}. ${result.landingPlayer.name} now has $${result.landingPlayer.money.toLocaleString()} and ${result.tiedPlayer.name} has $${result.tiedPlayer.money.toLocaleString()}.`;\n      setGameEvents(prev => [...prev, { message }]);\n\n      // If there are remaining ties, keep the game state\n      if (result.remainingTies > 0) {\n        setRpsTieAmount(null);\n      } else {\n        // Clear all RPS state if no more ties to resolve\n        setRpsGame(null);\n        setRpsResult(null);\n        setRpsChoice(null);\n        setRpsTieAmount(null);\n      }\n    });\n\n    return () => {\n      socket.off('purchaseSuccess');\n      socket.off('purchaseFailed');\n      socket.off('rentPaid');\n      socket.off('playerMoved');\n      socket.off('rentBonus');\n      socket.off('startBonus');\n      socket.off('casinoResult');\n      socket.off('roadCashResult');\n      socket.off('stonePaperScissorsStart');\n      socket.off('stonePaperScissorsResult');\n      socket.off('stonePaperScissorsTie');\n      socket.off('stonePaperScissorsTieResolved');\n      socket.off('tradeAccepted');\n    };\n  }, [socket, player, players, setPlayer, setPlayers]);\n\n  // Update inCasino state when tile changes\n  useEffect(() => {\n    const isCasinoTile = tileMeta?.id === 16;\n    setInCasino(isCasinoTile);\n    if (isCasinoTile) {\n      setHasCasinoPlayed(false);\n    }\n  }, [tileMeta]);\n\n  // Reset casino states when turn ends\n  useEffect(() => {\n    if (!isMyTurn) {\n      setInCasino(false);\n      setHasCasinoPlayed(false);\n    }\n  }, [isMyTurn]);\n\n  const handleBuy = () => {\n    console.log('[GameScreen] handleBuy invoked');\n    setError(null);\n    socket.emit('buyProperty');\n  };\n\n  return (\n    <div style={{\n      position: 'relative',\n      minHeight: '100vh',\n      overflow: 'hidden'\n    }}>\n      {/* Side Panel Buttons and Panels - Fixed to right side */}\n      <div style={{\n        position: 'fixed',\n        right: 0,\n        top: 0,\n        height: '100vh',\n        width: activeSidePanel ? '600px' : '120px',\n        zIndex: 1000,\n        transition: 'width 0.3s ease',\n        display: 'flex'\n      }}>\n        {/* Panel Buttons Column */}\n        <div style={{\n          width: '120px',\n          height: '100%',\n          display: 'flex',\n          flexDirection: 'column',\n          gap: '10px',\n          padding: '30px 0',\n          backgroundColor: 'rgba(0, 0, 0, 0.85)',\n          borderLeft: '4px solid rgb(52, 52, 52)'\n        }}>\n          {Object.entries(panelConfigs).map(([panelId, config], index) => (\n            <div \n              key={panelId}\n              onClick={() => setActiveSidePanel(activeSidePanel === panelId ? null : panelId)}\n              style={{\n                width: '100%',\n                height: '150px',\n                backgroundColor: activeSidePanel === panelId ? config.color + '44' : 'transparent',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                cursor: 'pointer',\n                transition: 'all 0.3s ease',\n                borderLeft: activeSidePanel === panelId ? `4px solid ${config.color}` : 'none'\n              }}\n            >\n              <div style={{\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                color: 'white',\n                fontSize: '1.2em',\n                width: '100%',\n                padding: '0 10px',\n                textAlign: 'center'\n              }}>\n                {config.title}\n              </div>\n            </div>\n          ))}\n        </div>\n\n        {/* Active Panel Content */}\n        {Object.entries(panelConfigs).map(([panelId, config]) => (\n          <div\n            key={panelId}\n            style={{\n              position: 'absolute',\n              left: '120px',\n              top: '0',\n              width: '480px',\n              height: '100vh',\n              backgroundColor: `${config.color}dd`,\n              transform: activeSidePanel === panelId ? 'translateX(0)' : 'translateX(100%)',\n              transition: 'transform 0.3s ease',\n              padding: '20px',\n              color: 'white',\n              overflowY: 'auto',\n              display: 'flex',\n              flexDirection: 'column'\n            }}\n          >\n            <h2 style={{ marginBottom: '20px' }}>{config.title}</h2>\n            {/* Panel specific content */}\n            {panelId === 'info' && (\n              <div style={{\n                height: 'calc(100vh - 250px)',\n                overflowY: 'auto',\n                padding: '15px',\n                display: 'flex',\n                flexDirection: 'column-reverse',\n                backgroundColor: 'rgba(0, 0, 0, 0.4)',\n                borderRadius: '8px',\n                gap: '15px'\n              }}>\n                {gameEvents.map((event, index) => {\n                  // Process the message to color-code money amounts\n                  const message = event.message.replace(\n                    /\\$(\\d+,?\\d*)/g,\n                    (match, amount) => {\n                      // Determine if this is a gain or loss\n                      const isGain = event.message.includes('received') || \n                                   event.message.includes('won') ||\n                                   event.message.includes('bonus');\n                      const isLoss = event.message.includes('paid') || \n                                   event.message.includes('lost');\n                      \n                      return `<span style=\"color: ${isGain ? '#4CAF50' : isLoss ? '#f44336' : 'white'}\">${match}</span>`;\n                    }\n                  );\n\n                  return (\n                    <div\n                      key={index}\n                      style={{\n                        backgroundColor: 'rgba(0, 0, 0, 0.6)',\n                        padding: '12px 15px',\n                        borderRadius: '8px',\n                        fontSize: '1.2em',\n                        lineHeight: '1.4'\n                      }}\n                      dangerouslySetInnerHTML={{ __html: message }}\n                    />\n                  );\n                })}\n              </div>\n            )}\n            {panelId === 'bank' && (\n              <div>\n                {/* Borrow Section */}\n                <div style={{\n                  backgroundColor: 'rgba(0, 0, 0, 0.33)',\n                  padding: '20px',\n                  borderRadius: '8px',\n                  marginTop: '70px'\n                }}>\n                  <h4 style={{ marginBottom: '15px' , fontSize: '1em', }}>Borrow Money</h4>\n                  <div style={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    gap: '10px',\n                    fontSize: '1em',\n                    marginBottom: '20px',\n                    justifyContent: 'center',\n                    alignItems: 'center'\n                  }}>\n                    <button\n                      onClick={() => setBorrowAmount(Math.max(500, borrowAmount - 500))}\n                      style={{\n                        padding: '8px 12px',\n                        fontSize: '1.7em',\n                        cursor: 'pointer',\n                        backgroundColor: 'rgba(255, 255, 255, 0.2)',\n                        border: 'none',\n                        color: 'white',\n                        borderRadius: '4px',\n                      }}\n                    >\n                      -\n                    </button>\n                    <div style={{\n                      padding: '8px 16px',\n                      backgroundColor: 'rgba(255, 255, 255, 0.15)',\n                      borderRadius: '4px',\n                      minWidth: '100px',\n                      textAlign: 'center',\n                      fontSize: '1.7em'\n                    }}>\n                      ${borrowAmount}\n                    </div>\n                    <button\n                      onClick={() => setBorrowAmount(Math.min(100000, borrowAmount + 500))}\n                      style={{\n                        padding: '8px 12px',\n                        fontSize: '1.7em',\n                        cursor: 'pointer',\n                        backgroundColor: 'rgba(255, 255, 255, 0.2)',\n                        border: 'none',\n                        color: 'white',\n                        borderRadius: '4px'\n                      }}\n                    >\n                      +\n                    </button>\n                  </div>\n                  <button\n                    onClick={() => {\n                      if (socket) {\n                        socket.emit('borrowMoney', { amount: borrowAmount });\n                        setBorrowAmount(500); // Reset to default\n                      }\n                    }}\n                    style={{\n                      width: '100%',\n                      padding: '12px',\n                      backgroundColor: 'rgba(255, 255, 255, 0.3)',\n                      border: 'none',\n                      color: 'white',\n                      borderRadius: '4px',\n                      cursor: 'pointer',\n                      fontSize: '1.1em',\n                      transition: 'background-color 0.2s'\n                    }}\n                  >\n                    Borrow\n                  </button>\n                </div>\n\n                {/* Pay Off Section */}\n                <div style={{\n                  backgroundColor: 'rgba(0, 0, 0, 0.33)',\n                  padding: '20px',\n                  borderRadius: '8px',\n                  marginTop: '20px',\n                }}>\n                  <h4 style={{ marginBottom: '15px' }}>Pay Off Loan</h4>\n                  <div style={{\n                    display: 'flex',\n                    gap: '10px',\n                    marginBottom: '20px',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    fontSize: '1em'\n                  }}>\n                    <button\n                      onClick={() => setPayoffAmount(Math.max(500, payoffAmount - 500))}\n                      disabled={!player?.loan}\n                      style={{\n                        padding: '8px 12px',\n                        fontSize: '1.2em',\n                        cursor: player?.loan ? 'pointer' : 'not-allowed',\n                        backgroundColor: player?.loan ? 'rgba(255, 255, 255, 0.2)' : 'rgba(255, 255, 255, 0.1)',\n                        border: 'none',\n                        color: 'white',\n                        borderRadius: '4px',\n                        fontSize: '1.7em'\n                      }}\n                    >\n                      -\n                    </button>\n                    <div style={{\n                      padding: '8px 16px',\n                      backgroundColor: 'rgba(255, 255, 255, 0.15)',\n                      borderRadius: '4px',\n                      minWidth: '100px',\n                      textAlign: 'center',\n                      fontSize: '1.7em'\n                    }}>\n                      ${Math.min(payoffAmount, player?.loan || 0)}\n                    </div>\n                    <button\n                      onClick={() => setPayoffAmount(Math.min(player?.loan || 0, payoffAmount + 500))}\n                      disabled={!player?.loan}\n                      style={{\n                        padding: '8px 12px',\n                        fontSize: '1.7em',\n                        cursor: player?.loan ? 'pointer' : 'not-allowed',\n                        backgroundColor: player?.loan ? 'rgba(255, 255, 255, 0.2)' : 'rgba(255, 255, 255, 0.1)',\n                        border: 'none',\n                        color: 'white',\n                        borderRadius: '4px'\n                      }}\n                    >\n                      +\n                    </button>\n                  </div>\n                  <button\n                    onClick={() => {\n                      if (socket && player?.loan && player?.money >= payoffAmount) {\n                        socket.emit('payoffLoan', { amount: Math.min(payoffAmount, player.loan) });\n                        setPayoffAmount(1000); // Reset to default\n                      }\n                    }}\n                    disabled={!player?.loan || player?.money < payoffAmount}\n                    style={{\n                      width: '100%',\n                      padding: '12px',\n                      backgroundColor: player?.loan && player?.money >= payoffAmount \n                        ? 'rgba(255, 255, 255, 0.3)' \n                        : 'rgba(255, 255, 255, 0.1)',\n                      border: 'none',\n                      color: 'white',\n                      borderRadius: '4px',\n                      cursor: player?.loan && player?.money >= payoffAmount ? 'pointer' : 'not-allowed',\n                      fontSize: '1.1em',\n                      transition: 'background-color 0.2s'\n                    }}\n                  >\n                    Pay Off\n                  </button>\n                  {player?.money < payoffAmount && (\n                    <div style={{\n                      color: '#ff6b6b',\n                      marginTop: '10px',\n                      textAlign: 'center',\n                      fontSize: '0.9em'\n                    }}>\n                      Insufficient funds\n                    </div>\n                  )}\n                </div>\n\n                {/* Status Section */}\n                <div style={{\n                  marginTop: '20px',\n                  padding: '20px',\n                  backgroundColor: 'rgba(0, 0, 0, 0.33)',\n                  borderRadius: '8px',\n                }}>\n                  <h4>Current Status</h4>\n                  <div style={{ \n                    marginTop: '10px',\n                    fontSize: '1.2em'\n                  }}>\n                    <div style={{ marginBottom: '5px' }}>Money: ${player?.money || 0}</div>\n                    <div> Loan: ${player?.loan || 0}</div>\n                  </div>\n                </div>\n                {error && (\n                  <div style={{\n                    color: '#ff6b6b',\n                    marginTop: '10px',\n                    textAlign: 'center'\n                  }}>\n                    {error}\n                  </div>\n                )}\n              </div>\n            )}\n            {panelId === 'chat' && (\n              <div style={{\n                height: '100%',\n                padding: '20px'\n              }}>\n                <Chat />\n              </div>\n            )}\n            {panelId === 'trade' && (\n              <TradePanel />\n            )}\n          </div>\n        ))}\n      </div>\n\n      {/* Main Game Area */}\n      <div style={{\n        display: 'flex',\n        flexDirection: 'column',\n        minHeight: '100vh',\n        paddingRight: activeSidePanel ? '600px' : '120px',\n        transition: 'padding-right 0.3s ease'\n      }}>\n        {/* Board and Player Stats */}\n        <div style={{\n          flex: 1,\n          display: 'flex',\n          flexDirection: 'row',\n          alignItems: 'center',\n          justifyContent: 'center',\n          position: 'relative',\n          padding: '20px',\n          paddingBottom: '300px' // Space for footer\n        }}>\n          <div style={{ \n            position: 'relative',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            width: '100%',\n            height: '100%',\n            minHeight: '600px'\n          }}>\n            <div style={{ \n              position: 'relative',\n              margin: '200px'\n            }}>\n              <Board />\n              <PlayerStats />\n            </div>\n          </div>\n        </div>\n\n        {/* Fixed Footer */}\n        <div style={{\n          position: 'fixed',\n          bottom: 0,\n          left: 0,\n          right: activeSidePanel ? '600px' : '120px',\n          height: '300px',\n          backgroundColor: 'rgba(0, 0, 0, 0.9)',\n          borderTop: '2px solid #666',\n          transition: 'right 0.3s ease',\n          display: 'flex',\n          zIndex: 100\n        }}>\n          {/* Dice Roller Section */}\n          <div style={{\n            flex: 1,\n            position: 'relative',\n            borderRight: '2px solid #666',\n            padding: '20px',\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            justifyContent: 'center',\n            background: 'rgba(60, 60, 60, 0.3)',\n            overflow: 'hidden'\n          }}>\n            {isMyTurn && (\n              <>\n                <img\n                  src={Dicebox}\n                  alt=\"Dice Board\"\n                  style={{\n                    position: 'absolute',\n                    top: 0,\n                    left: 0,\n                    width: '100%',\n                    height: '100%',\n                    objectFit: 'fill',\n                    objectPosition: 'center',\n                    pointerEvents: 'none'\n                  }}\n                />\n                {testRollMode && (\n                  <div style={{\n                    position: 'absolute',\n                    top: '50%',\n                    left: '50%',\n                    transform: 'translate(-50%, -50%)',\n                    backgroundColor: 'rgba(0, 0, 0, 0.8)',\n                    color: '#fff',\n                    padding: '8px 16px',\n                    borderRadius: '4px',\n                    zIndex: 100\n                  }}>\n                    {testRollInput}\n                  </div>\n                )}\n              </>\n            )}\n            <DiceRoller \n              testRollMode={testRollMode} \n              hasCasinoPlayed={hasCasinoPlayed}\n              style={{ position: 'relative', zIndex: 1 }}\n            />\n          </div>\n\n          {/* Dashboard Section */}\n          <div style={{\n            flex: 1,\n            borderRight: '2px solid #666',\n            padding: '20px',\n            display: 'flex',\n            flexDirection: 'column',\n            background: 'rgba(60, 60, 60, 0.3)'\n          }}>\n            <Dashboard />\n          </div>\n\n          {/* Events Section */}\n          <div style={{\n            flex: 1,\n            padding: '20px',\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            justifyContent: 'center',\n            background: 'rgba(60, 60, 60, 0.3)'\n          }}>\n            {(() => {\n              // Show RPS game if active\n              if (rpsGame) {\n                return (\n                  <div style={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'center',\n                    gap: '15px'\n                  }}>\n                    {rpsResult ? (\n                      // Show result for multiple players\n                      <div style={{\n                        textAlign: 'center',\n                        color: '#fff',\n                        fontSize: '1.4em'\n                      }}>\n                        <div>\n                          {rpsResult.landingPlayer.name}'s choice: {rpsResult.landingPlayer.choice}\n                        </div>\n                        {rpsResult.winners.map(winner => (\n                          <div key={winner.socketId} style={{ color: '#f44336' }}>\n                            Lost against {winner.name} ({winner.choice})\n                          </div>\n                        ))}\n                        {rpsResult.losers.map(loser => (\n                          <div key={loser.socketId} style={{ color: '#4CAF50' }}>\n                            Won against {loser.name} ({loser.choice})\n                          </div>\n                        ))}\n                      </div>\n                    ) : rpsTieAmount ? (\n                      <RPSTieResolver\n                        maxAmount={rpsTieAmount.maxAmount}\n                        gameId={rpsTieAmount.gameId}\n                        tiedPlayerId={rpsTieAmount.tiedPlayerId}\n                        tiedPlayerName={rpsTieAmount.tiedPlayerName}\n                        socket={socket}\n                        onResolved={() => {\n                          setRpsTieAmount(null);\n                          setRpsGame(null);\n                        }}\n                      />\n                    ) : (\n                      // Show RPS buttons for all involved players\n                      <div style={{\n                        display: 'flex',\n                        flexDirection: 'column',\n                        alignItems: 'center',\n                        gap: '15px'\n                      }}>\n                        {((player?.socketId === rpsGame.landingPlayer.socketId) ||\n                          rpsGame.closestPlayers.some(p => p.socketId === player?.socketId)) && !rpsChoice && (\n                          <>\n                            <div style={{ color: '#fff', fontSize: '1.2em', textAlign: 'center' }}>\n                              {player?.socketId === rpsGame.landingPlayer.socketId ? (\n                                <>\n                                  Playing against {rpsGame.closestPlayers.map(p => p.name).join(', ')}\n                                  <br />Choose your move:\n                                </>\n                              ) : (\n                                <>\n                                  Playing against {rpsGame.landingPlayer.name}\n                                  <br />Choose your move:\n                                </>\n                              )}\n                            </div>\n                            <div style={{\n                              display: 'flex',\n                              gap: '10px'\n                            }}>\n                              {['rock', 'paper', 'scissors'].map(choice => (\n                                <button\n                                  key={choice}\n                                  onClick={() => {\n                                    setRpsChoice(choice);\n                                    socket.emit('stonePaperScissorsChoice', {\n                                      choice,\n                                      gameId: rpsGame.gameId\n                                    });\n                                  }}\n                                  style={{\n                                    padding: '12px 24px',\n                                    fontSize: '1.1em',\n                                    backgroundColor: '#2196F3',\n                                    color: 'white',\n                                    border: 'none',\n                                    borderRadius: '4px',\n                                    cursor: 'pointer',\n                                    textTransform: 'capitalize'\n                                  }}\n                                >\n                                  {choice}\n                                </button>\n                              ))}\n                            </div>\n                          </>\n                        )}\n                        {rpsChoice && (\n                          <div style={{ color: '#fff', fontSize: '1.2em' }}>\n                            You chose: {rpsChoice}\n                          </div>\n                        )}\n                      </div>\n                    )}\n                  </div>\n                );\n              }\n\n              // Show \"Your Turn\" for current player before landing\n              if (isMyTurn && !movementDone) {\n                return (\n                  <div style={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    height: '100%',\n                    color: '#fff',\n                    fontSize: '1.6em',\n                    fontWeight: 'bold',\n                    textShadow: '2px 2px 4px rgba(0,0,0,0.5)'\n                  }}>\n                    Your Turn\n                  </div>\n                );\n              }\n\n              // Buy Property\n              if (isMyTurn && tileMeta?.type === 'property' && \n                  !players.some(p => p.properties.includes(tileMeta?.id))) {\n                return (\n                  <div style={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'center',\n                    gap: '10px'\n                  }}>\n                    <button\n                      onClick={handleBuy}\n                      disabled={player.money < tileMeta.cost || (player.loan || 0) > 10000}\n                      style={{\n                        padding: '15px 30px',  // Increased padding\n                        fontSize: '1.4em',     // Increased font size\n                        backgroundColor: player.money >= tileMeta.cost && (player.loan || 0) <= 10000 ? '#4CAF50' : '#ccc',\n                        color: player.money >= tileMeta.cost && (player.loan || 0) <= 10000 ? 'white' : '#ff0000',\n                        border: 'none',\n                        borderRadius: '12px',  // Increased border radius\n                        cursor: player.money >= tileMeta.cost && (player.loan || 0) <= 10000 ? 'pointer' : 'not-allowed',\n                        fontWeight: 'bold',\n                        boxShadow: '0 4px 8px rgba(0,0,0,0.2)',  // Added shadow\n                        transition: 'transform 0.2s',\n                        ':hover': {\n                          transform: 'scale(1.05)'\n                        }\n                      }}\n                    >\n                      Buy (${tileMeta.cost})\n                    </button>\n                    {error && (\n                      <p style={{ color: 'tomato', margin: 0 }}>{error}</p>\n                    )}\n                    {(player.loan || 0) > 10000 && (\n                      <p style={{ color: 'tomato', margin: 0 }}>Cannot buy property when loan exceeds $10,000</p>\n                    )}\n                  </div>\n                );\n              }\n\n              // Road Cash Game\n              if (isMyTurn && tileMeta?.id === 22) {\n                return <RoadCash isMyTurn={isMyTurn} socket={socket} />;\n              }\n\n              // Casino\n              if (inCasino && isMyTurn) {\n                return (\n                  <CasinoBetting \n                    isMyTurn={isMyTurn} \n                    currentMoney={player?.money || 0}\n                    socket={socket}\n                    player={player}\n                    onCasinoPlayed={() => setHasCasinoPlayed(true)}\n                  />\n                );\n              }\n\n              // Corner Choice\n              if (isMyTurn && tileMeta?.name?.toLowerCase().includes('choose corner')) {\n                return (\n                  <div style={{\n                    display: 'grid',\n                    gridTemplateColumns: '1fr 1fr',\n                    gridTemplateRows: '1fr 1fr',\n                    gap: '20px',\n                    width: '100%',\n                    maxWidth: '600px',\n                    padding: '20px',\n                    margin: '0 auto'\n                  }}>\n                    <button\n                      onClick={() => {\n                        socket.emit('teleport', { toTile: 1, prevTile: 30 });\n                        setError(null);\n                        setHasChosenCorner(true);\n                      }}\n                      style={{\n                        margin: 0,\n                        padding: 0,\n                        border: '3px solid #666',\n                        borderRadius: '12px',\n                        backgroundImage: `url(${startIcon})`,\n                        backgroundSize: '80%',\n                        backgroundRepeat: 'no-repeat',\n                        backgroundPosition: 'center 40%',\n                        cursor: 'pointer',\n                        display: 'flex',\n                        alignItems: 'flex-end',\n                        justifyContent: 'center',\n                        width: '100%',\n                        height: '100%',\n                        minHeight: '180px',\n                        position: 'relative',\n                        backgroundColor: 'rgba(255, 255, 255, 0.15)',\n                        transition: 'transform 0.2s, background-color 0.2s',\n                        ':hover': {\n                          transform: 'scale(1.02)',\n                          backgroundColor: 'rgba(255, 255, 255, 0.2)'\n                        }\n                      }}\n                    >\n                      <span style={{\n                        padding: '8px 16px',\n                        backgroundColor: 'rgba(0,0,0,0.6)',\n                        borderRadius: '0 0 9px 9px',\n                        color: '#fff',\n                        fontWeight: 'bold',\n                        fontSize: '1.4em',\n                        textShadow: '2px 2px 4px rgba(0,0,0,0.7)',\n                        position: 'absolute',\n                        bottom: 0,\n                        width: '100%',\n                        textAlign: 'center'\n                      }}>Start</span>\n                    </button>\n                    <button\n                      onClick={() => {\n                        socket.emit('teleport', { toTile: 22, prevTile: 21 });\n                        setError(null);\n                        setHasChosenCorner(true);\n                      }}\n                      style={{\n                        margin: 0,\n                        padding: 0,\n                        border: '3px solid #666',\n                        borderRadius: '12px',\n                        backgroundImage: `url(${roadIcon})`,\n                        backgroundSize: '80%',\n                        backgroundRepeat: 'no-repeat',\n                        backgroundPosition: 'center 40%',\n                        cursor: 'pointer',\n                        display: 'flex',\n                        alignItems: 'flex-end',\n                        justifyContent: 'center',\n                        width: '100%',\n                        height: '100%',\n                        minHeight: '180px',\n                        position: 'relative',\n                        backgroundColor: 'rgba(255, 255, 255, 0.15)',\n                        transition: 'transform 0.2s, background-color 0.2s',\n                        ':hover': {\n                          transform: 'scale(1.02)',\n                          backgroundColor: 'rgba(255, 255, 255, 0.2)'\n                        }\n                      }}\n                    >\n                      <span style={{\n                        padding: '8px 16px',\n                        backgroundColor: 'rgba(0,0,0,0.6)',\n                        borderRadius: '0 0 9px 9px',\n                        color: '#fff',\n                        fontWeight: 'bold',\n                        fontSize: '1.4em',\n                        textShadow: '2px 2px 4px rgba(0,0,0,0.7)',\n                        position: 'absolute',\n                        bottom: 0,\n                        width: '100%',\n                        textAlign: 'center'\n                      }}>Road</span>\n                    </button>\n                    <button\n                      onClick={() => {\n                        socket.emit('teleport', { toTile: 7, prevTile: 6 });\n                        setError(null);\n                        setHasChosenCorner(true);\n                      }}\n                      style={{\n                        margin: 0,\n                        padding: 0,\n                        border: '3px solid #666',\n                        borderRadius: '12px',\n                        backgroundImage: `url(${hotelIcon})`,\n                        backgroundSize: '80%',\n                        backgroundRepeat: 'no-repeat',\n                        backgroundPosition: 'center 40%',\n                        cursor: 'pointer',\n                        display: 'flex',\n                        alignItems: 'flex-end',\n                        justifyContent: 'center',\n                        width: '100%',\n                        height: '100%',\n                        minHeight: '180px',\n                        position: 'relative',\n                        backgroundColor: 'rgba(255, 255, 255, 0.15)',\n                        transition: 'transform 0.2s, background-color 0.2s',\n                        ':hover': {\n                          transform: 'scale(1.02)',\n                          backgroundColor: 'rgba(255, 255, 255, 0.2)'\n                        }\n                      }}\n                    >\n                      <span style={{\n                        padding: '8px 16px',\n                        backgroundColor: 'rgba(0,0,0,0.6)',\n                        borderRadius: '0 0 9px 9px',\n                        color: '#fff',\n                        fontWeight: 'bold',\n                        fontSize: '1.4em',\n                        textShadow: '2px 2px 4px rgba(0,0,0,0.7)',\n                        position: 'absolute',\n                        bottom: 0,\n                        width: '100%',\n                        textAlign: 'center'\n                      }}>Hotel</span>\n                    </button>\n                    <button\n                      onClick={() => {\n                        socket.emit('teleport', { toTile: 16, prevTile: 15 });\n                        setError(null);\n                        setHasChosenCorner(true);\n                      }}\n                      style={{\n                        margin: 0,\n                        padding: 0,\n                        border: '3px solid #666',\n                        borderRadius: '12px',\n                        backgroundImage: `url(${casinoIcon})`,\n                        backgroundSize: '80%',\n                        backgroundRepeat: 'no-repeat',\n                        backgroundPosition: 'center 40%',\n                        cursor: 'pointer',\n                        display: 'flex',\n                        alignItems: 'flex-end',\n                        justifyContent: 'center',\n                        width: '100%',\n                        height: '100%',\n                        minHeight: '180px',\n                        position: 'relative',\n                        backgroundColor: 'rgba(255, 255, 255, 0.15)',\n                        transition: 'transform 0.2s, background-color 0.2s',\n                        ':hover': {\n                          transform: 'scale(1.02)',\n                          backgroundColor: 'rgba(255, 255, 255, 0.2)'\n                        }\n                      }}\n                    >\n                      <span style={{\n                        padding: '8px 16px',\n                        backgroundColor: 'rgba(0,0,0,0.6)',\n                        borderRadius: '0 0 9px 9px',\n                        color: '#fff',\n                        fontWeight: 'bold',\n                        fontSize: '1.4em',\n                        textShadow: '2px 2px 4px rgba(0,0,0,0.7)',\n                        position: 'absolute',\n                        bottom: 0,\n                        width: '100%',\n                        textAlign: 'center'\n                      }}>Casino</span>\n                    </button>\n                  </div>\n                );\n              }\n\n              // Show error message if any\n              if (error) {\n                return (\n                  <p style={{ color: 'tomato', margin: 0 }}>{error}</p>\n                );\n              }\n\n              // Show empty state for non-turn players or when no action is needed\n              return (\n                <div style={{\n                  display: 'flex',\n                  flexDirection: 'column',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  height: '100%',\n                  gap: '20px'\n                }}>\n                  {rpsGame && (\n                    <div style={{\n                      display: 'flex',\n                      flexDirection: 'column',\n                      alignItems: 'center',\n                      gap: '15px'\n                    }}>\n                      {rpsResult ? (\n                        // Show result for multiple players\n                        <div style={{\n                          textAlign: 'center',\n                          color: '#fff',\n                          fontSize: '1.4em'\n                        }}>\n                          <div>\n                            {rpsResult.landingPlayer.name}'s choice: {rpsResult.landingPlayer.choice}\n                          </div>\n                          {rpsResult.winners.map(winner => (\n                            <div key={winner.socketId} style={{ color: '#f44336' }}>\n                              Lost against {winner.name} ({winner.choice})\n                            </div>\n                          ))}\n                          {rpsResult.losers.map(loser => (\n                            <div key={loser.socketId} style={{ color: '#4CAF50' }}>\n                              Won against {loser.name} ({loser.choice})\n                            </div>\n                          ))}\n                        </div>\n                      ) : rpsTieAmount ? (\n                        <RPSTieResolver\n                          maxAmount={rpsTieAmount.maxAmount}\n                          gameId={rpsTieAmount.gameId}\n                          tiedPlayerId={rpsTieAmount.tiedPlayerId}\n                          tiedPlayerName={rpsTieAmount.tiedPlayerName}\n                          socket={socket}\n                          onResolved={() => {\n                            setRpsTieAmount(null);\n                            setRpsGame(null);\n                          }}\n                        />\n                      ) : (\n                        // Show RPS buttons for all involved players\n                        <div style={{\n                          display: 'flex',\n                          flexDirection: 'column',\n                          alignItems: 'center',\n                          gap: '15px'\n                        }}>\n                          {((player?.socketId === rpsGame.landingPlayer.socketId) ||\n                            rpsGame.closestPlayers.some(p => p.socketId === player?.socketId)) && !rpsChoice && (\n                            <>\n                              <div style={{ color: '#fff', fontSize: '1.2em', textAlign: 'center' }}>\n                                {player?.socketId === rpsGame.landingPlayer.socketId ? (\n                                  <>\n                                    Playing against {rpsGame.closestPlayers.map(p => p.name).join(', ')}\n                                    <br />Choose your move:\n                                  </>\n                                ) : (\n                                  <>\n                                    Playing against {rpsGame.landingPlayer.name}\n                                    <br />Choose your move:\n                                  </>\n                                )}\n                              </div>\n                              <div style={{\n                                display: 'flex',\n                                gap: '10px'\n                              }}>\n                                {['rock', 'paper', 'scissors'].map(choice => (\n                                  <button\n                                    key={choice}\n                                    onClick={() => {\n                                      setRpsChoice(choice);\n                                      socket.emit('stonePaperScissorsChoice', {\n                                        choice,\n                                        gameId: rpsGame.gameId\n                                      });\n                                    }}\n                                    style={{\n                                      padding: '12px 24px',\n                                      fontSize: '1.1em',\n                                      backgroundColor: '#2196F3',\n                                      color: 'white',\n                                      border: 'none',\n                                      borderRadius: '4px',\n                                      cursor: 'pointer',\n                                      textTransform: 'capitalize'\n                                    }}\n                                  >\n                                    {choice}\n                                  </button>\n                                ))}\n                              </div>\n                            </>\n                          )}\n                          {rpsChoice && (\n                            <div style={{ color: '#fff', fontSize: '1.2em' }}>\n                              You chose: {rpsChoice}\n                            </div>\n                          )}\n                        </div>\n                      )}\n                    </div>\n                  )}\n                </div>\n              );\n            })()}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}