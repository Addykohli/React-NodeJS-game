{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\addhy\\\\Desktop\\\\Business_web - Copy (2)\\\\client\\\\src\\\\components\\\\PlayerStats.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport { GameContext } from '../context/GameContext';\nimport Dicebox from '../assets/diceBoard.png';\nimport { tiles } from '../data/tiles';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PlayerStats = () => {\n  _s();\n  const {\n    players,\n    player,\n    currentPlayerId,\n    diceRoll,\n    socket\n  } = useContext(GameContext);\n  const [diceRolls, setDiceRolls] = useState({});\n\n  // Listen for all money and property changing events\n  useEffect(() => {\n    if (!socket) return;\n    const handleStateUpdate = () => {\n      // Force a re-render by updating dice rolls state\n      setDiceRolls(prev => ({\n        ...prev\n      }));\n    };\n\n    // Subscribe to all money and property changing events\n    socket.on('rentPaid', handleStateUpdate);\n    socket.on('startBonus', handleStateUpdate);\n    socket.on('propertyUpdated', handleStateUpdate);\n    socket.on('casinoResult', handleStateUpdate);\n    socket.on('roadCashResult', handleStateUpdate);\n    socket.on('loanUpdated', handleStateUpdate);\n    socket.on('tradeAccepted', handleStateUpdate);\n    socket.on('playerMoved', handleStateUpdate);\n    socket.on('rentBonus', handleStateUpdate);\n    return () => {\n      // Cleanup all event listeners\n      socket.off('rentPaid', handleStateUpdate);\n      socket.off('startBonus', handleStateUpdate);\n      socket.off('propertyUpdated', handleStateUpdate);\n      socket.off('casinoResult', handleStateUpdate);\n      socket.off('roadCashResult', handleStateUpdate);\n      socket.off('loanUpdated', handleStateUpdate);\n      socket.off('tradeAccepted', handleStateUpdate);\n      socket.off('playerMoved', handleStateUpdate);\n      socket.off('rentBonus', handleStateUpdate);\n    };\n  }, [socket]);\n\n  // Update dice rolls when a new roll happens\n  useEffect(() => {\n    if (diceRoll) {\n      setDiceRolls(prev => ({\n        ...prev,\n        [diceRoll.playerId]: diceRoll\n      }));\n    }\n  }, [diceRoll]);\n\n  // Filter out current player and get others\n  const others = players.filter(p => p && p.socketId !== (player === null || player === void 0 ? void 0 : player.socketId));\n\n  // Get positions based on number of players\n  const getPositions = numPlayers => {\n    switch (numPlayers) {\n      case 1:\n        // Just one other player\n        return [{\n          position: 'left'\n        }];\n      case 2:\n        // Two other players\n        return [{\n          position: 'left',\n          top: '25%'\n        }, {\n          position: 'left',\n          top: '75%'\n        }];\n      case 3:\n        // Three other players\n        return [{\n          position: 'left',\n          top: '25%'\n        }, {\n          position: 'left',\n          top: '75%'\n        }, {\n          position: 'top',\n          left: '50%'\n        }];\n      case 4:\n        // Four other players\n        return [{\n          position: 'left',\n          top: '25%'\n        }, {\n          position: 'left',\n          top: '75%'\n        }, {\n          position: 'top',\n          left: '33%'\n        }, {\n          position: 'top',\n          left: '66%'\n        }];\n      case 5:\n        // Five other players\n        return [{\n          position: 'left',\n          top: '25%'\n        }, {\n          position: 'left',\n          top: '75%'\n        }, {\n          position: 'right',\n          top: '25%'\n        }, {\n          position: 'right',\n          top: '75%'\n        }, {\n          position: 'top',\n          left: '50%'\n        }];\n      case 6:\n        // Six other players\n        return [{\n          position: 'left',\n          top: '25%'\n        }, {\n          position: 'left',\n          top: '75%'\n        }, {\n          position: 'right',\n          top: '25%'\n        }, {\n          position: 'right',\n          top: '75%'\n        }, {\n          position: 'top',\n          left: '33%'\n        }, {\n          position: 'top',\n          left: '66%'\n        }];\n      case 7:\n        // Seven other players\n        return [{\n          position: 'left',\n          top: '25%'\n        }, {\n          position: 'left',\n          top: '75%'\n        }, {\n          position: 'right',\n          top: '25%'\n        }, {\n          position: 'right',\n          top: '75%'\n        }, {\n          position: 'top',\n          left: '25%'\n        }, {\n          position: 'top',\n          left: '50%'\n        }, {\n          position: 'top',\n          left: '75%'\n        }];\n      default:\n        return [];\n    }\n  };\n  const positions = getPositions(others.length);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: others.map((p, idx) => {\n      var _tiles$find, _p$money, _p$loan;\n      const pos = positions[idx];\n      if (!pos) return null;\n      const isCurrentPlayer = p.socketId === currentPlayerId;\n      const playerDice = diceRolls[p.socketId];\n      const currentTile = ((_tiles$find = tiles.find(t => t.id === p.tileId)) === null || _tiles$find === void 0 ? void 0 : _tiles$find.name) || 'Unknown';\n      const style = {\n        position: 'absolute',\n        border: '1px solid black',\n        padding: '16px',\n        background: isCurrentPlayer ? 'rgba(76, 175, 80, 0.61)' : 'rgba(80, 80, 80, 0.61)',\n        fontSize: '1.5rem',\n        color: 'white',\n        width: '260px',\n        borderRadius: '12px',\n        boxShadow: '0 3px 6px rgba(0,0,0,0.2)',\n        zIndex: 1\n      };\n\n      // Apply position based on placement\n      if (pos.position === 'left') {\n        style.right = 'calc(100% + 235px)';\n        style.top = pos.top || '50%';\n        style.transform = 'translate(0, -50%)';\n      } else if (pos.position === 'right') {\n        style.left = 'calc(100% + 235px)';\n        style.top = pos.top || '50%';\n        style.transform = 'translate(0, -50%)';\n      } else if (pos.position === 'top') {\n        style.bottom = 'calc(100% + 200px)';\n        style.left = pos.left || '50%';\n        style.transform = 'translate(-50%, 0)';\n      }\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: style,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '8px',\n            fontWeight: 'bold'\n          },\n          children: p.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '1.2rem',\n            marginBottom: '4px'\n          },\n          children: [\"Money: $\", ((_p$money = p.money) === null || _p$money === void 0 ? void 0 : _p$money.toLocaleString()) || 0]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this), p.loan > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '1.2rem',\n            marginBottom: '4px',\n            color: '#ff6b6b'\n          },\n          children: [\"Loan: $\", (_p$loan = p.loan) === null || _p$loan === void 0 ? void 0 : _p$loan.toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '1.2rem'\n          },\n          children: [\"At: \", currentTile]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this), playerDice && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '8px',\n            display: 'flex',\n            gap: '8px',\n            justifyContent: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `/dice/dice${playerDice.die1}.png`,\n            alt: `Die ${playerDice.die1}`,\n            width: 40,\n            height: 40\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `/dice/dice${playerDice.die2}.png`,\n            alt: `Die ${playerDice.die2}`,\n            width: 40,\n            height: 40\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 15\n        }, this)]\n      }, p.socketId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false);\n};\n_s(PlayerStats, \"00rzjrCGhn2c8uwRYiP/W4jajuo=\");\n_c = PlayerStats;\nexport default PlayerStats;\nvar _c;\n$RefreshReg$(_c, \"PlayerStats\");","map":{"version":3,"names":["React","useContext","useEffect","useState","GameContext","Dicebox","tiles","jsxDEV","_jsxDEV","Fragment","_Fragment","PlayerStats","_s","players","player","currentPlayerId","diceRoll","socket","diceRolls","setDiceRolls","handleStateUpdate","prev","on","off","playerId","others","filter","p","socketId","getPositions","numPlayers","position","top","left","positions","length","children","map","idx","_tiles$find","_p$money","_p$loan","pos","isCurrentPlayer","playerDice","currentTile","find","t","id","tileId","name","style","border","padding","background","fontSize","color","width","borderRadius","boxShadow","zIndex","right","transform","bottom","marginBottom","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","money","toLocaleString","loan","marginTop","display","gap","justifyContent","src","die1","alt","height","die2","_c","$RefreshReg$"],"sources":["C:/Users/addhy/Desktop/Business_web - Copy (2)/client/src/components/PlayerStats.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { GameContext } from '../context/GameContext';\nimport Dicebox from '../assets/diceBoard.png';\nimport { tiles } from '../data/tiles';\n\nconst PlayerStats = () => {\n  const { players, player, currentPlayerId, diceRoll, socket } = useContext(GameContext);\n  const [diceRolls, setDiceRolls] = useState({});\n\n  // Listen for all money and property changing events\n  useEffect(() => {\n    if (!socket) return;\n\n    const handleStateUpdate = () => {\n      // Force a re-render by updating dice rolls state\n      setDiceRolls(prev => ({ ...prev }));\n    };\n\n    // Subscribe to all money and property changing events\n    socket.on('rentPaid', handleStateUpdate);\n    socket.on('startBonus', handleStateUpdate);\n    socket.on('propertyUpdated', handleStateUpdate);\n    socket.on('casinoResult', handleStateUpdate);\n    socket.on('roadCashResult', handleStateUpdate);\n    socket.on('loanUpdated', handleStateUpdate);\n    socket.on('tradeAccepted', handleStateUpdate);\n    socket.on('playerMoved', handleStateUpdate);\n    socket.on('rentBonus', handleStateUpdate);\n\n    return () => {\n      // Cleanup all event listeners\n      socket.off('rentPaid', handleStateUpdate);\n      socket.off('startBonus', handleStateUpdate);\n      socket.off('propertyUpdated', handleStateUpdate);\n      socket.off('casinoResult', handleStateUpdate);\n      socket.off('roadCashResult', handleStateUpdate);\n      socket.off('loanUpdated', handleStateUpdate);\n      socket.off('tradeAccepted', handleStateUpdate);\n      socket.off('playerMoved', handleStateUpdate);\n      socket.off('rentBonus', handleStateUpdate);\n    };\n  }, [socket]);\n\n  // Update dice rolls when a new roll happens\n  useEffect(() => {\n    if (diceRoll) {\n      setDiceRolls(prev => ({\n        ...prev,\n        [diceRoll.playerId]: diceRoll\n      }));\n    }\n  }, [diceRoll]);\n\n  // Filter out current player and get others\n  const others = players.filter(p => p && p.socketId !== player?.socketId);\n\n  // Get positions based on number of players\n  const getPositions = (numPlayers) => {\n    switch(numPlayers) {\n      case 1: // Just one other player\n        return [{ position: 'left' }];\n      case 2: // Two other players\n        return [{ position: 'left', top: '25%' }, { position: 'left', top: '75%' }];\n      case 3: // Three other players\n        return [\n          { position: 'left', top: '25%' },\n          { position: 'left', top: '75%' },\n          { position: 'top' , left: '50%'}\n        ];\n      case 4: // Four other players\n        return [\n          { position: 'left', top: '25%' },\n          { position: 'left', top: '75%' },\n          { position: 'top' , left: '33%'},\n          { position: 'top' , left: '66%'}\n        ];\n      case 5: // Five other players\n        return [\n          { position: 'left', top: '25%' },\n          { position: 'left', top: '75%' },\n          { position: 'right', top: '25%' },\n          { position: 'right', top: '75%' },\n          { position: 'top' , left: '50%'}\n        ];\n      case 6: // Six other players\n        return [\n          { position: 'left', top: '25%' },\n          { position: 'left', top: '75%' },\n          { position: 'right', top: '25%' },\n          { position: 'right', top: '75%' },\n          { position: 'top' , left: '33%'},\n          { position: 'top' , left: '66%'}\n        ];\n      case 7: // Seven other players\n        return [\n          { position: 'left', top: '25%' },\n          { position: 'left', top: '75%' },\n          { position: 'right', top: '25%' },\n          { position: 'right', top: '75%' },\n          { position: 'top' , left: '25%'},\n          { position: 'top' , left: '50%'},\n          { position: 'top' , left: '75%'}\n        ];\n      default:\n        return [];\n    }\n  };\n\n  const positions = getPositions(others.length);\n\n  return (\n    <>\n      {others.map((p, idx) => {\n        const pos = positions[idx];\n        if (!pos) return null;\n\n        const isCurrentPlayer = p.socketId === currentPlayerId;\n        const playerDice = diceRolls[p.socketId];\n        const currentTile = tiles.find(t => t.id === p.tileId)?.name || 'Unknown';\n\n        const style = {\n          position: 'absolute',\n          border: '1px solid black',\n          padding: '16px',\n          background: isCurrentPlayer ? 'rgba(76, 175, 80, 0.61)' : 'rgba(80, 80, 80, 0.61)',\n          fontSize: '1.5rem',\n          color: 'white',\n          width: '260px',\n          borderRadius: '12px',\n          boxShadow: '0 3px 6px rgba(0,0,0,0.2)',\n          zIndex: 1\n        };\n\n        // Apply position based on placement\n        if (pos.position === 'left') {\n          style.right = 'calc(100% + 235px)';\n          style.top = pos.top || '50%';\n          style.transform = 'translate(0, -50%)';\n        } else if (pos.position === 'right') {\n          style.left = 'calc(100% + 235px)';\n          style.top = pos.top || '50%';\n          style.transform = 'translate(0, -50%)';\n        } else if (pos.position === 'top') {\n          style.bottom = 'calc(100% + 200px)';\n          style.left = pos.left || '50%';\n          style.transform = 'translate(-50%, 0)';\n        }\n\n        return (\n          <div key={p.socketId} style={style}>\n            <div style={{ marginBottom: '8px', fontWeight: 'bold' }}>{p.name}</div>\n            <div style={{ fontSize: '1.2rem', marginBottom: '4px' }}>\n              Money: ${p.money?.toLocaleString() || 0}\n            </div>\n            {p.loan > 0 && (\n              <div style={{ fontSize: '1.2rem', marginBottom: '4px', color: '#ff6b6b' }}>\n                Loan: ${p.loan?.toLocaleString()}\n              </div>\n            )}\n            <div style={{ fontSize: '1.2rem' }}>\n              At: {currentTile}\n            </div>\n            {playerDice && (\n              <div style={{ \n                marginTop: '8px',\n                display: 'flex',\n                gap: '8px',\n                justifyContent: 'center'\n              }}>\n                <img \n                  src={`/dice/dice${playerDice.die1}.png`}\n                  alt={`Die ${playerDice.die1}`}\n                  width={40}\n                  height={40}\n                />\n                <img \n                  src={`/dice/dice${playerDice.die2}.png`}\n                  alt={`Die ${playerDice.die2}`}\n                  width={40}\n                  height={40}\n                />\n              </div>\n            )}\n          </div>\n        );\n      })}\n    </>\n  );\n};\n\nexport default PlayerStats;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}