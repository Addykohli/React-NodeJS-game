{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useContext } from 'react';\nimport { GameContext } from '../context/GameContext';\nimport { tiles } from '../data/tiles';\nconst delay = ms => new Promise(res => setTimeout(res, ms));\nconst GameController = () => {\n  _s();\n  const {\n    players,\n    setPlayers,\n    currentPlayerIndex,\n    originalCount,\n    currentCount,\n    setOriginalCount,\n    setCurrentCount,\n    isMoving,\n    setIsMoving\n  } = useContext(GameContext);\n  useEffect(() => {\n    if (!isMoving || currentCount <= 0) return;\n    const movePlayer = async () => {\n      let movesLeft = currentCount;\n      const updatedPlayers = [...players];\n      const player = updatedPlayers[currentPlayerIndex];\n      while (movesLeft > 0) {\n        const tile = tiles.find(t => {\n          var _ref;\n          return (_ref = t.id === player.currentTile) !== null && _ref !== void 0 ? _ref : 1;\n        });\n        const prev = player.prevTile;\n\n        // filter valid next steps\n        const candidates = (tile.next || []).filter(n => (n.from == null || n.from === prev) && (n.roll === 'any' || originalCount > 7 && n.roll === 'above' || originalCount < 7 && n.roll === 'below'));\n        if (candidates.length === 0) break;\n        let nextId;\n        if (candidates.length === 1) {\n          nextId = candidates[0].to;\n        } else {\n          // two choices available\n          if (originalCount === 7) {\n            // prompt by tile name\n            const opts = candidates.map(c => {\n              const dest = tiles.find(t => t.id === c.to);\n              return {\n                key: c.roll,\n                name: dest === null || dest === void 0 ? void 0 : dest.name,\n                to: c.to\n              };\n            });\n            const promptText = opts.map(o => `${o.key.toUpperCase()}: \"${o.name}\"`).join('\\n');\n            const choice = window.prompt(`You rolled a 7! Choose path (type \"above\" or \"below\"):\\n${promptText}`);\n            const sel = opts.find(o => o.key === choice);\n            nextId = sel ? sel.to : opts[0].to;\n          } else {\n            nextId = candidates[0].to;\n          }\n        }\n        player.prevTile = player.currentTile;\n        player.currentTile = nextId;\n        setPlayers([...updatedPlayers]);\n        movesLeft--;\n        setCurrentCount(movesLeft);\n        // small delay for animation\n        // eslint-disable-next-line no-await-in-loop\n        await delay(300);\n      }\n      setIsMoving(false);\n      setOriginalCount(0);\n      setCurrentCount(0);\n    };\n    movePlayer();\n  }, [isMoving, currentCount, originalCount, players, currentPlayerIndex, setPlayers, setIsMoving, setOriginalCount, setCurrentCount]);\n  return null;\n};\n_s(GameController, \"02yNgCn6B09dy9dJ7NDXqfSVpXE=\");\n_c = GameController;\nexport default GameController;\nvar _c;\n$RefreshReg$(_c, \"GameController\");","map":{"version":3,"names":["useEffect","useContext","GameContext","tiles","delay","ms","Promise","res","setTimeout","GameController","_s","players","setPlayers","currentPlayerIndex","originalCount","currentCount","setOriginalCount","setCurrentCount","isMoving","setIsMoving","movePlayer","movesLeft","updatedPlayers","player","tile","find","t","_ref","id","currentTile","prev","prevTile","candidates","next","filter","n","from","roll","length","nextId","to","opts","map","c","dest","key","name","promptText","o","toUpperCase","join","choice","window","prompt","sel","_c","$RefreshReg$"],"sources":["C:/Users/addhy/Desktop/Business_web/client/src/components/GameController.js"],"sourcesContent":["import { useEffect, useContext } from 'react';\r\nimport { GameContext } from '../context/GameContext';\r\nimport { tiles } from '../data/tiles';\r\n\r\nconst delay = ms => new Promise(res => setTimeout(res, ms));\r\n\r\nconst GameController = () => {\r\n  const {\r\n    players, setPlayers,\r\n    currentPlayerIndex,\r\n    originalCount, currentCount,\r\n    setOriginalCount, setCurrentCount,\r\n    isMoving, setIsMoving\r\n  } = useContext(GameContext);\r\n\r\n  useEffect(() => {\r\n    if (!isMoving || currentCount <= 0) return;\r\n\r\n    const movePlayer = async () => {\r\n      let movesLeft = currentCount;\r\n      const updatedPlayers = [...players];\r\n      const player = updatedPlayers[currentPlayerIndex];\r\n\r\n      while (movesLeft > 0) {\r\n        const tile = tiles.find(t => t.id === player.currentTile ?? 1);\r\n        const prev = player.prevTile;\r\n\r\n        // filter valid next steps\r\n        const candidates = (tile.next || []).filter(n =>\r\n          (n.from == null || n.from === prev) &&\r\n          (n.roll === 'any'\r\n            || (originalCount > 7 && n.roll === 'above')\r\n            || (originalCount < 7 && n.roll === 'below')\r\n          )\r\n        );\r\n\r\n        if (candidates.length === 0) break;\r\n\r\n        let nextId;\r\n        if (candidates.length === 1) {\r\n          nextId = candidates[0].to;\r\n        } else {\r\n          // two choices available\r\n          if (originalCount === 7) {\r\n            // prompt by tile name\r\n            const opts = candidates.map(c => {\r\n              const dest = tiles.find(t => t.id === c.to);\r\n              return { key: c.roll, name: dest?.name, to: c.to };\r\n            });\r\n            const promptText = opts\r\n              .map(o => `${o.key.toUpperCase()}: \"${o.name}\"`)\r\n              .join('\\n');\r\n            const choice = window.prompt(\r\n              `You rolled a 7! Choose path (type \"above\" or \"below\"):\\n${promptText}`\r\n            );\r\n            const sel = opts.find(o => o.key === choice);\r\n            nextId = sel ? sel.to : opts[0].to;\r\n          } else {\r\n            nextId = candidates[0].to;\r\n          }\r\n        }\r\n\r\n        player.prevTile   = player.currentTile;\r\n        player.currentTile = nextId;\r\n        setPlayers([...updatedPlayers]);\r\n\r\n        movesLeft--;\r\n        setCurrentCount(movesLeft);\r\n        // small delay for animation\r\n        // eslint-disable-next-line no-await-in-loop\r\n        await delay(300);\r\n      }\r\n\r\n      setIsMoving(false);\r\n      setOriginalCount(0);\r\n      setCurrentCount(0);\r\n    };\r\n\r\n    movePlayer();\r\n  }, [\r\n    isMoving,\r\n    currentCount,\r\n    originalCount,\r\n    players,\r\n    currentPlayerIndex,\r\n    setPlayers,\r\n    setIsMoving,\r\n    setOriginalCount,\r\n    setCurrentCount\r\n  ]);\r\n\r\n  return null;\r\n};\r\n\r\nexport default GameController;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}