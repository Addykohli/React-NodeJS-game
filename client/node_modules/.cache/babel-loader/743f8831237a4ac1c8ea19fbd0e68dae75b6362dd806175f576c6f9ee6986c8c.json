{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useContext } from 'react';\nimport { GameContext } from '../context/GameContext';\nimport { tiles } from '../data/tiles';\nconst delay = ms => new Promise(res => setTimeout(res, ms));\nconst GameController = () => {\n  _s();\n  const {\n    players,\n    setPlayers,\n    currentPlayerIndex,\n    originalCount,\n    setIsMoving\n  } = useContext(GameContext);\n  useEffect(() => {\n    const movePlayer = async () => {\n      if (originalCount <= 0) return;\n      let count = originalCount;\n      const updated = [...players];\n      const player = updated[currentPlayerIndex];\n      while (count > 0) {\n        await delay(500);\n        const currentTile = tiles.find(t => t.id === player.tileId);\n        let options = currentTile.next.filter(o => o.from !== player.prevTile);\n        let nextId;\n        if (options.length === 1) {\n          nextId = options[0].to;\n        } else {\n          const rollType = originalCount === 7 ? 'any' : originalCount < 7 ? 'below' : 'above';\n          nextId = options.find(o => o.roll === rollType) || options[0];\n          nextId = nextId.to;\n        }\n        player.prevTile = player.tileId;\n        player.tileId = nextId;\n        setPlayers([...updated]);\n        count--;\n      }\n      setIsMoving(false);\n    };\n    movePlayer();\n  }, [originalCount, players, currentPlayerIndex, setPlayers, setIsMoving]);\n  return null;\n};\n_s(GameController, \"SOgqCd5AFAnB+AiJgx5SzrITFCk=\");\n_c = GameController;\nexport default GameController;\nvar _c;\n$RefreshReg$(_c, \"GameController\");","map":{"version":3,"names":["useEffect","useContext","GameContext","tiles","delay","ms","Promise","res","setTimeout","GameController","_s","players","setPlayers","currentPlayerIndex","originalCount","setIsMoving","movePlayer","count","updated","player","currentTile","find","t","id","tileId","options","next","filter","o","from","prevTile","nextId","length","to","rollType","roll","_c","$RefreshReg$"],"sources":["C:/Users/addhy/Desktop/Business_web/client/src/components/GameController.js"],"sourcesContent":["import { useEffect, useContext } from 'react';\r\nimport { GameContext } from '../context/GameContext';\r\nimport { tiles } from '../data/tiles';\r\n\r\nconst delay = ms => new Promise(res => setTimeout(res, ms));\r\n\r\nconst GameController = () => {\r\n  const {\r\n    players, setPlayers,\r\n    currentPlayerIndex,\r\n    originalCount, setIsMoving\r\n  } = useContext(GameContext);\r\n\r\n  useEffect(() => {\r\n    const movePlayer = async () => {\r\n      if (originalCount <= 0) return;\r\n      let count = originalCount;\r\n      const updated = [...players];\r\n      const player = updated[currentPlayerIndex];\r\n\r\n      while (count > 0) {\r\n        await delay(500);\r\n        const currentTile = tiles.find(t => t.id === player.tileId);\r\n        let options = currentTile.next.filter(o => o.from !== player.prevTile);\r\n        let nextId;\r\n\r\n        if (options.length === 1) {\r\n          nextId = options[0].to;\r\n        } else {\r\n          const rollType = originalCount === 7 ? 'any' : (originalCount < 7 ? 'below' : 'above');\r\n          nextId = options.find(o => o.roll === rollType) || options[0];\r\n          nextId = nextId.to;\r\n        }\r\n\r\n        player.prevTile = player.tileId;\r\n        player.tileId = nextId;\r\n        setPlayers([...updated]);\r\n        count--;\r\n      }\r\n\r\n      setIsMoving(false);\r\n    };\r\n\r\n    movePlayer();\r\n  }, [originalCount, players, currentPlayerIndex, setPlayers, setIsMoving]);\r\n\r\n  return null;\r\n};\r\n\r\nexport default GameController;\r\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC7C,SAASC,WAAW,QAAQ,wBAAwB;AACpD,SAASC,KAAK,QAAQ,eAAe;AAErC,MAAMC,KAAK,GAAGC,EAAE,IAAI,IAAIC,OAAO,CAACC,GAAG,IAAIC,UAAU,CAACD,GAAG,EAAEF,EAAE,CAAC,CAAC;AAE3D,MAAMI,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM;IACJC,OAAO;IAAEC,UAAU;IACnBC,kBAAkB;IAClBC,aAAa;IAAEC;EACjB,CAAC,GAAGd,UAAU,CAACC,WAAW,CAAC;EAE3BF,SAAS,CAAC,MAAM;IACd,MAAMgB,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAIF,aAAa,IAAI,CAAC,EAAE;MACxB,IAAIG,KAAK,GAAGH,aAAa;MACzB,MAAMI,OAAO,GAAG,CAAC,GAAGP,OAAO,CAAC;MAC5B,MAAMQ,MAAM,GAAGD,OAAO,CAACL,kBAAkB,CAAC;MAE1C,OAAOI,KAAK,GAAG,CAAC,EAAE;QAChB,MAAMb,KAAK,CAAC,GAAG,CAAC;QAChB,MAAMgB,WAAW,GAAGjB,KAAK,CAACkB,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKJ,MAAM,CAACK,MAAM,CAAC;QAC3D,IAAIC,OAAO,GAAGL,WAAW,CAACM,IAAI,CAACC,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,KAAKV,MAAM,CAACW,QAAQ,CAAC;QACtE,IAAIC,MAAM;QAEV,IAAIN,OAAO,CAACO,MAAM,KAAK,CAAC,EAAE;UACxBD,MAAM,GAAGN,OAAO,CAAC,CAAC,CAAC,CAACQ,EAAE;QACxB,CAAC,MAAM;UACL,MAAMC,QAAQ,GAAGpB,aAAa,KAAK,CAAC,GAAG,KAAK,GAAIA,aAAa,GAAG,CAAC,GAAG,OAAO,GAAG,OAAQ;UACtFiB,MAAM,GAAGN,OAAO,CAACJ,IAAI,CAACO,CAAC,IAAIA,CAAC,CAACO,IAAI,KAAKD,QAAQ,CAAC,IAAIT,OAAO,CAAC,CAAC,CAAC;UAC7DM,MAAM,GAAGA,MAAM,CAACE,EAAE;QACpB;QAEAd,MAAM,CAACW,QAAQ,GAAGX,MAAM,CAACK,MAAM;QAC/BL,MAAM,CAACK,MAAM,GAAGO,MAAM;QACtBnB,UAAU,CAAC,CAAC,GAAGM,OAAO,CAAC,CAAC;QACxBD,KAAK,EAAE;MACT;MAEAF,WAAW,CAAC,KAAK,CAAC;IACpB,CAAC;IAEDC,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACF,aAAa,EAAEH,OAAO,EAAEE,kBAAkB,EAAED,UAAU,EAAEG,WAAW,CAAC,CAAC;EAEzE,OAAO,IAAI;AACb,CAAC;AAACL,EAAA,CAzCID,cAAc;AAAA2B,EAAA,GAAd3B,cAAc;AA2CpB,eAAeA,cAAc;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}