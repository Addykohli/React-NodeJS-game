{"ast":null,"code":"var _s = $RefreshSig$();\n// src/components/GameController.js\nimport { useContext, useEffect } from 'react';\nimport { GameContext } from '../context/GameContext';\nimport { tiles } from '../data/tiles';\nconst GameController = () => {\n  _s();\n  const {\n    players,\n    setPlayers,\n    currentPlayerIndex,\n    originalCount,\n    isMoving,\n    setOriginalCount,\n    setIsMoving\n  } = useContext(GameContext);\n  useEffect(() => {\n    if (!isMoving || originalCount <= 0) return;\n    const moveLoop = async () => {\n      let steps = originalCount;\n      const updated = [...players];\n      const me = updated[currentPlayerIndex];\n      while (steps > 0) {\n        const current = tiles.find(t => t.id === me.tileId);\n        let opts = current.next.filter(o => o.from !== me.prevTile);\n        let nextId;\n        if (opts.length === 1) {\n          nextId = opts[0].to;\n        } else {\n          var _opts$find;\n          const rollType = originalCount === 7 ? null : originalCount < 7 ? 'below' : 'above';\n          nextId = rollType ? ((_opts$find = opts.find(o => o.roll === rollType)) === null || _opts$find === void 0 ? void 0 : _opts$find.to) || opts[0].to : opts[0].to;\n        }\n        me.prevTile = me.tileId;\n        me.tileId = nextId;\n        setPlayers([...updated]);\n        steps--;\n        await new Promise(r => setTimeout(r, 400));\n      }\n      setOriginalCount(0);\n      setIsMoving(false);\n    };\n    moveLoop();\n  }, [isMoving, originalCount, players, currentPlayerIndex, setPlayers, setOriginalCount, setIsMoving]);\n  return null;\n};\n_s(GameController, \"GJ398X102JJw69VzjndjUtUcLrI=\");\n_c = GameController;\nexport default GameController;\nvar _c;\n$RefreshReg$(_c, \"GameController\");","map":{"version":3,"names":["useContext","useEffect","GameContext","tiles","GameController","_s","players","setPlayers","currentPlayerIndex","originalCount","isMoving","setOriginalCount","setIsMoving","moveLoop","steps","updated","me","current","find","t","id","tileId","opts","next","filter","o","from","prevTile","nextId","length","to","_opts$find","rollType","roll","Promise","r","setTimeout","_c","$RefreshReg$"],"sources":["C:/Users/addhy/Desktop/Business_web/client/src/components/GameController.js"],"sourcesContent":["// src/components/GameController.js\r\nimport { useContext, useEffect } from 'react';\r\nimport { GameContext } from '../context/GameContext';\r\nimport { tiles } from '../data/tiles';\r\n\r\nconst GameController = () => {\r\n  const {\r\n    players,\r\n    setPlayers,\r\n    currentPlayerIndex,\r\n    originalCount,\r\n    isMoving,\r\n    setOriginalCount,\r\n    setIsMoving\r\n  } = useContext(GameContext);\r\n\r\n  useEffect(() => {\r\n    if (!isMoving || originalCount <= 0) return;\r\n\r\n    const moveLoop = async () => {\r\n      let steps = originalCount;\r\n      const updated = [...players];\r\n      const me = updated[currentPlayerIndex];\r\n\r\n      while (steps > 0) {\r\n        const current = tiles.find((t) => t.id === me.tileId);\r\n        let opts = current.next.filter((o) => o.from !== me.prevTile);\r\n\r\n        let nextId;\r\n        if (opts.length === 1) {\r\n          nextId = opts[0].to;\r\n        } else {\r\n          const rollType =\r\n            originalCount === 7\r\n              ? null\r\n              : originalCount < 7\r\n              ? 'below'\r\n              : 'above';\r\n          nextId = rollType\r\n            ? opts.find((o) => o.roll === rollType)?.to || opts[0].to\r\n            : opts[0].to;\r\n        }\r\n\r\n        me.prevTile = me.tileId;\r\n        me.tileId = nextId;\r\n        setPlayers([...updated]);\r\n\r\n        steps--;\r\n        await new Promise((r) => setTimeout(r, 400));\r\n      }\r\n\r\n      setOriginalCount(0);\r\n      setIsMoving(false);\r\n    };\r\n\r\n    moveLoop();\r\n  }, [\r\n    isMoving,\r\n    originalCount,\r\n    players,\r\n    currentPlayerIndex,\r\n    setPlayers,\r\n    setOriginalCount,\r\n    setIsMoving\r\n  ]);\r\n\r\n  return null;\r\n};\r\n\r\nexport default GameController;\r\n"],"mappings":";AAAA;AACA,SAASA,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC7C,SAASC,WAAW,QAAQ,wBAAwB;AACpD,SAASC,KAAK,QAAQ,eAAe;AAErC,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM;IACJC,OAAO;IACPC,UAAU;IACVC,kBAAkB;IAClBC,aAAa;IACbC,QAAQ;IACRC,gBAAgB;IAChBC;EACF,CAAC,GAAGZ,UAAU,CAACE,WAAW,CAAC;EAE3BD,SAAS,CAAC,MAAM;IACd,IAAI,CAACS,QAAQ,IAAID,aAAa,IAAI,CAAC,EAAE;IAErC,MAAMI,QAAQ,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAIC,KAAK,GAAGL,aAAa;MACzB,MAAMM,OAAO,GAAG,CAAC,GAAGT,OAAO,CAAC;MAC5B,MAAMU,EAAE,GAAGD,OAAO,CAACP,kBAAkB,CAAC;MAEtC,OAAOM,KAAK,GAAG,CAAC,EAAE;QAChB,MAAMG,OAAO,GAAGd,KAAK,CAACe,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKJ,EAAE,CAACK,MAAM,CAAC;QACrD,IAAIC,IAAI,GAAGL,OAAO,CAACM,IAAI,CAACC,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACC,IAAI,KAAKV,EAAE,CAACW,QAAQ,CAAC;QAE7D,IAAIC,MAAM;QACV,IAAIN,IAAI,CAACO,MAAM,KAAK,CAAC,EAAE;UACrBD,MAAM,GAAGN,IAAI,CAAC,CAAC,CAAC,CAACQ,EAAE;QACrB,CAAC,MAAM;UAAA,IAAAC,UAAA;UACL,MAAMC,QAAQ,GACZvB,aAAa,KAAK,CAAC,GACf,IAAI,GACJA,aAAa,GAAG,CAAC,GACjB,OAAO,GACP,OAAO;UACbmB,MAAM,GAAGI,QAAQ,GACb,EAAAD,UAAA,GAAAT,IAAI,CAACJ,IAAI,CAAEO,CAAC,IAAKA,CAAC,CAACQ,IAAI,KAAKD,QAAQ,CAAC,cAAAD,UAAA,uBAArCA,UAAA,CAAuCD,EAAE,KAAIR,IAAI,CAAC,CAAC,CAAC,CAACQ,EAAE,GACvDR,IAAI,CAAC,CAAC,CAAC,CAACQ,EAAE;QAChB;QAEAd,EAAE,CAACW,QAAQ,GAAGX,EAAE,CAACK,MAAM;QACvBL,EAAE,CAACK,MAAM,GAAGO,MAAM;QAClBrB,UAAU,CAAC,CAAC,GAAGQ,OAAO,CAAC,CAAC;QAExBD,KAAK,EAAE;QACP,MAAM,IAAIoB,OAAO,CAAEC,CAAC,IAAKC,UAAU,CAACD,CAAC,EAAE,GAAG,CAAC,CAAC;MAC9C;MAEAxB,gBAAgB,CAAC,CAAC,CAAC;MACnBC,WAAW,CAAC,KAAK,CAAC;IACpB,CAAC;IAEDC,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,CACDH,QAAQ,EACRD,aAAa,EACbH,OAAO,EACPE,kBAAkB,EAClBD,UAAU,EACVI,gBAAgB,EAChBC,WAAW,CACZ,CAAC;EAEF,OAAO,IAAI;AACb,CAAC;AAACP,EAAA,CA9DID,cAAc;AAAAiC,EAAA,GAAdjC,cAAc;AAgEpB,eAAeA,cAAc;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}