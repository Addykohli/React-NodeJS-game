{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\addhy\\\\Desktop\\\\Business_web - Copy (2)\\\\client\\\\src\\\\components\\\\PropertyDisplay.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport { tiles } from '../data/tiles';\nimport { GameContext } from '../context/GameContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PropertyDisplay = () => {\n  _s();\n  const [expandedIndex, setExpandedIndex] = useState(null);\n  const {\n    player\n  } = useContext(GameContext);\n\n  // Get only current player's properties\n  const ownedProperties = tiles.filter(tile => tile.type === 'property').filter(tile => {\n    var _player$properties;\n    return player === null || player === void 0 ? void 0 : (_player$properties = player.properties) === null || _player$properties === void 0 ? void 0 : _player$properties.includes(tile.id);\n  });\n  const handlePropertyClick = index => {\n    // Don't allow clicking the last property as it's always expanded\n    if (index === ownedProperties.length - 1) return;\n    const clickedProperty = ownedProperties[index];\n    console.log(`[clicked on property name: ${clickedProperty.name}]`);\n    if (expandedIndex === index) {\n      // Collapsing current property\n      const movingProperties = ownedProperties.slice(index + 1, -1).map(p => p.name).join(', ');\n      console.log(`moving ${movingProperties} back to left`);\n    } else {\n      // Expanding new property\n      const movingProperties = ownedProperties.slice(index + 1).map(p => p.name).join(', ');\n      console.log(`moving ${movingProperties} to the right`);\n    }\n    setExpandedIndex(expandedIndex === index ? null : index);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'absolute',\n      top: '100%',\n      left: '50%',\n      transform: 'translateX(-50%)',\n      height: '200px',\n      display: 'flex',\n      alignItems: 'flex-start',\n      overflow: 'visible',\n      marginTop: '-3px',\n      width: '800px',\n      justifyContent: 'center'\n    },\n    children: ownedProperties.map((property, index) => {\n      const isLastProperty = index === ownedProperties.length - 1;\n      const isExpanded = isLastProperty || expandedIndex === index;\n\n      // Calculate position based on expanded state\n      let position = index * 40; // Base position with 40px offset between cards\n\n      if (expandedIndex !== null && !isLastProperty) {\n        if (index > expandedIndex) {\n          position += 70; // Push cards after expanded one further right\n        }\n      }\n\n      // Always push cards before the last one left if it's not expanded\n      if (isLastProperty && expandedIndex !== null && expandedIndex !== ownedProperties.length - 1) {\n        position -= 70;\n      }\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '150px',\n          height: '200px',\n          border: '2px solid #666',\n          borderRadius: '12px',\n          position: 'absolute',\n          left: position,\n          transition: 'all 0.3s ease',\n          zIndex: isExpanded ? ownedProperties.length : index,\n          display: 'flex',\n          flexDirection: 'column',\n          padding: '10px',\n          boxSizing: 'border-box',\n          backgroundColor: 'rgba(173, 216, 230, 0.7)'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            transform: 'rotate(-90deg)',\n            transformOrigin: 'left center',\n            position: 'absolute',\n            width: '200px',\n            height: '150px',\n            top: '100px',\n            left: '75px',\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'flex-start',\n            justifyContent: 'flex-start',\n            color: '#333',\n            fontSize: '1.2rem',\n            fontWeight: 'bold',\n            padding: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => !isLastProperty && handlePropertyClick(index),\n            style: {\n              fontSize: '1.4rem',\n              marginBottom: '10px',\n              textAlign: 'left',\n              whiteSpace: 'nowrap',\n              overflow: 'hidden',\n              textOverflow: 'ellipsis',\n              maxWidth: '180px',\n              width: '100%',\n              cursor: isLastProperty ? 'default' : 'pointer'\n            },\n            children: property.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: '1rem',\n              opacity: isExpanded ? 1 : 0,\n              transition: 'opacity 0.3s ease',\n              textAlign: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Cost: $\", property.cost]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Rent: $\", property.rent]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)\n      }, property.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(PropertyDisplay, \"eCvCxn43TS0T8d8heLG6DqhecZ0=\");\n_c = PropertyDisplay;\nexport default PropertyDisplay;\nvar _c;\n$RefreshReg$(_c, \"PropertyDisplay\");","map":{"version":3,"names":["React","useState","useContext","tiles","GameContext","jsxDEV","_jsxDEV","PropertyDisplay","_s","expandedIndex","setExpandedIndex","player","ownedProperties","filter","tile","type","_player$properties","properties","includes","id","handlePropertyClick","index","length","clickedProperty","console","log","name","movingProperties","slice","map","p","join","style","position","top","left","transform","height","display","alignItems","overflow","marginTop","width","justifyContent","children","property","isLastProperty","isExpanded","border","borderRadius","transition","zIndex","flexDirection","padding","boxSizing","backgroundColor","transformOrigin","color","fontSize","fontWeight","onClick","marginBottom","textAlign","whiteSpace","textOverflow","maxWidth","cursor","fileName","_jsxFileName","lineNumber","columnNumber","opacity","cost","rent","_c","$RefreshReg$"],"sources":["C:/Users/addhy/Desktop/Business_web - Copy (2)/client/src/components/PropertyDisplay.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\nimport { tiles } from '../data/tiles';\nimport { GameContext } from '../context/GameContext';\n\nconst PropertyDisplay = () => {\n  const [expandedIndex, setExpandedIndex] = useState(null);\n  const { player } = useContext(GameContext);\n\n  // Get only current player's properties\n  const ownedProperties = tiles\n    .filter(tile => tile.type === 'property')\n    .filter(tile => player?.properties?.includes(tile.id));\n\n  const handlePropertyClick = (index) => {\n    // Don't allow clicking the last property as it's always expanded\n    if (index === ownedProperties.length - 1) return;\n\n    const clickedProperty = ownedProperties[index];\n    console.log(`[clicked on property name: ${clickedProperty.name}]`);\n\n    if (expandedIndex === index) {\n      // Collapsing current property\n      const movingProperties = ownedProperties\n        .slice(index + 1, -1)\n        .map(p => p.name)\n        .join(', ');\n      console.log(`moving ${movingProperties} back to left`);\n    } else {\n      // Expanding new property\n      const movingProperties = ownedProperties\n        .slice(index + 1)\n        .map(p => p.name)\n        .join(', ');\n      console.log(`moving ${movingProperties} to the right`);\n    }\n\n    setExpandedIndex(expandedIndex === index ? null : index);\n  };\n\n  return (\n    <div style={{\n      position: 'absolute',\n      top: '100%',\n      left: '50%',\n      transform: 'translateX(-50%)',\n      height: '200px',\n      display: 'flex',\n      alignItems: 'flex-start',\n      overflow: 'visible',\n      marginTop: '-3px',\n      width: '800px',\n      justifyContent: 'center'\n    }}>\n      {ownedProperties.map((property, index) => {\n        const isLastProperty = index === ownedProperties.length - 1;\n        const isExpanded = isLastProperty || expandedIndex === index;\n        \n        // Calculate position based on expanded state\n        let position = index * 40; // Base position with 40px offset between cards\n        \n        if (expandedIndex !== null && !isLastProperty) {\n          if (index > expandedIndex) {\n            position += 70; // Push cards after expanded one further right\n          }\n        }\n        \n        // Always push cards before the last one left if it's not expanded\n        if (isLastProperty && expandedIndex !== null && expandedIndex !== ownedProperties.length - 1) {\n          position -= 70;\n        }\n        \n        return (\n          <div\n            key={property.id}\n            style={{\n              width: '150px',\n              height: '200px',\n              border: '2px solid #666',\n              borderRadius: '12px',\n              position: 'absolute',\n              left: position,\n              transition: 'all 0.3s ease',\n              zIndex: isExpanded ? ownedProperties.length : index,\n              display: 'flex',\n              flexDirection: 'column',\n              padding: '10px',\n              boxSizing: 'border-box',\n              backgroundColor: 'rgba(173, 216, 230, 0.7)'\n            }}\n          >\n            <div style={{\n              transform: 'rotate(-90deg)',\n              transformOrigin: 'left center',\n              position: 'absolute',\n              width: '200px',\n              height: '150px',\n              top: '100px',\n              left: '75px',\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'flex-start',\n              justifyContent: 'flex-start',\n              color: '#333',\n              fontSize: '1.2rem',\n              fontWeight: 'bold',\n              padding: '10px'\n            }}>\n              <div\n                onClick={() => !isLastProperty && handlePropertyClick(index)}\n                style={{\n                  fontSize: '1.4rem',\n                  marginBottom: '10px',\n                  textAlign: 'left',\n                  whiteSpace: 'nowrap',\n                  overflow: 'hidden',\n                  textOverflow: 'ellipsis',\n                  maxWidth: '180px',\n                  width: '100%',\n                  cursor: isLastProperty ? 'default' : 'pointer'\n                }}>\n                {property.name}\n              </div>\n              <div style={{\n                fontSize: '1rem',\n                opacity: isExpanded ? 1 : 0,\n                transition: 'opacity 0.3s ease',\n                textAlign: 'center'\n              }}>\n                <div>Cost: ${property.cost}</div>\n                <div>Rent: ${property.rent}</div>\n              </div>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default PropertyDisplay; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}