{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\addhy\\\\Desktop\\\\Business_web - Copy (2)\\\\client\\\\src\\\\components\\\\PropertyDisplay.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext, useEffect } from 'react';\nimport { tiles } from '../data/tiles';\nimport { GameContext } from '../context/GameContext';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PropertyDisplay = () => {\n  _s();\n  const [expandedIndexes, setExpandedIndexes] = useState({});\n  const {\n    gameState,\n    currentPlayerId,\n    player\n  } = useContext(GameContext);\n\n  // Get properties for current player\n  const getCurrentPlayerProperties = () => {\n    return tiles.filter(tile => tile.type === 'property').filter(tile => {\n      var _player$properties;\n      return player === null || player === void 0 ? void 0 : (_player$properties = player.properties) === null || _player$properties === void 0 ? void 0 : _player$properties.includes(tile.id);\n    });\n  };\n\n  // Get properties for other players\n  const getOtherPlayerProperties = playerId => {\n    var _gameState$players;\n    // Get player from gameState\n    const targetPlayer = gameState === null || gameState === void 0 ? void 0 : (_gameState$players = gameState.players) === null || _gameState$players === void 0 ? void 0 : _gameState$players[playerId];\n    if (!(targetPlayer !== null && targetPlayer !== void 0 && targetPlayer.properties)) return [];\n    return tiles.filter(tile => tile.type === 'property').filter(tile => targetPlayer.properties.includes(tile.id));\n  };\n\n  // Get the IDs of players on the left side of the board\n  const getLeftSidePlayers = () => {\n    if (!(gameState !== null && gameState !== void 0 && gameState.players)) return [];\n\n    // Get all players and their positions\n    return Object.entries(gameState.players).filter(([id, p]) => {\n      console.log('Checking player position:', id, p.position);\n      return p.position === 'left' || p.boardPosition === 'left';\n    }).map(([id]) => id);\n  };\n  const handlePropertyClick = (playerId, index, properties) => {\n    if (index === properties.length - 1) return;\n    setExpandedIndexes(prev => ({\n      ...prev,\n      [playerId]: prev[playerId] === index ? null : index\n    }));\n  };\n  const renderPropertyStack = (position, playerId) => {\n    var _gameState$players2, _gameState$players2$p, _gameState$players3, _gameState$players3$p;\n    const isLeftSide = position === 'left';\n    const playerProperties = isLeftSide ? getOtherPlayerProperties(playerId) : getCurrentPlayerProperties();\n    if (!playerProperties || playerProperties.length === 0) {\n      console.log(`No properties found for ${position} player ${playerId}`);\n      return null;\n    }\n    console.log(`Rendering ${position} properties for player ${playerId}:`, playerProperties);\n    const containerStyle = {\n      position: 'absolute',\n      display: 'flex',\n      alignItems: 'flex-start',\n      overflow: 'visible',\n      zIndex: 1,\n      ...(isLeftSide ? {\n        flexDirection: 'column',\n        right: '-10px',\n        height: '800px',\n        // Position based on player's specific position in gameState\n        top: (gameState === null || gameState === void 0 ? void 0 : (_gameState$players2 = gameState.players) === null || _gameState$players2 === void 0 ? void 0 : (_gameState$players2$p = _gameState$players2[playerId]) === null || _gameState$players2$p === void 0 ? void 0 : _gameState$players2$p.boardPosition) === 'left-top' ? '0%' : '50%',\n        bottom: (gameState === null || gameState === void 0 ? void 0 : (_gameState$players3 = gameState.players) === null || _gameState$players3 === void 0 ? void 0 : (_gameState$players3$p = _gameState$players3[playerId]) === null || _gameState$players3$p === void 0 ? void 0 : _gameState$players3$p.boardPosition) === 'left-top' ? '50%' : '0%',\n        justifyContent: 'center'\n      } : {\n        top: '100%',\n        left: '50%',\n        transform: 'translateX(calc(-50% + 50px))',\n        height: '280px',\n        marginTop: '-3px',\n        width: '800px',\n        justifyContent: 'center'\n      })\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: containerStyle,\n      children: playerProperties.map((property, index) => {\n        const isLastProperty = index === playerProperties.length - 1;\n        const isExpanded = isLastProperty || expandedIndexes[playerId] === index;\n        const basePosition = isLeftSide ? index * 42 : index * 56;\n        let expandedOffset = 0;\n        if (expandedIndexes[playerId] !== null && expandedIndexes[playerId] !== undefined) {\n          if (index > expandedIndexes[playerId]) {\n            expandedOffset = isLeftSide ? 154 : 154;\n          }\n        }\n        const finalPosition = basePosition + expandedOffset;\n        const cardStyle = {\n          width: '210px',\n          height: '280px',\n          border: '2px solid #666',\n          borderRadius: '12px',\n          position: 'absolute',\n          transition: 'all 0.3s ease',\n          zIndex: isExpanded ? playerProperties.length : index,\n          display: 'flex',\n          flexDirection: 'column',\n          padding: '14px',\n          boxSizing: 'border-box',\n          backgroundColor: 'rgb(173, 216, 230)',\n          cursor: isLastProperty ? 'default' : 'pointer',\n          ...(isLeftSide ? {\n            top: finalPosition,\n            transform: 'rotate(90deg)',\n            transformOrigin: 'top left'\n          } : {\n            left: finalPosition\n          })\n        };\n        const textContainerStyle = {\n          transform: 'rotate(-90deg)',\n          transformOrigin: 'left center',\n          position: 'absolute',\n          width: '280px',\n          height: '210px',\n          ...(isLeftSide ? {\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'flex-start',\n            justifyContent: 'flex-start',\n            padding: '14px'\n          } : {\n            top: '140px',\n            left: '105px',\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'flex-start',\n            justifyContent: 'flex-start',\n            padding: '14px'\n          })\n        };\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => !isLastProperty && handlePropertyClick(playerId, index, playerProperties),\n          style: cardStyle,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: textContainerStyle,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: '1.96rem',\n                marginBottom: '14px',\n                textAlign: 'left',\n                whiteSpace: 'nowrap',\n                overflow: 'hidden',\n                textOverflow: 'ellipsis',\n                maxWidth: '252px',\n                width: '100%',\n                color: '#333'\n              },\n              children: property.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: '1.4rem',\n                opacity: 1,\n                textAlign: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Cost: $\", property.cost]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Rent: $\", property.rent]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this)\n        }, property.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this);\n      })\n    }, `${position}-${playerId}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this);\n  };\n  useEffect(() => {\n    console.log('PropertyDisplay mounted/updated');\n    console.log('GameState:', gameState);\n    console.log('Left side players:', getLeftSidePlayers());\n    if (gameState !== null && gameState !== void 0 && gameState.players) {\n      Object.entries(gameState.players).forEach(([id, player]) => {\n        console.log(`Player ${id} position:`, player.position || player.boardPosition);\n        console.log(`Player ${id} properties:`, player.properties);\n      });\n    }\n  }, [gameState]);\n  const leftPlayers = getLeftSidePlayers();\n  console.log('Left players found:', leftPlayers);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [renderPropertyStack('top', currentPlayerId), leftPlayers.length > 0 ? leftPlayers.map(playerId => renderPropertyStack('left', playerId)) : console.log('No left-side players found')]\n  }, void 0, true);\n};\n_s(PropertyDisplay, \"clNenVyJkZY2hVuNYaigMB+3sJY=\");\n_c = PropertyDisplay;\nexport default PropertyDisplay;\nvar _c;\n$RefreshReg$(_c, \"PropertyDisplay\");","map":{"version":3,"names":["React","useState","useContext","useEffect","tiles","GameContext","jsxDEV","_jsxDEV","Fragment","_Fragment","PropertyDisplay","_s","expandedIndexes","setExpandedIndexes","gameState","currentPlayerId","player","getCurrentPlayerProperties","filter","tile","type","_player$properties","properties","includes","id","getOtherPlayerProperties","playerId","_gameState$players","targetPlayer","players","getLeftSidePlayers","Object","entries","p","console","log","position","boardPosition","map","handlePropertyClick","index","length","prev","renderPropertyStack","_gameState$players2","_gameState$players2$p","_gameState$players3","_gameState$players3$p","isLeftSide","playerProperties","containerStyle","display","alignItems","overflow","zIndex","flexDirection","right","height","top","bottom","justifyContent","left","transform","marginTop","width","style","children","property","isLastProperty","isExpanded","basePosition","expandedOffset","undefined","finalPosition","cardStyle","border","borderRadius","transition","padding","boxSizing","backgroundColor","cursor","transformOrigin","textContainerStyle","onClick","fontSize","marginBottom","textAlign","whiteSpace","textOverflow","maxWidth","color","name","fileName","_jsxFileName","lineNumber","columnNumber","opacity","cost","rent","forEach","leftPlayers","_c","$RefreshReg$"],"sources":["C:/Users/addhy/Desktop/Business_web - Copy (2)/client/src/components/PropertyDisplay.js"],"sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport { tiles } from '../data/tiles';\nimport { GameContext } from '../context/GameContext';\n\nconst PropertyDisplay = () => {\n  const [expandedIndexes, setExpandedIndexes] = useState({});\n  const { gameState, currentPlayerId, player } = useContext(GameContext);\n\n  // Get properties for current player\n  const getCurrentPlayerProperties = () => {\n    return tiles\n      .filter(tile => tile.type === 'property')\n      .filter(tile => player?.properties?.includes(tile.id));\n  };\n\n  // Get properties for other players\n  const getOtherPlayerProperties = (playerId) => {\n    // Get player from gameState\n    const targetPlayer = gameState?.players?.[playerId];\n    if (!targetPlayer?.properties) return [];\n\n    return tiles\n      .filter(tile => tile.type === 'property')\n      .filter(tile => targetPlayer.properties.includes(tile.id));\n  };\n\n  // Get the IDs of players on the left side of the board\n  const getLeftSidePlayers = () => {\n    if (!gameState?.players) return [];\n    \n    // Get all players and their positions\n    return Object.entries(gameState.players)\n      .filter(([id, p]) => {\n        console.log('Checking player position:', id, p.position);\n        return p.position === 'left' || p.boardPosition === 'left';\n      })\n      .map(([id]) => id);\n  };\n\n  const handlePropertyClick = (playerId, index, properties) => {\n    if (index === properties.length - 1) return;\n\n    setExpandedIndexes(prev => ({\n      ...prev,\n      [playerId]: prev[playerId] === index ? null : index\n    }));\n  };\n\n  const renderPropertyStack = (position, playerId) => {\n    const isLeftSide = position === 'left';\n    const playerProperties = isLeftSide ? \n      getOtherPlayerProperties(playerId) :\n      getCurrentPlayerProperties();\n\n    if (!playerProperties || playerProperties.length === 0) {\n      console.log(`No properties found for ${position} player ${playerId}`);\n      return null;\n    }\n\n    console.log(`Rendering ${position} properties for player ${playerId}:`, playerProperties);\n\n    const containerStyle = {\n      position: 'absolute',\n      display: 'flex',\n      alignItems: 'flex-start',\n      overflow: 'visible',\n      zIndex: 1,\n      ...(isLeftSide ? {\n        flexDirection: 'column',\n        right: '-10px',\n        height: '800px',\n        // Position based on player's specific position in gameState\n        top: gameState?.players?.[playerId]?.boardPosition === 'left-top' ? '0%' : '50%',\n        bottom: gameState?.players?.[playerId]?.boardPosition === 'left-top' ? '50%' : '0%',\n        justifyContent: 'center'\n      } : {\n        top: '100%',\n        left: '50%',\n        transform: 'translateX(calc(-50% + 50px))',\n        height: '280px',\n        marginTop: '-3px',\n        width: '800px',\n        justifyContent: 'center'\n      })\n    };\n\n    return (\n      <div key={`${position}-${playerId}`} style={containerStyle}>\n        {playerProperties.map((property, index) => {\n          const isLastProperty = index === playerProperties.length - 1;\n          const isExpanded = isLastProperty || expandedIndexes[playerId] === index;\n          \n          const basePosition = isLeftSide ? \n            index * 42 :\n            index * 56;\n          \n          let expandedOffset = 0;\n          if (expandedIndexes[playerId] !== null && expandedIndexes[playerId] !== undefined) {\n            if (index > expandedIndexes[playerId]) {\n              expandedOffset = isLeftSide ? 154 : 154;\n            }\n          }\n\n          const finalPosition = basePosition + expandedOffset;\n          \n          const cardStyle = {\n            width: '210px',\n            height: '280px',\n            border: '2px solid #666',\n            borderRadius: '12px',\n            position: 'absolute',\n            transition: 'all 0.3s ease',\n            zIndex: isExpanded ? playerProperties.length : index,\n            display: 'flex',\n            flexDirection: 'column',\n            padding: '14px',\n            boxSizing: 'border-box',\n            backgroundColor: 'rgb(173, 216, 230)',\n            cursor: isLastProperty ? 'default' : 'pointer',\n            ...(isLeftSide ? {\n              top: finalPosition,\n              transform: 'rotate(90deg)',\n              transformOrigin: 'top left'\n            } : {\n              left: finalPosition\n            })\n          };\n\n          const textContainerStyle = {\n            transform: 'rotate(-90deg)',\n            transformOrigin: 'left center',\n            position: 'absolute',\n            width: '280px',\n            height: '210px',\n            ...(isLeftSide ? {\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'flex-start',\n              justifyContent: 'flex-start',\n              padding: '14px'\n            } : {\n              top: '140px',\n              left: '105px',\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'flex-start',\n              justifyContent: 'flex-start',\n              padding: '14px'\n            })\n          };\n\n          return (\n            <div\n              key={property.id}\n              onClick={() => !isLastProperty && handlePropertyClick(playerId, index, playerProperties)}\n              style={cardStyle}\n            >\n              <div style={textContainerStyle}>\n                <div style={{\n                  fontSize: '1.96rem',\n                  marginBottom: '14px',\n                  textAlign: 'left',\n                  whiteSpace: 'nowrap',\n                  overflow: 'hidden',\n                  textOverflow: 'ellipsis',\n                  maxWidth: '252px',\n                  width: '100%',\n                  color: '#333'\n                }}>\n                  {property.name}\n                </div>\n                <div style={{\n                  fontSize: '1.4rem',\n                  opacity: 1,\n                  textAlign: 'center'\n                }}>\n                  <div>Cost: ${property.cost}</div>\n                  <div>Rent: ${property.rent}</div>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    );\n  };\n\n  useEffect(() => {\n    console.log('PropertyDisplay mounted/updated');\n    console.log('GameState:', gameState);\n    console.log('Left side players:', getLeftSidePlayers());\n    if (gameState?.players) {\n      Object.entries(gameState.players).forEach(([id, player]) => {\n        console.log(`Player ${id} position:`, player.position || player.boardPosition);\n        console.log(`Player ${id} properties:`, player.properties);\n      });\n    }\n  }, [gameState]);\n\n  const leftPlayers = getLeftSidePlayers();\n  console.log('Left players found:', leftPlayers);\n\n  return (\n    <>\n      {/* Top stack - current player's properties */}\n      {renderPropertyStack('top', currentPlayerId)}\n      \n      {/* Left side stacks - properties for players on the left */}\n      {leftPlayers.length > 0 ? (\n        leftPlayers.map(playerId => \n          renderPropertyStack('left', playerId)\n        )\n      ) : (\n        console.log('No left-side players found')\n      )}\n    </>\n  );\n};\n\nexport default PropertyDisplay; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}